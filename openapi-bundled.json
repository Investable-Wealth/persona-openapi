{
  "openapi": "3.1.0",
  "info": {
    "title": "Persona API Reference",
    "version": "2023-01-05",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "contact": {
      "name": "Persona Support",
      "url": "https://help.withpersona.com/",
      "email": "support@withpersona.com"
    }
  },
  "servers": [
    {
      "url": "https://withpersona.com/api/v1"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Accounts",
      "description": "Interact with Persona Account objects"
    },
    {
      "name": "API Keys",
      "description": "Interact with your organization's API keys"
    },
    {
      "name": "API Logs",
      "description": "View your organization's API logs"
    },
    {
      "name": "Cases",
      "description": "Interact with Persona Case objects"
    },
    {
      "name": "Documents",
      "description": "Interact with Persona Document objects"
    },
    {
      "name": "Events",
      "description": "Endpoints for viewing your organization's events"
    },
    {
      "name": "Importers",
      "description": "Import external data as corresponding objects within Persona"
    },
    {
      "name": "Inquiries",
      "description": "Interact with Persona Inquiry objects"
    },
    {
      "name": "Inquiry Sessions",
      "description": "Interact with Persona Inquiry Session objects"
    },
    {
      "name": "List Items",
      "description": "Interact with Persona List Item objects"
    },
    {
      "name": "Lists",
      "description": "Interact with Persona List objects"
    },
    {
      "name": "OAuth",
      "description": "Share access to a Persona object with another organization"
    },
    {
      "name": "Reports",
      "description": "Interact with Persona Report objects"
    },
    {
      "name": "Transactions",
      "description": "Interact with Persona Transaction objects"
    },
    {
      "name": "User Audit Logs",
      "description": "View your organization's User Audit logs"
    },
    {
      "name": "Verifications",
      "description": "Interact with Persona Verification objects"
    },
    {
      "name": "Phone Carrier Database Verifications",
      "description": "Interact with Phone Carrier Database Verifications"
    },
    {
      "name": "Serpro Database Verifications",
      "description": "Interact with Serpro Database Verifications"
    },
    {
      "name": "TIN Database Verifications",
      "description": "Interact with TIN Database Verifications"
    },
    {
      "name": "Database Verifications",
      "description": "Interact with Database Verifications"
    },
    {
      "name": "Database Standard Verifications",
      "description": "Interact with Database Standard Verifications"
    },
    {
      "name": "Document Verifications",
      "description": "Interact with Document Verifications"
    },
    {
      "name": "Email Address Verifications",
      "description": "Interact with Email Address Verifications"
    },
    {
      "name": "Government ID Verifications",
      "description": "Interact with Government ID Verifications"
    },
    {
      "name": "Phone Number Verifications",
      "description": "Interact with Phone Number Verifications"
    },
    {
      "name": "Selfie Verifications",
      "description": "Interact with Selfie Verifications"
    },
    {
      "name": "Webhooks",
      "description": "Interact with Webhooks"
    },
    {
      "name": "Workflows",
      "description": "Interact with Persona Workflow objects"
    }
  ],
  "paths": {
    "/accounts": {
      "get": {
        "description": "Returns a list of your organization's <<glossary:account>>(s).",
        "operationId": "list-all-accounts",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "in": "query",
            "name": "page",
            "style": "deepObject",
            "allowReserved": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/NestedPaginationQueryParams"
                },
                {
                  "type": "object",
                  "properties": {
                    "after": {
                      "example": "act_ABC123"
                    },
                    "before": {
                      "example": "act_ABC123"
                    }
                  }
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "filter",
            "style": "deepObject",
            "allowReserved": true,
            "schema": {
              "type": "object",
              "properties": {
                "reference-id": {
                  "description": "Filter accounts by reference ID",
                  "type": "string"
                }
              }
            }
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": [
                        {
                          "type": "account",
                          "id": "act_ef2mUFHAejxf2XJ5qzU4uMQb",
                          "attributes": {
                            "reference-id": null,
                            "created-at": "2020-01-02T17:42:27.000Z",
                            "updated-at": "2020-01-02T18:06:41.000Z"
                          }
                        },
                        {
                          "type": "account",
                          "id": "act_YcNZJLxuwEuV8jUPbykYQyXG",
                          "attributes": {
                            "reference-id": "Mike's test",
                            "created-at": "2019-12-19T21:42:49.000Z",
                            "updated-at": "2019-12-19T21:42:49.000Z"
                          }
                        },
                        {
                          "type": "account",
                          "id": "act_2wM8yufwLrbMV6kUtGPBxeGS",
                          "attributes": {
                            "reference-id": null,
                            "created-at": "2019-12-18T22:43:03.000Z",
                            "updated-at": "2019-12-18T22:43:03.000Z"
                          }
                        },
                        {
                          "type": "account",
                          "id": "act_LatvE1PdVhfiwcJWVLj4Z25j",
                          "attributes": {
                            "reference-id": null,
                            "created-at": "2019-12-13T08:34:10.000Z",
                            "updated-at": "2019-12-13T08:34:10.000Z"
                          }
                        },
                        {
                          "type": "account",
                          "id": "act_RU3JgzXaAzVV2g2NYLd7ub12",
                          "attributes": {
                            "reference-id": null,
                            "created-at": "2019-12-13T08:32:49.000Z",
                            "updated-at": "2019-12-13T08:33:29.000Z"
                          }
                        },
                        {
                          "type": "account",
                          "id": "act_Eoe14YQ7efbiH73zkTFAkveB",
                          "attributes": {
                            "reference-id": null,
                            "created-at": "2019-12-12T20:50:55.000Z",
                            "updated-at": "2019-12-12T20:50:55.000Z"
                          }
                        },
                        {
                          "type": "account",
                          "id": "act_X5LmoEaYASq3ahQmRRTpMG1t",
                          "attributes": {
                            "reference-id": null,
                            "created-at": "2019-12-05T20:56:43.000Z",
                            "updated-at": "2019-12-05T20:56:43.000Z"
                          }
                        },
                        {
                          "type": "account",
                          "id": "act_6LRELcKmPcx9MxYGk6mdCPJo",
                          "attributes": {
                            "reference-id": null,
                            "created-at": "2019-11-19T00:10:27.000Z",
                            "updated-at": "2019-11-19T00:10:27.000Z"
                          }
                        },
                        {
                          "type": "account",
                          "id": "act_1bRzHZSH17PpXCCnMGoYhzde",
                          "attributes": {
                            "reference-id": null,
                            "created-at": "2019-11-18T17:38:03.000Z",
                            "updated-at": "2019-11-18T17:38:03.000Z"
                          }
                        },
                        {
                          "type": "account",
                          "id": "act_u2Dgz8U3CmxTVgqEH9qzezHi",
                          "attributes": {
                            "reference-id": null,
                            "created-at": "2019-11-15T22:14:41.000Z",
                            "updated-at": "2019-11-15T22:14:41.000Z"
                          }
                        }
                      ],
                      "links": {
                        "prev": null,
                        "next": "/api/v1/accounts?page%5Bafter%5D=act_u2Dgz8U3CmxTVgqEH9qzezHi"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/Account"
                      },
                      "type": "array",
                      "description": "An array of Accounts"
                    },
                    "links": {
                      "properties": {
                        "next": {
                          "examples": [
                            "/api/v1/accounts?page%5Bafter%5D=act_u2Dgz8U3CmxTVgqEH9qzezHi"
                          ],
                          "type": "string"
                        },
                        "prev": {}
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "List all Accounts",
        "tags": [
          "Accounts"
        ]
      },
      "post": {
        "description": "Creates a new Account for your organization.",
        "operationId": "create-an-account",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "reference-id": {
                                "description": "Reference ID on Account, refers to an entity in your user model",
                                "type": "string"
                              },
                              "selfie-photo": {
                                "description": "Selfie photo.",
                                "properties": {
                                  "data": {
                                    "description": "Selfie photo data, must be an image. Can also be provided as an uploaded file such as with multipart/form-data requests instead of this object.",
                                    "properties": {
                                      "data": {
                                        "description": "Base64 encoded image",
                                        "type": "string"
                                      },
                                      "filename": {
                                        "description": "Name of the image",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "fields": {
                                "description": "Custom fields for the Account",
                                "type": "object",
                                "additionalProperties": true
                              },
                              "tags": {
                                "description": "A list of tag names that are associated to an Account.",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "country-code": {
                                "description": "ISO 3166-1 alpha 2 country code.",
                                "examples": [
                                  "US"
                                ],
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "social-security-number": {
                                "description": "Social security number.",
                                "examples": [
                                  "123-45-6789"
                                ],
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          },
                          {
                            "$ref": "#/components/schemas/DefaultFields"
                          }
                        ]
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "$ref": "#/components/examples/AccountResponse"
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Account"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Create an Account",
        "tags": [
          "Accounts"
        ]
      }
    },
    "/accounts/{account-id}": {
      "delete": {
        "description": "Permanently deletes personally identifiable information (PII) for an Account and all associated Inquiries, Verifications and Reports. This action cannot be undone. \n\nThis endpoint can be used to comply with privacy regulations such as GDPR / CCPA or to enforce data privacy.\n\nNote: An account is still updatable after redaction. If you want to delete data continuously, please reach out to us to help you setup a retention policy.",
        "operationId": "redact-an-account",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "account-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "$ref": "#/components/examples/AccountResponse"
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Account"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Redact an Account",
        "tags": [
          "Accounts"
        ]
      },
      "get": {
        "description": "Retrieve the details of an Account that has previously been created.",
        "operationId": "retrieve-an-account",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "account-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "$ref": "#/components/examples/AccountResponse"
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Account"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Retrieve an Account",
        "tags": [
          "Accounts"
        ]
      },
      "patch": {
        "description": "Updates an existing Account.",
        "operationId": "update-an-account",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "account-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "reference-id": {
                                "description": "Reference ID on Account, refers to an entity in your user model",
                                "type": "string"
                              },
                              "selfie-photo": {
                                "description": "Selfie photo.",
                                "properties": {
                                  "data": {
                                    "description": "Selfie photo data, must be an image. Can also be provided as an uploaded file such as with multipart/form-data requests instead of this object.",
                                    "properties": {
                                      "data": {
                                        "description": "Base64 encoded image",
                                        "type": "string"
                                      },
                                      "filename": {
                                        "description": "Name of the image",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "fields": {
                                "description": "Custom fields for the Account",
                                "type": "object",
                                "additionalProperties": true
                              },
                              "tags": {
                                "description": "A list of tag names that are associated to an Account.",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "country-code": {
                                "description": "ISO 3166-1 alpha 2 country code.",
                                "examples": [
                                  "US"
                                ],
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "social-security-number": {
                                "description": "Social security number.",
                                "examples": [
                                  "123-45-6789"
                                ],
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          },
                          {
                            "$ref": "#/components/schemas/DefaultFields"
                          }
                        ]
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "$ref": "#/components/examples/AccountResponse"
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Account"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Update an Account",
        "tags": [
          "Accounts"
        ]
      }
    },
    "/accounts/{account-id}/add-tag": {
      "post": {
        "description": "Add a new tag to an Account",
        "operationId": "accounts-add-tag",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "account-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "meta": {
                    "properties": {
                      "tag-name": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Account"
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "$ref": "#/components/examples/AccountResponse"
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Add a tag",
        "tags": [
          "Accounts"
        ]
      }
    },
    "/accounts/{account-id}/consolidate": {
      "post": {
        "description": "Consolidates several source Accounts' information into one target Account. Any Inquiry, Verification, Report and Document associated with the source Account will be transferred over to the destination Account. However, the Account's attributes will not be transferred. After consolidation, you can update the destination Account's attributes using the Account update endpoint.\n\nThis endpoint can be used to clean up duplicate Accounts.\n\nNote: A source account can only be consolidated once. Afterwards, the source account will be archived.",
        "operationId": "consolidate-into-an-account",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "Destination Account ID",
            "in": "path",
            "name": "account-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "meta": {
                    "properties": {
                      "source-account-ids": {
                        "description": "A list of Account IDs that need to be consolidated into the destination Account.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "Accepted",
                    "$ref": "#/components/examples/AccountResponse"
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Account"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Consolidate Accounts",
        "tags": [
          "Accounts"
        ]
      }
    },
    "/accounts/{account-id}/remove-tag": {
      "post": {
        "description": "Removes an existing tag from an Account",
        "operationId": "accounts-remove-tag",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "account-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "meta": {
                    "properties": {
                      "tag-name": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Account"
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "$ref": "#/components/examples/AccountResponse"
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Remove a tag",
        "tags": [
          "Accounts"
        ]
      }
    },
    "/accounts/{account-id}/set-tags": {
      "post": {
        "description": "Set all tags on an Account. Note that this removes any tags that are not provided.",
        "operationId": "accounts-set-all-tags",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "account-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "meta": {
                    "properties": {
                      "tag-name": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Account"
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "$ref": "#/components/examples/AccountResponse"
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Set all tags",
        "tags": [
          "Accounts"
        ]
      }
    },
    "/api-keys": {
      "get": {
        "description": "Returns a list of your organization's API keys.",
        "operationId": "list-all-api-keys",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "in": "query",
            "name": "page",
            "style": "deepObject",
            "allowReserved": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/NestedPaginationQueryParams"
                },
                {
                  "type": "object",
                  "properties": {
                    "after": {
                      "example": "api_ABC123"
                    },
                    "before": {
                      "example": "api_ABC123"
                    }
                  }
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "filter",
            "style": "deepObject",
            "allowReserved": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Filter API keys by name"
                }
              }
            }
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": [
                        {
                          "type": "api-key",
                          "id": "api_ABC123",
                          "attributes": {
                            "name": "Webhook ABC",
                            "note": null,
                            "api-version": "2023-01-05",
                            "api-key-inflection": "kebab",
                            "api-attributes-blocklist": [
                              "address-*",
                              "name-last",
                              "/data/attributes/fields/*-number"
                            ],
                            "permissions": [
                              "account.read",
                              "account.write",
                              "api_log.read"
                            ],
                            "ip-address-allowlist": [
                              "*"
                            ],
                            "file-access-token-expires-in": 21600,
                            "last-used-at": "2023-08-17T23:24:00.000Z",
                            "expires-at": null,
                            "created-at": "2023-08-17T23:18:13.000Z"
                          }
                        },
                        {
                          "type": "api-key",
                          "id": "api_ABC123",
                          "attributes": {
                            "name": "Webhook 123",
                            "note": null,
                            "api-version": "2023-01-05",
                            "api-key-inflection": "camel",
                            "api-attributes-blocklist": [],
                            "permissions": [
                              "account.read",
                              "account.write",
                              "api_log.read"
                            ],
                            "ip-address-allowlist": [
                              "192.158.1.38",
                              "123.456.7.89"
                            ],
                            "file-access-token-expires-in": 600,
                            "last-used-at": null,
                            "expires-at": null,
                            "created-at": "2023-08-17T23:18:13.000Z"
                          }
                        }
                      ],
                      "links": {
                        "prev": null,
                        "next": null
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/ApiKey"
                      },
                      "type": "array",
                      "description": "An array of API Keys"
                    },
                    "links": {
                      "properties": {
                        "next": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "prev": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "List all API keys",
        "tags": [
          "API Keys"
        ]
      },
      "post": {
        "description": "Make a new API key with response defaults and permissions.",
        "operationId": "create-an-api-key",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ApiKeyRequest"
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ApiKey"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Create an API key",
        "tags": [
          "API Keys"
        ]
      }
    },
    "/api-keys/{api-key-id}": {
      "get": {
        "description": "Get the information for a specific API key, including it's value.",
        "operationId": "retrieve-an-api-key",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "API key's ID (starts with \"api_\")",
            "in": "path",
            "name": "api-key-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ApiKey"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Retrieve an API key",
        "tags": [
          "API Keys"
        ]
      },
      "patch": {
        "description": "Update an existing API key.",
        "operationId": "update-an-api-key",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "API key's ID (starts with \"api_\")",
            "in": "path",
            "name": "api-key-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ApiKeyRequest"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ApiKey"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Update an API key",
        "tags": [
          "API Keys"
        ]
      }
    },
    "/api-keys/{api-key-id}/expire": {
      "post": {
        "description": "Deactivate an API key within some time period",
        "operationId": "expire-an-api-key",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "API key's ID (starts with \"api_\")",
            "in": "path",
            "name": "api-key-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "meta": {
                    "properties": {
                      "expires-in-seconds": {
                        "description": "Number of seconds from now to expire the key (max of 30 days)",
                        "type": "string"
                      }
                    },
                    "required": [
                      "expires-in-seconds"
                    ],
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ApiKey"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Expire an API key",
        "tags": [
          "API Keys"
        ]
      }
    },
    "/api-logs": {
      "get": {
        "description": "Returns a list of your organization's API Logs.",
        "operationId": "list-all-api-logs",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "in": "query",
            "name": "page",
            "style": "deepObject",
            "allowReserved": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/NestedPaginationQueryParams"
                },
                {
                  "type": "object",
                  "properties": {
                    "after": {
                      "example": "req_ABC123"
                    },
                    "before": {
                      "example": "req_ABC123"
                    }
                  }
                }
              ]
            }
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": [
                        {
                          "type": "api-log",
                          "id": "req_ABC123",
                          "attributes": {
                            "request": {
                              "method": "GET",
                              "path": "/api/v1/inquiries",
                              "headers": {
                                "Accept": "application/json",
                                "Host": "withpersona.com",
                                "Persona-Version": "2023-01-05",
                                "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/"
                              },
                              "get-params": {},
                              "post-params": {},
                              "ip-address": "127.0.0.1"
                            },
                            "response": {
                              "status": 200,
                              "headers": {
                                "Persona-Host": "us-central1 persona-web-web-77b874ff88-rrdk9 53e23b240",
                                "Cache-Control": "no-cache, no-store, max-age=0, must-revalidate",
                                "Pragma": "no-cache",
                                "Expires": "Fri, 01 Jan 1990 00:00:00 GMT",
                                "RateLimit-Limit": 300,
                                "RateLimit-Remaining": 299,
                                "RateLimit-Reset": 60,
                                "Request-Id": "req_ABC123",
                                "Content-Type": "application/json; charset=utf-8",
                                "Vary": "Accept"
                              }
                            },
                            "created-at": "2023-09-20T20:20:03.485+00:00"
                          }
                        },
                        {
                          "type": "api-log",
                          "id": "req_ABC123",
                          "attributes": {
                            "request": {
                              "method": "POST",
                              "path": "/api/v1/transactions",
                              "headers": {
                                "Accept": "application/json",
                                "Host": "withpersona.com",
                                "Persona-Version": "2023-01-05",
                                "User-Agent": "Apache-HttpClient/4.5.13 (Java/17.0.5)"
                              },
                              "get-params": {},
                              "post-params": {
                                "data": {
                                  "attributes": {
                                    "fields": {
                                      "name_first": "[FILTERED]"
                                    }
                                  },
                                  "transaction-type-id": "txntp_ABC123"
                                }
                              },
                              "ip-address": "127.0.0.1"
                            },
                            "response": {
                              "status": 201,
                              "headers": {
                                "Persona-Host": "us-central1 persona-web-web-7ffc974b4-rzqm7 f2180de27",
                                "Cache-Control": "no-cache, no-store, max-age=0, must-revalidate",
                                "Pragma": "no-cache",
                                "Expires": "Fri, 01 Jan 1990 00:00:00 GMT",
                                "RateLimit-Limit": 300,
                                "RateLimit-Remaining": 299,
                                "RateLimit-Reset": 60,
                                "Request-Id": "req_ABC123",
                                "Quota-Limit": 1000,
                                "Quota-Remaining": 999,
                                "Quota-Reset": 60,
                                "Content-Type": "application/json; charset=utf-8",
                                "Vary": "Accept"
                              }
                            },
                            "created-at": "2023-09-20T20:20:03.485+00:00"
                          }
                        },
                        {
                          "type": "api-log",
                          "id": "req_ABC123",
                          "attributes": {
                            "request": {
                              "method": "GET",
                              "path": "/api/v1/api-logs",
                              "headers": {
                                "Accept": "application/json",
                                "Host": "withpersona.com",
                                "Persona-Version": "2023-01-05",
                                "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36"
                              },
                              "get-params": {
                                "page": {
                                  "size": 5
                                }
                              },
                              "post-params": {},
                              "ip-address": "127.0.0.1"
                            },
                            "response": {
                              "status": 200,
                              "headers": {
                                "Persona-Host": "us-central1 persona-web-web-7ffc974b4-rzqm7 f2180de27",
                                "Cache-Control": "no-cache, no-store, max-age=0, must-revalidate",
                                "Pragma": "no-cache",
                                "Expires": "Fri, 01 Jan 1990 00:00:00 GMT",
                                "RateLimit-Limit": 300,
                                "RateLimit-Remaining": 299,
                                "RateLimit-Reset": 60,
                                "Request-Id": "req_ABC123",
                                "Content-Type": "application/json; charset=utf-8",
                                "Vary": "Accept"
                              }
                            },
                            "created-at": "2023-09-20T20:20:03.485+00:00"
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/ApiLog"
                      },
                      "type": "array",
                      "description": "An array of API Logs"
                    },
                    "links": {
                      "properties": {
                        "next": {
                          "examples": [
                            "/api/v1/api-logs?page%5Bafter%5D=req_19pQg1NHfYeUdpIvYZ54xmDz"
                          ],
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "prev": {
                          "examples": [
                            "/api/v1/api-logs?page%5Bbefore%5D=req_1ePP8j3pyznPCEuw4TCjWWD0"
                          ],
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "List all API Logs",
        "tags": [
          "API Logs"
        ]
      }
    },
    "/api-logs/{api-log-id}": {
      "get": {
        "description": "Retrieve the details of an API Log that has previously been created.",
        "operationId": "retrieve-an-api-log",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "api-log-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "api-log",
                        "id": "req_ABC123",
                        "attributes": {
                          "request": {
                            "method": "GET",
                            "path": "/api/v1/inquiries",
                            "headers": {
                              "Accept": "application/json",
                              "Host": "withpersona.com",
                              "Persona-Version": "2023-01-05",
                              "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/"
                            },
                            "get-params": {},
                            "post-params": {},
                            "ip-address": "127.0.0.1"
                          },
                          "response": {
                            "status": 200,
                            "headers": {
                              "Persona-Host": "us-central1 persona-web-web-77b874ff88-rrdk9 53e23b240",
                              "Cache-Control": "no-cache, no-store, max-age=0, must-revalidate",
                              "Pragma": "no-cache",
                              "Expires": "Fri, 01 Jan 1990 00:00:00 GMT",
                              "RateLimit-Limit": 300,
                              "RateLimit-Remaining": 299,
                              "RateLimit-Reset": 60,
                              "Request-Id": "req_ABC123",
                              "Content-Type": "application/json; charset=utf-8",
                              "Vary": "Accept"
                            }
                          },
                          "created-at": "2023-09-20T20:20:03.485+00:00"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ApiLog"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Retrieve an API Log",
        "tags": [
          "API Logs"
        ]
      }
    },
    "/cases": {
      "get": {
        "description": "Returns a list of your organization's cases.\nNote that this endpoint aggregates cases across all <<glossary:case template>>(s). See [Pagination](https://docs.withpersona.com/reference/pagination) for more details about handling the response.",
        "operationId": "list-all-cases",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "in": "query",
            "name": "page",
            "style": "deepObject",
            "allowReserved": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/NestedPaginationQueryParams"
                },
                {
                  "type": "object",
                  "properties": {
                    "after": {
                      "example": "case_ABC123"
                    },
                    "before": {
                      "example": "case_ABC123"
                    }
                  }
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "filter",
            "style": "deepObject",
            "allowReserved": true,
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "description": "Filter cases by status",
                  "examples": [
                    "Open"
                  ],
                  "type": "string"
                },
                "resolution": {
                  "description": "Filter cases by resolution",
                  "type": "string"
                },
                "case-template-id": {
                  "description": "Filter cases by case template ID",
                  "examples": [
                    "ctmpl_ABC123"
                  ],
                  "type": "string"
                },
                "account-id": {
                  "description": "Filter cases by account ID",
                  "examples": [
                    "act_ABC123"
                  ],
                  "type": "string"
                },
                "inquiry-id": {
                  "description": "Filter cases by inquiry ID",
                  "examples": [
                    "inq_ABC123"
                  ],
                  "type": "string"
                },
                "report-id": {
                  "description": "Filter cases by report ID",
                  "examples": [
                    "rep_ABC123"
                  ],
                  "type": "string"
                }
              }
            }
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": [
                        {
                          "type": "case",
                          "id": "case_KsFU1Vxv9oK3ztnwQuD7MaJo",
                          "attributes": {
                            "status": "open",
                            "name": "KCAS-1",
                            "resolution": null,
                            "created-at": "2021-03-24T04:59:21.764Z",
                            "updated-at": "2021-03-24T04:59:21.764Z",
                            "assigned-at": null,
                            "resolved-at": null,
                            "redacted-at": null,
                            "sla-expires-at": null,
                            "creator-id": "case_creator@withpersona.com",
                            "creator-type": "user",
                            "assignee-id": "case_assignee@withpersona.com",
                            "resolver-id": null,
                            "resolver-type": null,
                            "updater-id": "case_updater@withpersona.com",
                            "updater-type": "user",
                            "tags": [],
                            "fields": {}
                          },
                          "relationships": {
                            "case-template": {
                              "data": {
                                "type": "case-template",
                                "id": "ctmpl_336jV1uVaaY84GAqvG91oiy9"
                              }
                            },
                            "case-comments": {
                              "data": []
                            },
                            "accounts": {
                              "data": []
                            },
                            "inquiries": {
                              "data": [
                                {
                                  "type": "inquiry",
                                  "id": "inq_eGK41TM6GjcZgdcoox7x8Hh0"
                                }
                              ]
                            },
                            "reports": {
                              "data": []
                            },
                            "verifications": {
                              "data": []
                            },
                            "txns": {
                              "data": []
                            }
                          }
                        }
                      ],
                      "links": {
                        "prev": null,
                        "next": "/api/v1/cases?page%5Bafter%5D=case_19pQg1NHfYeUdpIvYZ54xmDz"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/Case"
                      },
                      "type": "array",
                      "description": "An array of Cases"
                    },
                    "links": {
                      "properties": {
                        "next": {
                          "examples": [
                            "/api/v1/cases?page%5Bafter%5D=case_19pQg1NHfYeUdpIvYZ54xmDz"
                          ],
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "prev": {
                          "examples": [
                            "/api/v1/cases?page%5Bbefore%5D=case_1ePP8j3pyznPCEuw4TCjWWD0"
                          ],
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "List all Cases",
        "tags": [
          "Cases"
        ]
      },
      "post": {
        "description": "Create a new case in your organization.",
        "operationId": "create-a-case",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "description": "Properties can include Case Template ID, creator email address, and fields configured on your Case Template.",
                        "properties": {
                          "case-template-id": {
                            "description": "ID of the case template for this case",
                            "type": "string"
                          },
                          "creator-email-address": {
                            "description": "Email of the user creating this case in the organization",
                            "type": "string"
                          }
                        },
                        "additionalProperties": true,
                        "required": [
                          "case-template-id"
                        ],
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "meta": {
                    "properties": {
                      "object-ids": {
                        "description": "Array of Persona object IDs that should be related to this case",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "sla-expires-in-seconds": {
                        "description": "Number of seconds from now when SLA expires (max of 90 days).",
                        "examples": [
                          7200
                        ],
                        "type": [
                          "null",
                          "number"
                        ]
                      }
                    },
                    "type": "object"
                  }
                },
                "required": [
                  "data"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "value": {
                      "data": {
                        "type": "case",
                        "id": "case_gqe7rH38FvxtzhGBQmDBsjkB",
                        "attributes": {
                          "status": "open",
                          "name": "MRR-3",
                          "resolution": null,
                          "created-at": "2021-09-28T05:18:36.200Z",
                          "updated-at": "2021-09-28T05:18:36.200Z",
                          "assigned-at": null,
                          "resolved-at": null,
                          "redacted-at": null,
                          "sla-expires-at": "2021-09-28T07:18:36.200Z",
                          "creator-id": "case_creator@withpersona.com",
                          "creator-type": "user",
                          "assignee-id": null,
                          "resolver-id": null,
                          "resolver-type": null,
                          "updater-id": null,
                          "updater-type": null,
                          "tags": [],
                          "fields": {}
                        },
                        "relationships": {
                          "case-template": {
                            "data": {
                              "type": "case-template",
                              "id": "ctmpl_Jumm3K4zHwaLBBdyLUCnHbBC"
                            }
                          },
                          "case-comments": {
                            "data": []
                          },
                          "accounts": {
                            "data": []
                          },
                          "inquiries": {
                            "data": [
                              {
                                "type": "inquiry",
                                "id": "inq_KHK4MJCE4QvfocWB2intQ3YE"
                              }
                            ]
                          },
                          "reports": {
                            "data": []
                          },
                          "verifications": {
                            "data": []
                          },
                          "txns": {
                            "data": []
                          }
                        }
                      },
                      "included": [
                        {
                          "type": "inquiry",
                          "id": "inq_b6UPkf7mNC1qBtLXnfaWyUbA",
                          "attributes": {
                            "status": "expired",
                            "reference-id": null,
                            "note": null,
                            "behaviors": {
                              "request-spoof-attempts": null,
                              "user-agent-spoof-attempts": null,
                              "distraction-events": null,
                              "hesitation-baseline": null,
                              "hesitation-count": null,
                              "hesitation-time": null,
                              "shortcut-copies": null,
                              "shortcut-pastes": null,
                              "autofill-cancels": null,
                              "autofill-starts": null,
                              "devtools-open": null,
                              "completion-time": null,
                              "hesitation-percentage": null,
                              "behavior-threat-level": null
                            },
                            "tags": [],
                            "creator": "case_creator@withpersona.com",
                            "reviewer-comment": null,
                            "created-at": "2023-03-29T19:06:45.000Z",
                            "started-at": "2023-03-30T19:07:01.000Z",
                            "completed-at": null,
                            "failed-at": null,
                            "marked-for-review-at": null,
                            "decisioned-at": null,
                            "expired-at": "2023-03-30T19:07:02.000Z",
                            "redacted-at": null,
                            "previous-step-name": "start",
                            "next-step-name": "verification_document",
                            "name-first": null,
                            "name-middle": null,
                            "name-last": null,
                            "birthdate": null,
                            "address-street-1": null,
                            "address-street-2": null,
                            "address-city": null,
                            "address-subdivision": null,
                            "address-subdivision-abbr": null,
                            "address-postal-code": null,
                            "address-postal-code-abbr": null,
                            "social-security-number": null,
                            "identification-number": null,
                            "email-address": null,
                            "phone-number": null,
                            "fields": {
                              "name-first": {
                                "type": "string",
                                "value": null
                              },
                              "name-middle": {
                                "type": "string",
                                "value": null
                              },
                              "name-last": {
                                "type": "string",
                                "value": null
                              },
                              "address-street-1": {
                                "type": "string",
                                "value": null
                              },
                              "address-street-2": {
                                "type": "string",
                                "value": null
                              },
                              "address-city": {
                                "type": "string",
                                "value": null
                              },
                              "address-subdivision": {
                                "type": "string",
                                "value": null
                              },
                              "address-postal-code": {
                                "type": "string",
                                "value": null
                              },
                              "address-country-code": {
                                "type": "string",
                                "value": null
                              },
                              "birthdate": {
                                "type": "date",
                                "value": null
                              },
                              "email-address": {
                                "type": "string",
                                "value": null
                              },
                              "phone-number": {
                                "type": "string",
                                "value": null
                              },
                              "identification-number": {
                                "type": "string",
                                "value": null
                              }
                            }
                          },
                          "relationships": {
                            "account": {
                              "data": {
                                "type": "account",
                                "id": "act_RNwaSKFUDTzxUakAEuE2xmhZ"
                              }
                            },
                            "template": {
                              "data": {
                                "type": "template",
                                "id": "blu_biqYXr3aNfHuLeXUdJUNFNET"
                              }
                            },
                            "inquiry-template": {
                              "data": {}
                            },
                            "inquiry-template-version": {
                              "data": {}
                            },
                            "reviewer": {
                              "data": {}
                            },
                            "reports": {
                              "data": []
                            },
                            "verifications": {
                              "data": []
                            },
                            "sessions": {
                              "data": []
                            },
                            "documents": {
                              "data": []
                            },
                            "selfies": {
                              "data": []
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Case"
                    },
                    "included": {
                      "type": "array",
                      "items": {
                        "discriminator": {
                          "propertyName": "type",
                          "mapping": {
                            "inquiry": "#/components/schemas/Inquiry",
                            "account": "#/components/schemas/Account",
                            "report": "#/components/schemas/ReportData"
                          }
                        },
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Account"
                          },
                          {
                            "$ref": "#/components/schemas/Inquiry"
                          },
                          {
                            "$ref": "#/components/schemas/ReportData"
                          }
                        ]
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Create a Case",
        "tags": [
          "Cases"
        ]
      }
    },
    "/cases/{case-id}": {
      "delete": {
        "description": "Permanently redact a <<glossary:case>> and its fields. Case objects must be redacted individually. This action cannot be undone.",
        "operationId": "redact-a-case",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "case-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": {
                        "type": "case",
                        "id": "case_KsFU1Vxv9oK3ztnwQuD7MaJo",
                        "attributes": {
                          "status": "Approved",
                          "name": "KCAS-1",
                          "resolution": null,
                          "created-at": "2021-03-24T04:59:21.764Z",
                          "updated-at": "2021-03-24T04:59:21.764Z",
                          "assigned-at": null,
                          "resolved-at": "2021-03-25T04:59:21.764Z",
                          "redacted-at": "2021-03-26T04:59:21.764Z",
                          "sla-expires-at": "2021-03-26T06:59:21.764Z",
                          "creator-id": "case_creator@withpersona.com",
                          "creator-type": "user",
                          "assignee-id": null,
                          "resolver-id": "case_resolver@withpersona.com",
                          "resolver-type": "user",
                          "updater-id": "case_updater@withpersona.com",
                          "updater-type": "user",
                          "tags": [],
                          "fields": {}
                        },
                        "relationships": {
                          "case-template": {
                            "data": {
                              "type": "case-template",
                              "id": "ctmpl_336jV1uVaaY84GAqvG91oiy9"
                            }
                          },
                          "case-comments": {
                            "data": [
                              {
                                "type": "case-comment",
                                "id": "cscm_yd2urRmjaCWcSSxqTSHvUcsn"
                              }
                            ]
                          },
                          "accounts": {
                            "data": [
                              {
                                "type": "account",
                                "id": "act_RNwaSKFUDTzxUakAEuE2xmhZ"
                              }
                            ]
                          },
                          "inquiries": {
                            "data": [
                              {
                                "type": "inquiry",
                                "id": "inq_b6UPkf7mNC1qBtLXnfaWyUbY"
                              }
                            ]
                          },
                          "reports": {
                            "data": []
                          },
                          "verifications": {
                            "data": []
                          },
                          "txns": {
                            "data": []
                          }
                        }
                      },
                      "included": [
                        {
                          "type": "account",
                          "id": "act_RNwaSKFUDTzxUakAEuE2xmhZ",
                          "attributes": {
                            "reference-id": null,
                            "created-at": "2021-03-24T04:59:06.000Z",
                            "updated-at": "2021-03-24T04:59:06.000Z",
                            "tags": []
                          }
                        },
                        {
                          "type": "inquiry",
                          "id": "inq_b6UPkf7mNC1qBtLXnfaWyUbA",
                          "attributes": {
                            "status": "expired",
                            "reference-id": null,
                            "note": null,
                            "behaviors": {
                              "request-spoof-attempts": null,
                              "user-agent-spoof-attempts": null,
                              "distraction-events": null,
                              "hesitation-baseline": null,
                              "hesitation-count": null,
                              "hesitation-time": null,
                              "shortcut-copies": null,
                              "shortcut-pastes": null,
                              "autofill-cancels": null,
                              "autofill-starts": null,
                              "devtools-open": null,
                              "completion-time": null,
                              "hesitation-percentage": null,
                              "behavior-threat-level": null
                            },
                            "tags": [],
                            "creator": "case_creator@withpersona.com",
                            "reviewer-comment": null,
                            "created-at": "2023-03-29T19:06:45.000Z",
                            "started-at": "2023-03-30T19:07:01.000Z",
                            "completed-at": null,
                            "failed-at": null,
                            "marked-for-review-at": null,
                            "decisioned-at": null,
                            "expired-at": "2023-03-30T19:07:02.000Z",
                            "redacted-at": null,
                            "previous-step-name": "start",
                            "next-step-name": "verification_document",
                            "name-first": null,
                            "name-middle": null,
                            "name-last": null,
                            "birthdate": null,
                            "address-street-1": null,
                            "address-street-2": null,
                            "address-city": null,
                            "address-subdivision": null,
                            "address-subdivision-abbr": null,
                            "address-postal-code": null,
                            "address-postal-code-abbr": null,
                            "social-security-number": null,
                            "identification-number": null,
                            "email-address": null,
                            "phone-number": null,
                            "fields": {
                              "name-first": {
                                "type": "string",
                                "value": null
                              },
                              "name-middle": {
                                "type": "string",
                                "value": null
                              },
                              "name-last": {
                                "type": "string",
                                "value": null
                              },
                              "address-street-1": {
                                "type": "string",
                                "value": null
                              },
                              "address-street-2": {
                                "type": "string",
                                "value": null
                              },
                              "address-city": {
                                "type": "string",
                                "value": null
                              },
                              "address-subdivision": {
                                "type": "string",
                                "value": null
                              },
                              "address-postal-code": {
                                "type": "string",
                                "value": null
                              },
                              "address-country-code": {
                                "type": "string",
                                "value": null
                              },
                              "birthdate": {
                                "type": "date",
                                "value": null
                              },
                              "email-address": {
                                "type": "string",
                                "value": null
                              },
                              "phone-number": {
                                "type": "string",
                                "value": null
                              },
                              "identification-number": {
                                "type": "string",
                                "value": null
                              }
                            }
                          },
                          "relationships": {
                            "account": {
                              "data": {
                                "type": "account",
                                "id": "act_RNwaSKFUDTzxUakAEuE2xmhZ"
                              }
                            },
                            "template": {
                              "data": {
                                "type": "template",
                                "id": "blu_biqYXr3aNfHuLeXUdJUNFNET"
                              }
                            },
                            "inquiry-template": {
                              "data": {}
                            },
                            "inquiry-template-version": {
                              "data": {}
                            },
                            "reviewer": {
                              "data": {}
                            },
                            "reports": {
                              "data": []
                            },
                            "verifications": {
                              "data": []
                            },
                            "sessions": {
                              "data": []
                            },
                            "documents": {
                              "data": []
                            },
                            "selfies": {
                              "data": []
                            }
                          }
                        },
                        {
                          "type": "case-comment",
                          "id": "cscm_yd2urRmjaCWcSSxqTSHvUcsn",
                          "attributes": {
                            "message": "This is a case comment",
                            "created-at": "2021-03-25T07:04:16.667Z",
                            "updated-at": "2021-03-25T07:04:16.667Z",
                            "commenter-id": "admin@acme.com",
                            "commenter-type": "user"
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Case"
                    },
                    "included": {
                      "type": "array",
                      "items": {
                        "discriminator": {
                          "propertyName": "type",
                          "mapping": {
                            "inquiry": "#/components/schemas/Inquiry",
                            "account": "#/components/schemas/Account",
                            "case-comment": "#/components/schemas/CaseComment",
                            "report": "#/components/schemas/ReportData",
                            "verification": "#/components/schemas/VerificationData"
                          }
                        },
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Account"
                          },
                          {
                            "$ref": "#/components/schemas/Inquiry"
                          },
                          {
                            "$ref": "#/components/schemas/CaseComment"
                          },
                          {
                            "$ref": "#/components/schemas/ReportData"
                          },
                          {
                            "$ref": "#/components/schemas/VerificationData"
                          }
                        ]
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Redact a case",
        "tags": [
          "Cases"
        ]
      },
      "get": {
        "description": "Retrieves the details of a <<glossary:case>> that has previously been created.",
        "operationId": "retrieve-case",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "case-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "case",
                        "id": "case_KsFU1Vxv9oK3ztnwQuD7MaJo",
                        "attributes": {
                          "status": "Approved",
                          "name": "KCAS-1",
                          "resolution": null,
                          "created-at": "2021-03-24T04:59:21.764Z",
                          "updated-at": "2021-03-24T04:59:21.764Z",
                          "assigned-at": null,
                          "resolved-at": "2021-03-25T04:59:21.764Z",
                          "redacted-at": null,
                          "sla-expires-at": null,
                          "creator-id": "case_creator@withpersona.com",
                          "creator-type": "user",
                          "assignee-id": null,
                          "resolver-id": "case_resolver@withpersona.com",
                          "resolver-type": "user",
                          "updater-id": "case_updater@withpersona.com",
                          "updater-type": "user",
                          "tags": [],
                          "fields": {}
                        },
                        "relationships": {
                          "case-template": {
                            "data": {
                              "type": "case-template",
                              "id": "ctmpl_336jV1uVaaY84GAqvG91oiy9"
                            }
                          },
                          "case-comments": {
                            "data": [
                              {
                                "type": "case-comment",
                                "id": "cscm_yd2urRmjaCWcSSxqTSHvUcsn"
                              }
                            ]
                          },
                          "accounts": {
                            "data": [
                              {
                                "type": "account",
                                "id": "act_RNwaSKFUDTzxUakAEuE2xmhZ"
                              }
                            ]
                          },
                          "inquiries": {
                            "data": [
                              {
                                "type": "inquiry",
                                "id": "inq_b6UPkf7mNC1qBtLXnfaWyUbY"
                              }
                            ]
                          },
                          "reports": {
                            "data": []
                          },
                          "verifications": {
                            "data": []
                          },
                          "txns": {
                            "data": []
                          }
                        }
                      },
                      "included": [
                        {
                          "type": "account",
                          "id": "act_RNwaSKFUDTzxUakAEuE2xmhZ",
                          "attributes": {
                            "reference-id": null,
                            "created-at": "2021-03-24T04:59:06.000Z",
                            "updated-at": "2021-03-24T04:59:06.000Z",
                            "tags": []
                          }
                        },
                        {
                          "type": "inquiry",
                          "id": "inq_b6UPkf7mNC1qBtLXnfaWyUbY",
                          "attributes": {
                            "status": "created",
                            "reference-id": null,
                            "note": null,
                            "tags": [],
                            "reviewer-comment": null,
                            "created-at": "2021-03-24T04:59:06.000Z",
                            "started-at": null,
                            "completed-at": null,
                            "failed-at": null,
                            "decisioned-at": null,
                            "expired-at": null
                          },
                          "relationships": {
                            "account": {
                              "data": {
                                "type": "account",
                                "id": "act_RNwaSKFUDTzxUakAEuE2xmhZ"
                              }
                            },
                            "template": {
                              "data": {
                                "type": "template",
                                "id": "blu_biqYXr3aNfHuLeXUdJUNFNET"
                              }
                            },
                            "reports": {
                              "data": []
                            },
                            "verifications": {
                              "data": []
                            },
                            "sessions": {
                              "data": []
                            },
                            "documents": {
                              "data": []
                            },
                            "selfies": {
                              "data": []
                            }
                          }
                        },
                        {
                          "type": "case-comment",
                          "id": "cscm_yd2urRmjaCWcSSxqTSHvUcsn",
                          "attributes": {
                            "message": "This is a case comment",
                            "created-at": "2021-03-25T07:04:16.667Z",
                            "updated-at": "2021-03-25T07:04:16.667Z",
                            "commenter-id": "admin@acme.com",
                            "commenter-type": "user"
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Case"
                    },
                    "included": {
                      "type": "array",
                      "items": {
                        "discriminator": {
                          "propertyName": "type",
                          "mapping": {
                            "inquiry": "#/components/schemas/Inquiry",
                            "account": "#/components/schemas/Account",
                            "case-comment": "#/components/schemas/CaseComment",
                            "report": "#/components/schemas/ReportData",
                            "verification": "#/components/schemas/VerificationData"
                          }
                        },
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Account"
                          },
                          {
                            "$ref": "#/components/schemas/Inquiry"
                          },
                          {
                            "$ref": "#/components/schemas/CaseComment"
                          },
                          {
                            "$ref": "#/components/schemas/ReportData"
                          },
                          {
                            "$ref": "#/components/schemas/VerificationData"
                          }
                        ]
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Retrieve Case",
        "tags": [
          "Cases"
        ]
      },
      "patch": {
        "description": "Updates the fields and add attachments on a <<glossary:case>> that has been previously created.",
        "operationId": "update-a-case",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "ID of the case to update",
            "in": "path",
            "name": "case-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "properties": {
                          "attachments": {
                            "description": "List of PDF and image files to add to this case.",
                            "items": {
                              "properties": {
                                "data": {
                                  "description": "base 64 encoded file",
                                  "type": "string"
                                },
                                "filename": {
                                  "description": "Name of the file",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "fields": {
                            "description": "Note: field names and data types used here will depend on the configurations for your Case Template.",
                            "examples": [
                              {
                                "preferred-name": "Albert"
                              }
                            ],
                            "additionalProperties": true,
                            "type": "object"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "meta": {
                    "properties": {
                      "sla-expires-in-seconds": {
                        "description": "Number of seconds from now when SLA expires (max of 90 days). Set to null to clear SLA.",
                        "examples": [
                          7200,
                          null
                        ],
                        "type": [
                          "null",
                          "number"
                        ]
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "case",
                        "id": "case_3maVhdLzdGftRZCvxfqazVL1",
                        "attributes": {
                          "status": "open",
                          "name": "WATC-16",
                          "resolution": null,
                          "created-at": "2021-06-30T20:37:18.678Z",
                          "updated-at": "2021-08-26T18:24:19.695Z",
                          "assigned-at": null,
                          "resolved-at": null,
                          "redacted-at": null,
                          "sla-expires-at": "2021-06-30T22:37:18.678Z",
                          "creator-id": "wfl_yKynZZiuPz1R5qm9JFyBnnLB",
                          "creator-type": "workflow",
                          "assignee-id": "foo@bar.com",
                          "resolver-id": null,
                          "resolver-type": null,
                          "updater-id": null,
                          "updater-type": null,
                          "tags": [],
                          "fields": {}
                        },
                        "relationships": {
                          "case-template": {
                            "data": {
                              "type": "case-template",
                              "id": "ctmpl_6HheND7s14a2o7fg33iHqhg7"
                            }
                          },
                          "case-comments": {
                            "data": []
                          },
                          "accounts": {
                            "data": []
                          },
                          "inquiries": {
                            "data": [
                              {
                                "type": "inquiry",
                                "id": "inq_29Yd6kF6xWVFgemm5WTxhxvf"
                              }
                            ]
                          },
                          "reports": {
                            "data": [
                              {
                                "type": "report/watchlist",
                                "id": "rep_PN3xspEwWCWWRp1eGpedaSNj"
                              }
                            ]
                          },
                          "verifications": {
                            "data": []
                          },
                          "txns": {
                            "data": []
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Case"
                    },
                    "included": {
                      "type": "array",
                      "items": {
                        "discriminator": {
                          "propertyName": "type",
                          "mapping": {
                            "inquiry": "#/components/schemas/Inquiry",
                            "account": "#/components/schemas/Account",
                            "case-comment": "#/components/schemas/CaseComment",
                            "report": "#/components/schemas/ReportData"
                          }
                        },
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/Account"
                          },
                          {
                            "$ref": "#/components/schemas/Inquiry"
                          },
                          {
                            "$ref": "#/components/schemas/CaseComment"
                          },
                          {
                            "$ref": "#/components/schemas/ReportData"
                          }
                        ]
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Update a Case",
        "tags": [
          "Cases"
        ]
      }
    },
    "/cases/{case-id}/add-objects": {
      "post": {
        "description": "Add Persona objects (such as inquiries, accounts, or reports) to a <<glossary:case>>",
        "operationId": "add-persona-objects",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "ID of the case to update",
            "in": "path",
            "name": "case-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "meta": {
                    "properties": {
                      "object-ids": {
                        "description": "Array of Persona object IDs to attach to this case",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "case",
                        "id": "case_3maVhdLzdGftRZCvxfqazVL1",
                        "attributes": {
                          "status": "resolved",
                          "name": "WATC-16",
                          "resolution": "Escalated",
                          "created-at": "2021-06-30T20:37:18.678Z",
                          "updated-at": "2021-08-26T18:24:19.695Z",
                          "assigned-at": null,
                          "resolved-at": "2021-08-26T18:24:19.000Z",
                          "redacted-at": null,
                          "sla-expires-at": null,
                          "creator-id": "wfl_yKynZZiuPz1R5qm9JFyBnnLB",
                          "creator-type": "workflow",
                          "assignee-id": null,
                          "resolver-id": null,
                          "resolver-type": null,
                          "updater-id": null,
                          "updater-type": null,
                          "tags": [],
                          "fields": {}
                        },
                        "relationships": {
                          "case-template": {
                            "data": {
                              "type": "case-template",
                              "id": "ctmpl_6HheND7s14a2o7fg33iHqhg7"
                            }
                          },
                          "case-comments": {
                            "data": []
                          },
                          "accounts": {
                            "data": []
                          },
                          "inquiries": {
                            "data": [
                              {
                                "type": "inquiry",
                                "id": "inq_29Yd6kF6xWVFgemm5WTxhxvf"
                              }
                            ]
                          },
                          "reports": {
                            "data": [
                              {
                                "type": "report/watchlist",
                                "id": "rep_PN3xspEwWCWWRp1eGpedaSNj"
                              }
                            ]
                          },
                          "verifications": {
                            "data": []
                          },
                          "txns": {
                            "data": []
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Case"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Add Persona objects",
        "tags": [
          "Cases"
        ]
      }
    },
    "/cases/{case-id}/assign": {
      "post": {
        "description": "Assign a <<glossary:case>> to a Persona user.",
        "operationId": "assign-a-case",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "ID of the case to update",
            "in": "path",
            "name": "case-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "meta": {
                    "properties": {
                      "user-email-address": {
                        "description": "Email address of the Persona user to whom to assign this case",
                        "type": "string"
                      }
                    },
                    "required": [
                      "user-email-address"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "meta"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "case",
                        "id": "case_3maVhdLzdGftRZCvxfqazVL1",
                        "attributes": {
                          "status": "open",
                          "name": "WATC-16",
                          "resolution": null,
                          "created-at": "2021-06-30T20:37:18.678Z",
                          "updated-at": "2021-08-26T18:24:19.695Z",
                          "assigned-at": null,
                          "resolved-at": null,
                          "redacted-at": null,
                          "sla-expires-at": null,
                          "creator-id": "wfl_yKynZZiuPz1R5qm9JFyBnnLB",
                          "creator-type": "workflow",
                          "assignee-id": "foo@bar.com",
                          "resolver-id": null,
                          "resolver-type": null,
                          "updater-id": null,
                          "updater-type": null,
                          "tags": [],
                          "fields": {}
                        },
                        "relationships": {
                          "case-template": {
                            "data": {
                              "type": "case-template",
                              "id": "ctmpl_6HheND7s14a2o7fg33iHqhg7"
                            }
                          },
                          "case-comments": {
                            "data": []
                          },
                          "accounts": {
                            "data": []
                          },
                          "inquiries": {
                            "data": [
                              {
                                "type": "inquiry",
                                "id": "inq_29Yd6kF6xWVFgemm5WTxhxvf"
                              }
                            ]
                          },
                          "reports": {
                            "data": [
                              {
                                "type": "report/watchlist",
                                "id": "rep_PN3xspEwWCWWRp1eGpedaSNj"
                              }
                            ]
                          },
                          "verifications": {
                            "data": []
                          },
                          "txns": {
                            "data": []
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Case"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Assign a Case",
        "tags": [
          "Cases"
        ]
      }
    },
    "/cases/{case-id}/set-status": {
      "post": {
        "description": "Set the status of the Case.",
        "operationId": "set-status-for-a-case",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "ID of the case to update status",
            "in": "path",
            "name": "case-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "Request Example": {
                  "value": {
                    "meta": {
                      "status": "Approved"
                    }
                  }
                }
              },
              "schema": {
                "properties": {
                  "meta": {
                    "properties": {
                      "status": {
                        "type": "string",
                        "description": "Status to update case to"
                      }
                    },
                    "required": [
                      "status"
                    ],
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "case",
                        "id": "case_3maVhdLzdGftRZCvxfqazVL1",
                        "attributes": {
                          "status": "Approved",
                          "name": "WATC-16",
                          "resolution": null,
                          "created-at": "2021-06-30T20:37:18.678Z",
                          "updated-at": "2021-08-26T18:24:19.695Z",
                          "assigned-at": null,
                          "resolved-at": null,
                          "redacted-at": null,
                          "sla-expires-at": null,
                          "creator-id": "wfl_yKynZZiuPz1R5qm9JFyBnnLB",
                          "creator-type": "workflow",
                          "assignee-id": "foo@bar.com",
                          "resolver-id": null,
                          "resolver-type": null,
                          "updater-id": null,
                          "updater-type": null,
                          "tags": [],
                          "fields": {}
                        },
                        "relationships": {
                          "case-template": {
                            "data": {
                              "type": "case-template",
                              "id": "ctmpl_6HheND7s14a2o7fg33iHqhg7"
                            }
                          },
                          "case-comments": {
                            "data": []
                          },
                          "accounts": {
                            "data": []
                          },
                          "inquiries": {
                            "data": [
                              {
                                "type": "inquiry",
                                "id": "inq_29Yd6kF6xWVFgemm5WTxhxvf"
                              }
                            ]
                          },
                          "reports": {
                            "data": [
                              {
                                "type": "report/watchlist",
                                "id": "rep_PN3xspEwWCWWRp1eGpedaSNj"
                              }
                            ]
                          },
                          "verifications": {
                            "data": []
                          },
                          "txns": {
                            "data": []
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Case"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Set status for a case",
        "tags": [
          "Cases"
        ]
      }
    },
    "/cases/{case-id}/add-tag": {
      "post": {
        "description": "Add a new tag to a <<glossary:case>>",
        "operationId": "add-tag",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "ID of the case to update.",
            "in": "path",
            "name": "case-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "meta": {
                    "properties": {
                      "tag-name": {
                        "type": "string",
                        "description": "Name of the tag to add to the Case."
                      }
                    },
                    "required": [
                      "tag-name"
                    ],
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": {
                        "type": "case",
                        "id": "case_3maVhdLzdGftRZCvxfqazVL1",
                        "attributes": {
                          "status": "Open",
                          "name": "KYC-6",
                          "resolution": null,
                          "created-at": "2021-06-30T20:37:18.678Z",
                          "updated-at": "2021-08-26T18:24:19.695Z",
                          "assigned-at": "2021-08-26T18:24:19.695Z",
                          "resolved-at": null,
                          "redacted-at": null,
                          "sla-expires-at": null,
                          "creator-id": "wfl_yKynZZiuPz1R5qm9JFyBnnLB",
                          "creator-type": "workflow",
                          "assignee-id": "case_assignee@withpersona.com",
                          "resolver-id": null,
                          "resolver-type": null,
                          "updater-id": null,
                          "updater-type": null,
                          "tags": [
                            "FRAUD"
                          ],
                          "fields": {}
                        },
                        "relationships": {
                          "case-template": {
                            "data": {
                              "type": "case-template",
                              "id": "ctmpl_6HheND7s14a2o7fg33iHqhg7"
                            }
                          },
                          "case-comments": {
                            "data": []
                          },
                          "accounts": {
                            "data": []
                          },
                          "inquiries": {
                            "data": [
                              {
                                "type": "inquiry",
                                "id": "inq_29Yd6kF6xWVFgemm5WTxhxvf"
                              }
                            ]
                          },
                          "reports": {
                            "data": [
                              {
                                "type": "report/watchlist",
                                "id": "rep_PN3xspEwWCWWRp1eGpedaSNj"
                              }
                            ]
                          },
                          "verifications": {
                            "data": []
                          },
                          "txns": {
                            "data": []
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Case"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Add tag to a case",
        "tags": [
          "Cases"
        ]
      }
    },
    "/cases/{case-id}/remove-tag": {
      "post": {
        "description": "Remove an existing tag from a <<glossary:case>>",
        "operationId": "remove-tag",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "ID of the case to update.",
            "in": "path",
            "name": "case-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "meta": {
                    "properties": {
                      "tag-name": {
                        "type": "string",
                        "description": "Name of the tag to remove from the Case."
                      }
                    },
                    "required": [
                      "tag-name"
                    ],
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": {
                        "type": "case",
                        "id": "case_3maVhdLzdGftRZCvxfqazVL1",
                        "attributes": {
                          "status": "Open",
                          "name": "KYC-6",
                          "resolution": null,
                          "created-at": "2021-06-30T20:37:18.678Z",
                          "updated-at": "2021-08-26T18:24:19.695Z",
                          "assigned-at": "2021-08-26T18:24:19.695Z",
                          "resolved-at": null,
                          "redacted-at": null,
                          "sla-expires-at": null,
                          "creator-id": "wfl_yKynZZiuPz1R5qm9JFyBnnLB",
                          "creator-type": "workflow",
                          "assignee-id": "case_assignee@withpersona.com",
                          "resolver-id": null,
                          "resolver-type": null,
                          "updater-id": null,
                          "updater-type": null,
                          "tags": [],
                          "fields": {}
                        },
                        "relationships": {
                          "case-template": {
                            "data": {
                              "type": "case-template",
                              "id": "ctmpl_6HheND7s14a2o7fg33iHqhg7"
                            }
                          },
                          "case-comments": {
                            "data": []
                          },
                          "accounts": {
                            "data": []
                          },
                          "inquiries": {
                            "data": [
                              {
                                "type": "inquiry",
                                "id": "inq_29Yd6kF6xWVFgemm5WTxhxvf"
                              }
                            ]
                          },
                          "reports": {
                            "data": [
                              {
                                "type": "report/watchlist",
                                "id": "rep_PN3xspEwWCWWRp1eGpedaSNj"
                              }
                            ]
                          },
                          "verifications": {
                            "data": []
                          },
                          "txns": {
                            "data": []
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Case"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Remove tag from a case",
        "tags": [
          "Cases"
        ]
      }
    },
    "/cases/{case-id}/set-tags": {
      "post": {
        "description": "Set all tags on a <<glossary:case>>. Note this removes any tags that are not provided.",
        "operationId": "set-tags",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "ID of the case to update.",
            "in": "path",
            "name": "case-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "meta": {
                    "properties": {
                      "tag-name": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": {
                        "type": "case",
                        "id": "case_3maVhdLzdGftRZCvxfqazVL1",
                        "attributes": {
                          "status": "Open",
                          "name": "KYC-6",
                          "resolution": null,
                          "created-at": "2021-06-30T20:37:18.678Z",
                          "updated-at": "2021-08-26T18:24:19.695Z",
                          "assigned-at": "2021-08-26T18:24:19.695Z",
                          "resolved-at": null,
                          "redacted-at": null,
                          "sla-expires-at": null,
                          "creator-id": "wfl_yKynZZiuPz1R5qm9JFyBnnLB",
                          "creator-type": "workflow",
                          "assignee-id": "case_assignee@withpersona.com",
                          "resolver-id": null,
                          "resolver-type": null,
                          "updater-id": null,
                          "updater-type": null,
                          "tags": [
                            "FRAUD",
                            "IMPERSONATING CELEBRITY"
                          ],
                          "fields": {}
                        },
                        "relationships": {
                          "case-template": {
                            "data": {
                              "type": "case-template",
                              "id": "ctmpl_6HheND7s14a2o7fg33iHqhg7"
                            }
                          },
                          "case-comments": {
                            "data": []
                          },
                          "accounts": {
                            "data": []
                          },
                          "inquiries": {
                            "data": [
                              {
                                "type": "inquiry",
                                "id": "inq_29Yd6kF6xWVFgemm5WTxhxvf"
                              }
                            ]
                          },
                          "reports": {
                            "data": [
                              {
                                "type": "report/watchlist",
                                "id": "rep_PN3xspEwWCWWRp1eGpedaSNj"
                              }
                            ]
                          },
                          "verifications": {
                            "data": []
                          },
                          "txns": {
                            "data": []
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Case"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Set tags on a case",
        "tags": [
          "Cases"
        ]
      }
    },
    "/document/generics": {
      "post": {
        "description": "Create a new generic document.",
        "operationId": "create-a-document",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "properties": {
                          "files": {
                            "description": "Files to upload for this document. Files may be images or PDFs.",
                            "items": {
                              "properties": {
                                "data": {
                                  "description": "Base64 encoded file.",
                                  "format": "binary",
                                  "type": "string"
                                },
                                "filename": {
                                  "description": "Name of file.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "data",
                                "filename"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "inquiry-id": {
                            "examples": [
                              "inq_GC7xwqnhgNHwomz5yT3geLrT"
                            ],
                            "type": "string"
                          },
                          "account-id": {
                            "examples": [
                              "act_bcTxPLyAYy5edxp29abcvpng"
                            ],
                            "type": "string"
                          },
                          "kind": {
                            "description": "Identifier for this document, e.g. \"proof_of_employment\"",
                            "type": "string"
                          }
                        },
                        "required": [
                          "kind"
                        ],
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "required": [
                  "data"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "value": {
                      "data": {
                        "type": "document/generic",
                        "id": "doc_8HfuATwEZbXT532wv6pzWMTN",
                        "attributes": {
                          "status": "initiated",
                          "created-at": "2020-04-18T15:43:25.000Z",
                          "processed-at": null,
                          "processed-at-ts": null,
                          "kind": "proof_of_employment",
                          "files": [
                            {
                              "filename": "multipage_example.pdf",
                              "url": "https://withpersona.com/api/v1/files/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdHc4IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--c4482780e1fa5c7bc0a26fc73b1dd76c44b98ad8/multipage_example.pdf",
                              "byte-size": 123456
                            }
                          ],
                          "files-normalized": [],
                          "extraction-responses": null,
                          "document-type": null,
                          "fields": {}
                        },
                        "relationships": {
                          "inquiry": {
                            "data": {
                              "type": "inquiry",
                              "id": "inq_jdRz9RHNRzkjxUqZApHwX1ZU"
                            }
                          },
                          "template": {
                            "data": {
                              "type": "template",
                              "id": "tmpl_8L8AxnijwiPkqoTF3ZjfCSdF"
                            }
                          },
                          "inquiry-template-version": {
                            "data": null
                          },
                          "inquiry-template": {
                            "data": null
                          },
                          "document-files": {
                            "data": []
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DocumentGeneric"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Create a Generic Document",
        "tags": [
          "Documents"
        ]
      }
    },
    "/document/generics/{document-id}": {
      "get": {
        "description": "Retrieves the details of a generic document that has been previously created.",
        "operationId": "retrieve-a-generic-document",
        "parameters": [
          {
            "in": "path",
            "name": "document-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "document/generic",
                        "id": "doc_8HfuATwEZbXT532wv6pzWMTN",
                        "attributes": {
                          "status": "initiated",
                          "created-at": "2020-04-18T15:43:25.000Z",
                          "processed-at": null,
                          "processed-at-ts": null,
                          "kind": "proof_of_employment",
                          "files": [
                            {
                              "filename": "multipage_example.pdf",
                              "url": "https://withpersona.com/api/v1/files/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdHc4IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--c4482780e1fa5c7bc0a26fc73b1dd76c44b98ad8/multipage_example.pdf",
                              "byte-size": 123456
                            }
                          ],
                          "files-normalized": [],
                          "extraction-responses": null,
                          "document-type": null,
                          "fields": {}
                        },
                        "relationships": {
                          "inquiry": {
                            "data": {
                              "type": "inquiry",
                              "id": "inq_jdRz9RHNRzkjxUqZApHwX1ZU"
                            }
                          },
                          "template": {
                            "data": {
                              "type": "template",
                              "id": "tmpl_8L8AxnijwiPkqoTF3ZjfCSdF"
                            }
                          },
                          "inquiry-template-version": {
                            "data": null
                          },
                          "inquiry-template": {
                            "data": null
                          },
                          "document-files": {
                            "data": []
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DocumentGeneric"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Retrieve a Generic Document",
        "tags": [
          "Documents"
        ]
      },
      "patch": {
        "description": "Updates an existing generic document. Can only update `initiated` documents.",
        "operationId": "update-a-document",
        "parameters": [
          {
            "in": "path",
            "name": "document-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "properties": {
                          "files": {
                            "description": "Files to upload for this document.",
                            "items": {
                              "type": [
                                "array",
                                "object"
                              ]
                            },
                            "type": "array"
                          },
                          "kind": {
                            "description": "Identifier for this document, e.g. \"proof_of_employment\"",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "required": [
                  "data"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "document/generic",
                        "id": "doc_8HfuATwEZbXT532wv6pzWMTN",
                        "attributes": {
                          "status": "initiated",
                          "created-at": "2020-04-18T15:43:25.000Z",
                          "processed-at": null,
                          "processed-at-ts": null,
                          "kind": "proof_of_employment",
                          "files": [
                            {
                              "filename": "multipage_example.pdf",
                              "url": "https://withpersona.com/api/v1/files/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdHc4IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--c4482780e1fa5c7bc0a26fc73b1dd76c44b98ad8/multipage_example.pdf",
                              "byte-size": 123456
                            }
                          ],
                          "files-normalized": [],
                          "extraction-responses": null,
                          "document-type": null,
                          "fields": {}
                        },
                        "relationships": {
                          "inquiry": {
                            "data": {
                              "type": "inquiry",
                              "id": "inq_jdRz9RHNRzkjxUqZApHwX1ZU"
                            }
                          },
                          "template": {
                            "data": {
                              "type": "template",
                              "id": "tmpl_8L8AxnijwiPkqoTF3ZjfCSdF"
                            }
                          },
                          "inquiry-template-version": {
                            "data": null
                          },
                          "inquiry-template": {
                            "data": null
                          },
                          "document-files": {
                            "data": []
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DocumentGeneric"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Update a Generic Document",
        "tags": [
          "Documents"
        ]
      }
    },
    "/document/generics/{document-id}/submit": {
      "post": {
        "description": "Submit a generic document for processing. Can only submit `initiated` documents with files attached.",
        "operationId": "submit-a-document",
        "parameters": [
          {
            "in": "path",
            "name": "document-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "document/generic",
                        "id": "doc_8HfuATwEZbXT532wv6pzWMTN",
                        "attributes": {
                          "status": "submitted",
                          "created-at": "2020-04-18T15:43:25.000Z",
                          "processed-at": null,
                          "processed-at-ts": null,
                          "kind": "proof_of_employment",
                          "files": [
                            {
                              "filename": "multipage_example.pdf",
                              "url": "https://withpersona.com/api/v1/files/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdHc4IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--c4482780e1fa5c7bc0a26fc73b1dd76c44b98ad8/multipage_example.pdf",
                              "byte-size": 123456
                            }
                          ],
                          "files-normalized": [],
                          "extraction-responses": null,
                          "document-type": null,
                          "fields": {}
                        },
                        "relationships": {
                          "inquiry": {
                            "data": {
                              "type": "inquiry",
                              "id": "inq_jdRz9RHNRzkjxUqZApHwX1ZU"
                            }
                          },
                          "template": {
                            "data": {
                              "type": "template",
                              "id": "tmpl_8L8AxnijwiPkqoTF3ZjfCSdF"
                            }
                          },
                          "inquiry-template-version": {
                            "data": null
                          },
                          "inquiry-template": {
                            "data": null
                          },
                          "document-files": {
                            "data": []
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DocumentGeneric"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Submit a Generic Document",
        "tags": [
          "Documents"
        ]
      }
    },
    "/document/government-ids": {
      "post": {
        "description": "Create a new government ID document",
        "operationId": "create-a-government-id-document",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "properties": {
                          "back-photo": {
                            "description": "Back of ID.",
                            "properties": {
                              "data": {
                                "description": "Government ID photo data, must be images. Can provide more than one image and we will pick the best for processing. Can also be provided as uploaded file(s) such as with multipart/form-data requests instead of this object(s). Images must be between 10KB and 15MB.",
                                "properties": {
                                  "data": {
                                    "description": "Base64 encoded file.",
                                    "format": "binary",
                                    "type": "string"
                                  },
                                  "filename": {
                                    "description": "Name of file.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "data",
                                  "filename"
                                ],
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "country-code": {
                            "description": "ISO 3166-1 alpha-2 code of the ID’s issuing country.",
                            "type": "string"
                          },
                          "front-photo": {
                            "description": "Front of ID.",
                            "properties": {
                              "data": {
                                "description": "Government ID photo data, must be images. Can provide more than one image and we will pick the best for processing. Can also be provided as uploaded file(s) such as with multipart/form-data requests instead of this object(s). Images must be between 10KB and 15MB.",
                                "properties": {
                                  "data": {
                                    "description": "Base64 encoded file.",
                                    "format": "binary",
                                    "type": "string"
                                  },
                                  "filename": {
                                    "description": "Name of file.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "data",
                                  "filename"
                                ],
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "inquiry-id": {
                            "type": "string"
                          },
                          "selected-id-class": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "required": [
                          "inquiry-id",
                          "country-code"
                        ],
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "required": [
                  "data"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "value": {
                      "data": {
                        "type": "document/government-id",
                        "id": "doc_FxCzxBkkF8V1AtxmY19zhVAz",
                        "attributes": {
                          "status": "initiated",
                          "created-at": "2020-09-13T02:34:57.000Z",
                          "processed-at": null,
                          "front-photo": null,
                          "back-photo": null,
                          "selfie-photo": null,
                          "id-class": null,
                          "name-middle": null,
                          "name-last": null,
                          "birthdate": null,
                          "address-street-1": null,
                          "address-street-2": null,
                          "address-city": null,
                          "address-subdivision": null,
                          "address-postal-code": null,
                          "designations": [],
                          "endorsements": null,
                          "restrictions": null,
                          "vehicle-class": null
                        },
                        "relationships": {
                          "inquiry": {
                            "data": {
                              "type": "inquiry",
                              "id": "inq_Dj1JxEG9K153GbvFYGScCRlL"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "address-city": {},
                            "address-postal-code": {},
                            "address-street-1": {},
                            "address-street-2": {},
                            "address-subdivision": {},
                            "back-photo": {},
                            "birthdate": {},
                            "created-at": {
                              "examples": [
                                "2020-09-13T02:34:57.000Z"
                              ],
                              "type": "string"
                            },
                            "designations": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "examples": [
                                  "temporary"
                                ]
                              }
                            },
                            "endorsements": {},
                            "front-photo": {},
                            "id-class": {},
                            "name-last": {},
                            "name-middle": {},
                            "processed-at": {},
                            "restrictions": {},
                            "selfie-photo": {},
                            "status": {
                              "examples": [
                                "initiated"
                              ],
                              "type": "string"
                            },
                            "vehicle-class": {}
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "doc_FxCzxBkkF8V1AtxmY19zhVAz"
                          ],
                          "type": "string"
                        },
                        "relationships": {
                          "properties": {
                            "inquiry": {
                              "properties": {
                                "data": {
                                  "properties": {
                                    "id": {
                                      "examples": [
                                        "inq_Dj1JxEG9K153GbvFYGScCRlL"
                                      ],
                                      "type": "string"
                                    },
                                    "type": {
                                      "examples": [
                                        "inquiry"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "examples": [
                            "document/government-id"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Create a Government ID Document",
        "tags": [
          "Documents"
        ]
      }
    },
    "/document/government-ids/{document-id}": {
      "patch": {
        "description": "Updates an existing government ID document. Can only update `initiated` documents.",
        "operationId": "update-a-government-id-document",
        "parameters": [
          {
            "in": "path",
            "name": "document-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "properties": {
                          "back-photo": {
                            "description": "Back of ID.",
                            "properties": {
                              "data": {
                                "description": "Government ID photo data, must be images. Can provide more than one image and we will pick the best for processing. Can also be provided as uploaded file(s) such as with multipart/form-data requests instead of this object(s). Images must be between 10KB and 15MB.",
                                "properties": {
                                  "data": {
                                    "description": "Base64 encoded file.",
                                    "format": "binary",
                                    "type": "string"
                                  },
                                  "filename": {
                                    "description": "Name of file.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "data",
                                  "filename"
                                ],
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "front-photo": {
                            "description": "Front of ID.",
                            "properties": {
                              "data": {
                                "description": "Government ID photo data, must be images. Can provide more than one image and we will pick the best for processing. Can also be provided as uploaded file(s) such as with multipart/form-data requests instead of this object(s). Images must be between 10KB and 15MB.",
                                "properties": {
                                  "data": {
                                    "description": "Base64 encoded file.",
                                    "format": "binary",
                                    "type": "string"
                                  },
                                  "filename": {
                                    "description": "Name of file.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "data",
                                  "filename"
                                ],
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "selected-id-class": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "required": [
                  "data"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "document/government-id",
                        "id": "doc_FxCzxBkkF8V1AtxmY19zhVAz",
                        "attributes": {
                          "status": "initiated",
                          "created-at": "2020-09-13T02:34:57.000Z",
                          "processed-at": null,
                          "front-photo": null,
                          "back-photo": null,
                          "selfie-photo": null,
                          "id-class": null,
                          "name-middle": null,
                          "name-last": null,
                          "birthdate": null,
                          "address-street-1": null,
                          "address-street-2": null,
                          "address-city": null,
                          "address-subdivision": null,
                          "address-postal-code": null,
                          "designations": [],
                          "endorsements": null,
                          "restrictions": null,
                          "vehicle-class": null
                        },
                        "relationships": {
                          "inquiry": {
                            "data": {
                              "type": "inquiry",
                              "id": "inq_Dj1JxEG9K153GbvFYGScCRlL"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "address-city": {},
                            "address-postal-code": {},
                            "address-street-1": {},
                            "address-street-2": {},
                            "address-subdivision": {},
                            "back-photo": {},
                            "birthdate": {},
                            "created-at": {
                              "examples": [
                                "2020-09-13T02:34:57.000Z"
                              ],
                              "type": "string"
                            },
                            "designations": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "examples": [
                                  "temporary"
                                ]
                              }
                            },
                            "endorsements": {},
                            "front-photo": {},
                            "id-class": {},
                            "name-last": {},
                            "name-middle": {},
                            "processed-at": {},
                            "restrictions": {},
                            "selfie-photo": {},
                            "status": {
                              "examples": [
                                "initiated"
                              ],
                              "type": "string"
                            },
                            "vehicle-class": {}
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "doc_FxCzxBkkF8V1AtxmY19zhVAz"
                          ],
                          "type": "string"
                        },
                        "relationships": {
                          "properties": {
                            "inquiry": {
                              "properties": {
                                "data": {
                                  "properties": {
                                    "id": {
                                      "examples": [
                                        "inq_Dj1JxEG9K153GbvFYGScCRlL"
                                      ],
                                      "type": "string"
                                    },
                                    "type": {
                                      "examples": [
                                        "inquiry"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "examples": [
                            "document/government-id"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Update a Government ID Document",
        "tags": [
          "Documents"
        ]
      }
    },
    "/document/government-ids/{document-id}/submit": {
      "post": {
        "description": "Submit a government ID document for processing. Can only submit `initiated` documents with photos of the ID attached.",
        "operationId": "submit-a-government-id-document",
        "parameters": [
          {
            "in": "path",
            "name": "document-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "document/government-id",
                        "id": "doc_FxCzxBkkF8V1AtxmY19zhVAz",
                        "attributes": {
                          "status": "submitted",
                          "created-at": "2020-09-13T02:34:57.000Z",
                          "processed-at": null,
                          "front-photo": null,
                          "back-photo": null,
                          "selfie-photo": null,
                          "id-class": null,
                          "name-middle": null,
                          "name-last": null,
                          "birthdate": null,
                          "address-street-1": null,
                          "address-street-2": null,
                          "address-city": null,
                          "address-subdivision": null,
                          "address-postal-code": null,
                          "designations": [],
                          "endorsements": null,
                          "restrictions": null,
                          "vehicle-class": null
                        },
                        "relationships": {
                          "inquiry": {
                            "data": {
                              "type": "inquiry",
                              "id": "inq_Dj1JxEG9K153GbvFYGScCRlL"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "address-city": {},
                            "address-postal-code": {},
                            "address-street-1": {},
                            "address-street-2": {},
                            "address-subdivision": {},
                            "back-photo": {},
                            "birthdate": {},
                            "created-at": {
                              "examples": [
                                "2020-09-13T02:34:57.000Z"
                              ],
                              "type": "string"
                            },
                            "designations": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "examples": [
                                  "temporary"
                                ]
                              }
                            },
                            "endorsements": {},
                            "front-photo": {},
                            "id-class": {},
                            "name-last": {},
                            "name-middle": {},
                            "processed-at": {},
                            "restrictions": {},
                            "selfie-photo": {},
                            "status": {
                              "examples": [
                                "submitted"
                              ],
                              "type": "string"
                            },
                            "vehicle-class": {}
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "doc_FxCzxBkkF8V1AtxmY19zhVAz"
                          ],
                          "type": "string"
                        },
                        "relationships": {
                          "properties": {
                            "inquiry": {
                              "properties": {
                                "data": {
                                  "properties": {
                                    "id": {
                                      "examples": [
                                        "inq_Dj1JxEG9K153GbvFYGScCRlL"
                                      ],
                                      "type": "string"
                                    },
                                    "type": {
                                      "examples": [
                                        "inquiry"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "examples": [
                            "document/government-id"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Submit a Government ID Document",
        "tags": [
          "Documents"
        ]
      }
    },
    "/documents/{document-id}": {
      "get": {
        "description": "Retrieve the details of a Document.",
        "operationId": "retrieve-a-document",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "document-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "document/generic",
                        "id": "doc_JT2Bc2g6rEAVsaZjXs3d6oYq",
                        "attributes": {
                          "kind": "generic",
                          "status": "ready",
                          "created-at": "2020-04-07T02:33:41.000Z",
                          "processed-at": "2020-04-07T05:50:53.000Z",
                          "files": [
                            {
                              "filename": "multipage_example.pdf",
                              "url": "https://withpersona.com/api/v1/files/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdUUyIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--7b006f97a2438d58fc9aec7baa121592f823e678/multipage_example.pdf"
                            }
                          ],
                          "document-type": "invoice"
                        },
                        "relationships": {
                          "inquiry": {
                            "data": {
                              "type": "inquiry",
                              "id": "inq_GC7xwqnhgNHwomz5yT3geLrT"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "created-at": {
                              "examples": [
                                "2020-04-07T02:33:41.000Z"
                              ],
                              "type": "string"
                            },
                            "document-type": {
                              "examples": [
                                "invoice"
                              ],
                              "type": "string"
                            },
                            "files": {
                              "items": {
                                "properties": {
                                  "filename": {
                                    "examples": [
                                      "multipage_example.pdf"
                                    ],
                                    "type": "string"
                                  },
                                  "url": {
                                    "examples": [
                                      "https://withpersona.com/api/v1/files/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdUUyIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--7b006f97a2438d58fc9aec7baa121592f823e678/multipage_example.pdf"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "kind": {
                              "examples": [
                                "generic"
                              ],
                              "type": "string"
                            },
                            "processed-at": {
                              "examples": [
                                "2020-04-07T05:50:53.000Z"
                              ],
                              "type": "string"
                            },
                            "status": {
                              "examples": [
                                "ready"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "doc_JT2Bc2g6rEAVsaZjXs3d6oYq"
                          ],
                          "type": "string"
                        },
                        "relationships": {
                          "properties": {
                            "inquiry": {
                              "properties": {
                                "data": {
                                  "properties": {
                                    "id": {
                                      "examples": [
                                        "inq_GC7xwqnhgNHwomz5yT3geLrT"
                                      ],
                                      "type": "string"
                                    },
                                    "type": {
                                      "examples": [
                                        "inquiry"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "examples": [
                            "document/generic"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Retrieve a Document",
        "tags": [
          "Documents"
        ]
      }
    },
    "/events": {
      "get": {
        "description": "Returns a list of your organization's events.",
        "operationId": "list-all-events",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "in": "query",
            "name": "page",
            "style": "deepObject",
            "allowReserved": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/NestedPaginationQueryParams"
                },
                {
                  "type": "object",
                  "properties": {
                    "after": {
                      "example": "evt_ABC123"
                    },
                    "before": {
                      "example": "evt_ABC123"
                    }
                  }
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "filter",
            "style": "deepObject",
            "allowReserved": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Comma separated list of event names",
                  "type": "string"
                },
                "object-id": {
                  "description": "Comma separated list of object ids",
                  "type": "string"
                },
                "id": {
                  "description": "Comma separated list of event ids",
                  "type": "string"
                }
              }
            }
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": [
                        {
                          "type": "event",
                          "id": "evt_ABC123",
                          "attributes": {
                            "name": "inquiry.expired",
                            "payload": {
                              "data": {
                                "type": "inquiry",
                                "id": "inq_ABC123",
                                "attributes": {}
                              }
                            },
                            "created-at": "2023-09-23T17:14:01.918Z"
                          }
                        },
                        {
                          "type": "event",
                          "id": "evt_ABC123",
                          "attributes": {
                            "name": "account.tag-added",
                            "payload": {
                              "data": {
                                "type": "account",
                                "id": "act_ABC123",
                                "attributes": {}
                              }
                            },
                            "created-at": "2023-09-23T00:46:41.877Z"
                          }
                        }
                      ],
                      "links": {
                        "prev": null,
                        "next": null
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "description": "An array of Events",
                      "items": {
                        "$ref": "#/components/schemas/Event"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "prev": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "examples": [
                            "/api/v1/events?page%5Bbefore%5D=evt_ABC123"
                          ]
                        },
                        "next": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "examples": [
                            "/api/v1/events?page%5Bafter%5D=evt_ABC123"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "List all Events",
        "tags": [
          "Events"
        ]
      }
    },
    "/events/{event-id}": {
      "get": {
        "description": "Retrieve the details of an existing event.",
        "operationId": "retrieve-an-event",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "event-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "type": "event",
                      "id": "evt_ABC123",
                      "attributes": {
                        "name": "inquiry.expired",
                        "payload": {
                          "data": {
                            "type": "inquiry",
                            "id": "inq_ABC123",
                            "attributes": {}
                          }
                        },
                        "created-at": "2023-09-23T17:14:01.918Z"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Retrieve an Event",
        "tags": [
          "Events"
        ]
      }
    },
    "/importers/{importer-id}": {
      "get": {
        "description": "You can retrieve an importer by its ID.",
        "operationId": "retrieve-an-importer",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "String ID of the importer to fetch",
            "in": "path",
            "name": "importer-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "importer/account",
                        "id": "mprt_TKqquVbHaSVYqgWhxNjuYDjQ",
                        "attributes": {
                          "status": "pending",
                          "created-at": "2020-07-12T17:16:54.656Z",
                          "completed-at": null,
                          "error-count": 0,
                          "successful-count": 0,
                          "duplicate-count": 0
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "completed-at": {},
                            "created-at": {
                              "examples": [
                                "2020-07-12T17:16:54.656Z"
                              ],
                              "type": "string"
                            },
                            "duplicate-count": {
                              "default": 0,
                              "examples": [
                                0
                              ],
                              "type": "integer"
                            },
                            "error-count": {
                              "default": 0,
                              "examples": [
                                0
                              ],
                              "type": "integer"
                            },
                            "status": {
                              "examples": [
                                "pending"
                              ],
                              "type": "string"
                            },
                            "successful-count": {
                              "default": 0,
                              "examples": [
                                0
                              ],
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "mprt_TKqquVbHaSVYqgWhxNjuYDjQ"
                          ],
                          "type": "string"
                        },
                        "type": {
                          "examples": [
                            "importer/account"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Retrieve an Importer",
        "tags": [
          "Importers"
        ]
      }
    },
    "/importer/accounts": {
      "post": {
        "description": "Importing accounts allows you to upload a CSV file with each row being a new Account.\n\nThe columns we allow are \n* reference_id\n* name_first\n* name_middle\n* name_last\n* birthdate\n* social_security_number\n* tags",
        "operationId": "import-an-account",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "file": {
                        "type": "string",
                        "contentMediaType": "application/octet-stream"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "file": {
                        "properties": {
                          "data": {
                            "description": "Base64 encoded file",
                            "format": "binary",
                            "type": "string"
                          },
                          "filename": {
                            "description": "Name of file",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "value": {
                      "data": {
                        "type": "importer/account",
                        "id": "mprt_TKqquVbHaSVYqgWhxNjuYDjQ",
                        "attributes": {
                          "status": "pending",
                          "created-at": "2020-07-12T17:16:54.656Z",
                          "completed-at": null,
                          "error-count": 0,
                          "successful-count": 0,
                          "duplicate-count": 0
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "completed-at": {},
                            "created-at": {
                              "examples": [
                                "2020-07-12T17:16:54.656Z"
                              ],
                              "type": "string"
                            },
                            "duplicate-count": {
                              "default": 0,
                              "examples": [
                                0
                              ],
                              "type": "integer"
                            },
                            "error-count": {
                              "default": 0,
                              "examples": [
                                0
                              ],
                              "type": "integer"
                            },
                            "status": {
                              "examples": [
                                "pending"
                              ],
                              "type": "string"
                            },
                            "successful-count": {
                              "default": 0,
                              "examples": [
                                0
                              ],
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "mprt_TKqquVbHaSVYqgWhxNjuYDjQ"
                          ],
                          "type": "string"
                        },
                        "type": {
                          "examples": [
                            "importer/account"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Import Accounts",
        "tags": [
          "Importers"
        ]
      }
    },
    "/importer/list-item/email-addresses": {
      "post": {
        "description": "Importing list items allows you to upload a CSV file with each row being a new List Item.\n\nThe columns we allow are \n* value\n* match_type (either 'email_address' or 'domain')\n\nA match_type of 'email_address' will need to match the entire email address of an individual, while a match_type of 'domain' will match on the email address domain of an individual (i.e. all email addresses with domain 'gmail.com').",
        "operationId": "import-email-address-lists",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ListItemImporterCSVRequest"
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "value": {
                      "data": {
                        "type": "importer/list-item/email-address",
                        "id": "mprt_TKqquVbHaSVYqgWhxNjuYDjQ",
                        "attributes": {
                          "status": "pending",
                          "created-at": "2020-07-12T17:16:54.656Z",
                          "completed-at": null,
                          "error-count": 0,
                          "successful-count": 0,
                          "duplicate-count": 0
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "completed-at": {},
                            "created-at": {
                              "examples": [
                                "2020-07-12T17:16:54.656Z"
                              ],
                              "type": "string"
                            },
                            "duplicate-count": {
                              "default": 0,
                              "examples": [
                                0
                              ],
                              "type": "integer"
                            },
                            "error-count": {
                              "default": 0,
                              "examples": [
                                0
                              ],
                              "type": "integer"
                            },
                            "status": {
                              "examples": [
                                "pending"
                              ],
                              "type": "string"
                            },
                            "successful-count": {
                              "default": 0,
                              "examples": [
                                0
                              ],
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "mprt_TKqquVbHaSVYqgWhxNjuYDjQ"
                          ],
                          "type": "string"
                        },
                        "type": {
                          "examples": [
                            "importer/list-item/email-address"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Import Email Address Lists",
        "tags": [
          "Importers"
        ]
      }
    },
    "/importer/list-item/faces": {
      "post": {
        "description": "Importing list items allows you to upload image files with each file being a new List Item. We recommend uploading max 50 images (with average image size of 500KB) at a time.",
        "operationId": "import-face-lists",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "properties": {
                          "image-files": {
                            "items": {},
                            "type": "array"
                          },
                          "list-id": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "properties": {
                          "image-files": {
                            "items": {
                              "properties": {
                                "data": {
                                  "description": "Base64 encoded file",
                                  "format": "binary",
                                  "type": "string"
                                },
                                "filename": {
                                  "description": "Name of file",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "list-id": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "value": {
                      "data": {
                        "type": "importer/list-item/face",
                        "id": "mprt_TKqquVbHaSVYqgWhxNjuYDjQ",
                        "attributes": {
                          "status": "pending",
                          "created-at": "2020-07-12T17:16:54.656Z",
                          "completed-at": null,
                          "error-count": 0,
                          "successful-count": 0,
                          "duplicate-count": 0
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "completed-at": {},
                            "created-at": {
                              "examples": [
                                "2020-07-12T17:16:54.656Z"
                              ],
                              "type": "string"
                            },
                            "duplicate-count": {
                              "default": 0,
                              "examples": [
                                0
                              ],
                              "type": "integer"
                            },
                            "error-count": {
                              "default": 0,
                              "examples": [
                                0
                              ],
                              "type": "integer"
                            },
                            "status": {
                              "examples": [
                                "pending"
                              ],
                              "type": "string"
                            },
                            "successful-count": {
                              "default": 0,
                              "examples": [
                                0
                              ],
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "mprt_TKqquVbHaSVYqgWhxNjuYDjQ"
                          ],
                          "type": "string"
                        },
                        "type": {
                          "examples": [
                            "importer/list-item/face"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Import Face Lists",
        "tags": [
          "Importers"
        ]
      }
    },
    "/importer/list-item/geolocations": {
      "post": {
        "description": "Importing list items allows you to upload a CSV file with each row being a new List Item.\n\nThe columns we allow are \n* latitude\n* longitude\n* radius_meters",
        "operationId": "import-geolocation-lists",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ListItemImporterCSVRequest"
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "value": {
                      "data": {
                        "type": "importer/list-item/geolocation",
                        "id": "mprt_TKqquVbHaSVYqgWhxNjuYDjQ",
                        "attributes": {
                          "status": "pending",
                          "created-at": "2020-07-12T17:16:54.656Z",
                          "completed-at": null,
                          "error-count": 0,
                          "successful-count": 0,
                          "duplicate-count": 0
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "completed-at": {},
                            "created-at": {
                              "examples": [
                                "2020-07-12T17:16:54.656Z"
                              ],
                              "type": "string"
                            },
                            "duplicate-count": {
                              "default": 0,
                              "examples": [
                                0
                              ],
                              "type": "integer"
                            },
                            "error-count": {
                              "default": 0,
                              "examples": [
                                0
                              ],
                              "type": "integer"
                            },
                            "status": {
                              "examples": [
                                "pending"
                              ],
                              "type": "string"
                            },
                            "successful-count": {
                              "default": 0,
                              "examples": [
                                0
                              ],
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "mprt_TKqquVbHaSVYqgWhxNjuYDjQ"
                          ],
                          "type": "string"
                        },
                        "type": {
                          "examples": [
                            "importer/list-item/geolocation"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Import Geolocation Lists",
        "tags": [
          "Importers"
        ]
      }
    },
    "/importer/list-item/government-id-numbers": {
      "post": {
        "description": "Importing list items allows you to upload a CSV file with each row being a new List Item.\n\nThe columns we allow are \n* id_number\n* id_class\n\nCommon values for id_class include 'pp' for passport and 'dl' for driver license. Please contact us or reach out to support@withpersona.com if you need help getting id_class values!",
        "operationId": "import-government-id-number-lists",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ListItemImporterCSVRequest"
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "value": {
                      "data": {
                        "type": "importer/list-item/government-id-numbers",
                        "id": "mprt_TKqquVbHaSVYqgWhxNjuYDjQ",
                        "attributes": {
                          "status": "pending",
                          "created-at": "2020-07-12T17:16:54.656Z",
                          "completed-at": null,
                          "error-count": 0,
                          "successful-count": 0,
                          "duplicate-count": 0
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "completed-at": {},
                            "created-at": {
                              "examples": [
                                "2020-07-12T17:16:54.656Z"
                              ],
                              "type": "string"
                            },
                            "duplicate-count": {
                              "default": 0,
                              "examples": [
                                0
                              ],
                              "type": "integer"
                            },
                            "error-count": {
                              "default": 0,
                              "examples": [
                                0
                              ],
                              "type": "integer"
                            },
                            "status": {
                              "examples": [
                                "pending"
                              ],
                              "type": "string"
                            },
                            "successful-count": {
                              "default": 0,
                              "examples": [
                                0
                              ],
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "mprt_TKqquVbHaSVYqgWhxNjuYDjQ"
                          ],
                          "type": "string"
                        },
                        "type": {
                          "examples": [
                            "importer/list-item/government-id-numbers"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Import Government ID Number Lists",
        "tags": [
          "Importers"
        ]
      }
    },
    "/importer/list-item/ip-addresses": {
      "post": {
        "description": "Importing list items allows you to upload a CSV file with each row being a new List Item.\n\nThe columns we allow are \n* value\n\nBoth IPv4 and IPv6 are supported.",
        "operationId": "import-ip-address-lists",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ListItemImporterCSVRequest"
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "value": {
                      "data": {
                        "type": "importer/list-item/ip-addresses",
                        "id": "mprt_TKqquVbHaSVYqgWhxNjuYDjQ",
                        "attributes": {
                          "status": "pending",
                          "created-at": "2020-07-12T17:16:54.656Z",
                          "completed-at": null,
                          "error-count": 0,
                          "successful-count": 0,
                          "duplicate-count": 0
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "completed-at": {},
                            "created-at": {
                              "examples": [
                                "2020-07-12T17:16:54.656Z"
                              ],
                              "type": "string"
                            },
                            "duplicate-count": {
                              "default": 0,
                              "examples": [
                                0
                              ],
                              "type": "integer"
                            },
                            "error-count": {
                              "default": 0,
                              "examples": [
                                0
                              ],
                              "type": "integer"
                            },
                            "status": {
                              "examples": [
                                "pending"
                              ],
                              "type": "string"
                            },
                            "successful-count": {
                              "default": 0,
                              "examples": [
                                0
                              ],
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "mprt_TKqquVbHaSVYqgWhxNjuYDjQ"
                          ],
                          "type": "string"
                        },
                        "type": {
                          "examples": [
                            "importer/list-item/ip-addresses"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Import IP Address Lists",
        "tags": [
          "Importers"
        ]
      }
    },
    "/importer/list-item/names": {
      "post": {
        "description": "Importing list items allows you to upload a CSV file with each row being a new List Item.\n\nThe columns we allow are \n* name_first\n* name_last",
        "operationId": "import-name-lists",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ListItemImporterCSVRequest"
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "value": {
                      "data": {
                        "type": "importer/list-item/names",
                        "id": "mprt_TKqquVbHaSVYqgWhxNjuYDjQ",
                        "attributes": {
                          "status": "pending",
                          "created-at": "2020-07-12T17:16:54.656Z",
                          "completed-at": null,
                          "error-count": 0,
                          "successful-count": 0,
                          "duplicate-count": 0
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "completed-at": {},
                            "created-at": {
                              "examples": [
                                "2020-07-12T17:16:54.656Z"
                              ],
                              "type": "string"
                            },
                            "duplicate-count": {
                              "default": 0,
                              "examples": [
                                0
                              ],
                              "type": "integer"
                            },
                            "error-count": {
                              "default": 0,
                              "examples": [
                                0
                              ],
                              "type": "integer"
                            },
                            "status": {
                              "examples": [
                                "pending"
                              ],
                              "type": "string"
                            },
                            "successful-count": {
                              "default": 0,
                              "examples": [
                                0
                              ],
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "mprt_TKqquVbHaSVYqgWhxNjuYDjQ"
                          ],
                          "type": "string"
                        },
                        "type": {
                          "examples": [
                            "importer/list-item/names"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Import Name Lists",
        "tags": [
          "Importers"
        ]
      }
    },
    "/importer/list-item/phone-numbers": {
      "post": {
        "description": "Importing list items allows you to upload a CSV file with each row being a new List Item.\n\nThe columns we allow are \n* value",
        "operationId": "import-phone-number-lists",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ListItemImporterCSVRequest"
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "value": {
                      "data": {
                        "type": "importer/list-item/phone-numbers",
                        "id": "mprt_TKqquVbHaSVYqgWhxNjuYDjQ",
                        "attributes": {
                          "status": "pending",
                          "created-at": "2020-07-12T17:16:54.656Z",
                          "completed-at": null,
                          "error-count": 0,
                          "successful-count": 0,
                          "duplicate-count": 0
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "completed-at": {},
                            "created-at": {
                              "examples": [
                                "2020-07-12T17:16:54.656Z"
                              ],
                              "type": "string"
                            },
                            "duplicate-count": {
                              "default": 0,
                              "examples": [
                                0
                              ],
                              "type": "integer"
                            },
                            "error-count": {
                              "default": 0,
                              "examples": [
                                0
                              ],
                              "type": "integer"
                            },
                            "status": {
                              "examples": [
                                "pending"
                              ],
                              "type": "string"
                            },
                            "successful-count": {
                              "default": 0,
                              "examples": [
                                0
                              ],
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "mprt_TKqquVbHaSVYqgWhxNjuYDjQ"
                          ],
                          "type": "string"
                        },
                        "type": {
                          "examples": [
                            "importer/list-item/phone-numbers"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Import Phone Number Lists",
        "tags": [
          "Importers"
        ]
      }
    },
    "/inquiries": {
      "get": {
        "description": "Returns a list of your organization's inquiries.\n\nNote that this endpoint aggregates inquiries across all <<glossary:template>>(s). See [Pagination](https://docs.withpersona.com/reference/pagination) for more details about handling the response.",
        "operationId": "list-all-inquiries",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "in": "query",
            "name": "page",
            "style": "deepObject",
            "allowReserved": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/NestedPaginationQueryParams"
                },
                {
                  "type": "object",
                  "properties": {
                    "after": {
                      "example": "inq_ABC123"
                    },
                    "before": {
                      "example": "inq_ABC123"
                    }
                  }
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "filter",
            "style": "deepObject",
            "allowReserved": true,
            "schema": {
              "type": "object",
              "properties": {
                "account-id": {
                  "description": "Filter inquiries by account ID",
                  "examples": [
                    "act_ABC123"
                  ],
                  "type": "string"
                },
                "note": {
                  "description": "Filter inquiries by note. Must be the only filter.",
                  "examples": [
                    "A note saved on an inquiry"
                  ],
                  "type": "string"
                },
                "reference-id": {
                  "description": "Filter inquiries by reference ID",
                  "examples": [
                    "abc-123"
                  ],
                  "type": "string"
                },
                "template-id": {
                  "description": "Filter inquiries by template ID (use this field if your template ID starts with `tmpl_`)",
                  "examples": [
                    "tmpl_ABC123"
                  ],
                  "type": "string"
                },
                "inquiry-template-id": {
                  "description": "Filter inquiries by inquiry template ID (use this field if your template ID starts with `itmpl_`)",
                  "examples": [
                    "itmpl_ABC123"
                  ],
                  "type": "string"
                },
                "created-at-start": {
                  "description": "Filter inquiries by creation date, equal to or later than",
                  "examples": [
                    "2023-10-11T04:59:21.764Z"
                  ],
                  "format": "date-time",
                  "type": "string"
                },
                "created-at-end": {
                  "description": "Filter inquiries by creation date, earlier than or equal to",
                  "examples": [
                    "2023-10-20T04:59:21.764Z"
                  ],
                  "format": "date-time",
                  "type": "string"
                }
              }
            }
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "$ref": "#/components/examples/InquiryListResponse"
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/Inquiry"
                      },
                      "type": "array",
                      "description": "An array of Inquiries"
                    },
                    "links": {
                      "properties": {
                        "prev": {
                          "examples": [
                            "/api/v1/inquiries?page%5Bafter%5D=inq_ABC123"
                          ],
                          "type": [
                            "null",
                            "string"
                          ],
                          "description": "URL pointing to the previous page of data, or null if on the first page."
                        },
                        "next": {
                          "examples": [
                            "/api/v1/inquiries?page%5Bafter%5D=inq_ABC123"
                          ],
                          "type": [
                            "null",
                            "string"
                          ],
                          "description": "URL pointing to the next page of data, or null if on the last page."
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "List all Inquiries",
        "tags": [
          "Inquiries"
        ]
      },
      "post": {
        "description": "Create a new inquiry with optional pre-filled attributes. \n\nSee [Sessions](https://docs.withpersona.com/docs/inquiry-sessions) for how to continue the inquiry in [Embedded Flow](https://docs.withpersona.com/docs/embedded-flow) or [Hosted Flow](https://docs.withpersona.com/docs/hosted-flow).",
        "operationId": "create-an-inquiry",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "properties": {
                          "template-id": {
                            "description": "Template ID for flow requirements (use this field if your template ID starts with `tmpl_`). *You must pass in either template-id OR inquiry-template-id OR inquiry-template-version-id*",
                            "examples": [
                              "tmpl_ABC123"
                            ],
                            "type": "string"
                          },
                          "inquiry-template-id": {
                            "description": "Template ID for flow requirements (use this field if your template ID starts with `itmpl_`). *You must pass in either template-id OR inquiry-template-id OR inquiry-template-version-id*",
                            "examples": [
                              "itmpl_ABC123"
                            ],
                            "type": "string"
                          },
                          "inquiry-template-version-id": {
                            "description": "Template Version ID for flow requirements (begins with `itmplv_`). *You must pass in either template-id OR inquiry-template-id OR inquiry-template-version-id*",
                            "examples": [
                              "itmplv_ABC123"
                            ],
                            "type": "string"
                          },
                          "reference-id": {
                            "description": "Reference ID to refer to an entity in your user model. This field is deprecated in favor of `meta.auto-create-account-reference-id`.",
                            "deprecated": true,
                            "examples": [
                              "abc-123"
                            ],
                            "type": "string"
                          },
                          "account-id": {
                            "description": "Account ID to associate with this inquiry",
                            "examples": [
                              "act_ABC123"
                            ],
                            "type": "string"
                          },
                          "creator-email-address": {
                            "description": "Email of the user creating this inquiry in the organization",
                            "examples": [
                              "creator@withpersona.com"
                            ],
                            "type": "string"
                          },
                          "theme-id": {
                            "description": "Theme ID for styling. Only available for Legacy 2.0 Inquiries.",
                            "examples": [
                              "the_ABC123"
                            ],
                            "type": "string"
                          },
                          "theme-set-id": {
                            "description": "BETA FEATURE -- Theme Set ID for styling. Only available for Dynamic Flow Inquiries.",
                            "examples": [
                              "theset_ABC123"
                            ],
                            "type": "string"
                          },
                          "redirect-uri": {
                            "description": "If using the Hosted flow, redirect to this URL after completion",
                            "examples": [
                              "https://yoururl.com/redirect"
                            ],
                            "type": "string"
                          },
                          "note": {
                            "description": "Unstructured field for your custom use",
                            "examples": [
                              "A note about this inquiry"
                            ],
                            "type": "string"
                          },
                          "fields": {
                            "$ref": "#/components/schemas/InquiryFields"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "required": [
                      "attributes"
                    ],
                    "type": "object"
                  },
                  "meta": {
                    "properties": {
                      "auto-create-account": {
                        "description": "If true, automatically create an Account for the user if one does not exist. Default is true.",
                        "examples": [
                          true
                        ],
                        "type": "boolean"
                      },
                      "auto-create-account-type-id": {
                        "description": "If `auto-create-account` is true, the type ID to use for the Account. If not provided, the default type ID for the organization will be used.\nIf `auto-create-account-reference-id` is present and corresponds to an existing Account, `auto-create-account-type-id` will be ignored.\nWill error if passed when `auto-create-account` is false.",
                        "examples": [
                          "acttp_ABC123"
                        ],
                        "type": "string"
                      },
                      "auto-create-account-reference-id": {
                        "description": "If `auto-create-account` is true, this Inquiry will be attached to the Account with this reference ID, or a new Account will be created with this reference ID if one does not exist.\nWill error if passed when `auto-create-account` is false. To associate new Inquiries with existing Accounts while avoiding creation of new Accounts, pass `account-id` instead.",
                        "examples": [
                          "my_reference_id"
                        ],
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "required": [
                  "data"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "$ref": "#/components/examples/InquiryResponse"
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Inquiry"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Create an Inquiry",
        "tags": [
          "Inquiries"
        ]
      }
    },
    "/inquiries/{inquiry-id}": {
      "delete": {
        "description": "Permanently deletes personally identifiable information (PII) for an Inquiry and all associated Verifications and Reports. This action cannot be undone. \n\nThis endpoint can be used to comply with privacy regulations such as GDPR / CCPA or to enforce data privacy.",
        "operationId": "redact-an-inquiry",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "inquiry-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "$ref": "#/components/examples/InquiryResponse"
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Inquiry"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Redact an Inquiry",
        "tags": [
          "Inquiries"
        ]
      },
      "get": {
        "description": "Retrieves the details of an inquiry that has previously been created.\n\nIn the [Embedded Flow](https://docs.withpersona.com/docs/embedded-flow), the `inquiry-id` is the first parameter of the onStart callback. In the [Hosted Flow](https://docs.withpersona.com/docs/hosted-flow), the `inquiry-id` is a query parameter in the onComplete callback.\n\nTemplate information will be found in `data.relationships.inquiry-template` if the inquiry is a Dynamic Flow inquiry, and in `data.relationships.template` if the inquiry is a Legacy 2.0 inquiry. For more information, see [Dynamic Flow vs. Legacy Templates](https://docs.withpersona.com/docs/inquiry-templates#dynamic-flow-vs-legacy-templates).",
        "operationId": "retrieve-an-inquiry",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "inquiry-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "$ref": "#/components/examples/InquiryRetrieveResponse"
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Inquiry"
                    },
                    "included": {
                      "type": "array",
                      "items": {
                        "discriminator": {
                          "propertyName": "type",
                          "mapping": {
                            "report": "#/components/schemas/ReportData",
                            "inquiry-template": "#/components/schemas/InquiryTemplate",
                            "inquiry-session": "#/components/schemas/InquirySession",
                            "verification": "#/components/schemas/VerificationData"
                          }
                        },
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/ReportData"
                          },
                          {
                            "$ref": "#/components/schemas/InquiryTemplate"
                          },
                          {
                            "$ref": "#/components/schemas/InquirySession"
                          },
                          {
                            "$ref": "#/components/schemas/VerificationData"
                          }
                        ]
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Retrieve an Inquiry",
        "tags": [
          "Inquiries"
        ]
      },
      "patch": {
        "description": "Updates an existing inquiry.",
        "operationId": "update-an-inquiry",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "inquiry-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "properties": {
                          "note": {
                            "description": "Unstructured field for your custom use",
                            "examples": [
                              "A note about this inquiry"
                            ],
                            "type": "string"
                          },
                          "fields": {
                            "$ref": "#/components/schemas/InquiryFields"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "$ref": "#/components/examples/InquiryResponse"
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Inquiry"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Update an Inquiry",
        "tags": [
          "Inquiries"
        ]
      }
    },
    "/inquiries/{inquiry-id}/add-tag": {
      "post": {
        "description": "Add a new tag to the Inquiry",
        "operationId": "inquiries-add-tag",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "inquiry-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/InquiriesTagRequest"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "$ref": "#/components/examples/InquiryResponse"
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Inquiry"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Add a tag",
        "tags": [
          "Inquiries"
        ]
      }
    },
    "/inquiries/{inquiry-id}/approve": {
      "post": {
        "description": "Approves an <<glossary:inquiry>>.\n\nNote that this action will trigger any associated workflows and webhooks.",
        "operationId": "approve-an-inquiry",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "inquiry-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/InquiriesReviewRequest"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "$ref": "#/components/examples/InquiryResponse"
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Inquiry"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Approve an Inquiry",
        "tags": [
          "Inquiries"
        ]
      }
    },
    "/inquiries/{inquiry-id}/decline": {
      "post": {
        "description": "Declines an <<glossary:inquiry>>.\n\nNote that this action will trigger any associated workflows and webhooks.",
        "operationId": "decline-an-inquiry",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "inquiry-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/InquiriesReviewRequest"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "$ref": "#/components/examples/InquiryResponse"
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Inquiry"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Decline an Inquiry",
        "tags": [
          "Inquiries"
        ]
      }
    },
    "/inquiries/{inquiry-id}/expire": {
      "post": {
        "description": "Expires an inquiry and all sessions on the inquiry. Cancels any pending verifications on the inquiry.\n\nThe inquiry can still be resumed after expiry.",
        "operationId": "expire-an-inquiry",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "inquiry-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "$ref": "#/components/examples/InquiryResponse"
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Inquiry"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Expire an Inquiry",
        "tags": [
          "Inquiries"
        ]
      }
    },
    "/inquiries/{inquiry-id}/generate-one-time-link": {
      "post": {
        "description": "Creates a new inquiry session and returns `meta.one-time-link`.",
        "operationId": "generate-a-one-time-link",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "Inquiry ID (starts with \"inq_\")",
            "in": "path",
            "name": "inquiry-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "meta": {
                    "properties": {
                      "expires-in-seconds": {
                        "description": "Number of seconds from now to expire the key (must be greater than 0). If not provided, the one-time link expiration setting from the inquiry template version will apply. Default expiry is 24 hours.",
                        "examples": [
                          3600
                        ],
                        "format": "int32",
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "$ref": "#/components/examples/InquiryOneTimeLinkResponse"
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Inquiry"
                    },
                    "meta": {
                      "properties": {
                        "one-time-link": {
                          "examples": [
                            "https://withpersona.com/verify?code=us1-asdf"
                          ],
                          "type": "string"
                        },
                        "one-time-link-short": {
                          "examples": [
                            "https://perso.na/verify?code=ABC123"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Generate a one-time link",
        "tags": [
          "Inquiries"
        ]
      }
    },
    "/inquiries/{inquiry-id}/print": {
      "get": {
        "description": "Prints an inquiry as PDF.",
        "operationId": "print-an-inquiry-pdf",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "inquiry-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Print Inquiry PDF",
        "tags": [
          "Inquiries"
        ]
      }
    },
    "/inquiries/{inquiry-id}/remove-tag": {
      "post": {
        "description": "Remove an existing tag from an Inquiry",
        "operationId": "inquiries-remove-tag",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "inquiry-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/InquiriesTagRequest"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "$ref": "#/components/examples/InquiryResponse"
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Inquiry"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Remove a tag",
        "tags": [
          "Inquiries"
        ]
      }
    },
    "/inquiries/{inquiry-id}/resume": {
      "post": {
        "description": "Creates a new inquiry session and returns `meta.session-token`. If the inquiry's status is `expired`, changes the status to `pending`. The `session-token` must be included when loading the inquiry flow if the inquiry's status is `pending`. For more information, see [Resuming Inquiries](https://docs.withpersona.com/docs/inquiries-resuming-inquiries).",
        "operationId": "resume-an-inquiry",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "inquiry-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "$ref": "#/components/examples/InquiryResumeResponse"
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Inquiry"
                    },
                    "meta": {
                      "properties": {
                        "session-token": {
                          "examples": [
                            "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJpcXNlX1Q4UHJxcG9FaHdoVVYxd0hSZXVVOW9mcyIsImF1ZCI6InBlcnNvbmEtdmVyaWZ5IiwiaXNzIjoic3RhZ2luZy53aXRocGVyc29uYS5jb20iLCJpYXQiOjE1NzM4NTI2NjEsIm5iZiI6MTU3Mzg1MjY2MSwiZXhwIjoxNTczOTM5MDYxLCJqdGkiOiI5NWRlNjhkOS1hZjI4LTRiMzItOWIxYi03MjA4MTg3NTI3N2IiLCJzaWQiOiJpcXNlX1Q4UHJxcG9FaHdoVVYxd0hSZXVVOW9mcyJ9.LN6DEnfjP5cZoZ3w41RgyX5QVmutmjHja_bRHOmDjg0"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Resume an Inquiry",
        "tags": [
          "Inquiries"
        ]
      }
    },
    "/inquiries/{inquiry-id}/set-tags": {
      "post": {
        "description": "Set all tags on an Inquiry. Note that this removes any tags that are not provided.",
        "operationId": "inquiries-set-all-tags",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "inquiry-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "meta": {
                    "properties": {
                      "tag-name": {
                        "items": {
                          "type": "string"
                        },
                        "examples": [
                          [
                            "apple",
                            "banana"
                          ],
                          [
                            "orange"
                          ]
                        ],
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "$ref": "#/components/examples/InquiryResponse"
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Inquiry"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Set all tags",
        "tags": [
          "Inquiries"
        ]
      }
    },
    "/inquiries/{inquiry-id}/perform-simulate-actions": {
      "post": {
        "description": "Perform a series of simulated actions on a Sandbox inquiry.",
        "operationId": "inquiries-perform-simulate-actions",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "inquiry-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "meta": {
                    "properties": {
                      "simulate-actions": {
                        "items": {
                          "properties": {
                            "type": {
                              "description": "The type of simulate action. See [valid actions](https://docs.withpersona.com/docs/simulate-inquiry-actions).",
                              "type": "string",
                              "enum": [
                                "start_inquiry",
                                "complete_inquiry",
                                "fail_inquiry",
                                "expire_inquiry",
                                "mark_for_review_inquiry",
                                "approve_inquiry",
                                "decline_inquiry"
                              ]
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "type": "object"
                        },
                        "examples": [
                          [
                            {
                              "type": "start_inquiry"
                            },
                            {
                              "type": "complete_inquiry"
                            }
                          ],
                          [
                            {
                              "type": "decline_inquiry"
                            }
                          ]
                        ],
                        "type": "array"
                      }
                    },
                    "required": [
                      "simulate-actions"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "meta"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "$ref": "#/components/examples/InquiryResponse"
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Inquiry"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Perform Simulate Actions",
        "tags": [
          "Inquiries"
        ]
      }
    },
    "/inquiry-sessions": {
      "get": {
        "description": "Retrieves a list of Inquiry Sessions.",
        "operationId": "list-all-inquiry-sessions",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "in": "query",
            "name": "filter",
            "style": "deepObject",
            "allowReserved": true,
            "schema": {
              "type": "object",
              "properties": {
                "inquiry-id": {
                  "description": "Filter inquiry sessions by inquiry ID",
                  "type": "string",
                  "example": "inq_ABC123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": [
                        {
                          "type": "inquiry-session",
                          "id": "iqse_ABC123",
                          "attributes": {
                            "status": "expired",
                            "created-at": "2023-07-25T04:15:20.000Z",
                            "ip-address": "127.0.0.1",
                            "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36",
                            "os-name": "Mac",
                            "os-full-version": "10.15.7",
                            "device-type": "desktop",
                            "device-name": null,
                            "browser-name": "Chrome",
                            "browser-full-version": "115.0.0.0",
                            "mobile-sdk-name": null,
                            "mobile-sdk-full-version": null,
                            "is-proxy": false,
                            "is-tor": false,
                            "is-datacenter": false,
                            "threat-level": "low",
                            "country-code": "US",
                            "country-name": "United States",
                            "region-code": "CA",
                            "region-name": "California",
                            "latitude": 37.7688,
                            "longitude": -122.262
                          },
                          "relationships": {
                            "inquiry": {
                              "data": {
                                "type": "inquiry",
                                "id": "inq_ABC123"
                              }
                            }
                          }
                        }
                      ],
                      "links": {
                        "prev": null,
                        "next": null
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/InquirySession"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "prev": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "examples": [
                            "/api/v1/inquiry-sessions?page%5Bbefore%5D=iqse_ABC123"
                          ]
                        },
                        "next": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "examples": [
                            "/api/v1/inquiry-sessions?page%5Bafter%5D=iqse_ABC123"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "List all Inquiry Sessions",
        "tags": [
          "Inquiry Sessions"
        ]
      },
      "post": {
        "description": "Creates a new Inquiry Session.",
        "operationId": "create-an-inquiry-session",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "properties": {
                          "inquiry-id": {
                            "description": "Inquiry ID of the session",
                            "type": "string"
                          }
                        },
                        "required": [
                          "inquiry-id"
                        ],
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "$ref": "#/components/examples/InquirySessionResponse"
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/InquirySession"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Create an Inquiry Session",
        "tags": [
          "Inquiry Sessions"
        ]
      }
    },
    "/inquiry-sessions/expire-all": {
      "post": {
        "description": "Expires all active Inquiry Sessions for a given set of Inquiries.",
        "operationId": "expire-inquiry-sessions",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "meta": {
                    "properties": {
                      "inquiry-ids": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object",
                    "required": [
                      "inquiry-ids"
                    ]
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": [
                        {
                          "type": "inquiry-session",
                          "id": "iqse_ABC123",
                          "attributes": {
                            "status": "expired",
                            "created-at": "2023-07-25T04:15:20.000Z",
                            "ip-address": "127.0.0.1",
                            "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36",
                            "os-name": "Mac",
                            "os-full-version": "10.15.7",
                            "device-type": "desktop",
                            "device-name": null,
                            "browser-name": "Chrome",
                            "browser-full-version": "115.0.0.0",
                            "mobile-sdk-name": null,
                            "mobile-sdk-full-version": null,
                            "is-proxy": false,
                            "is-tor": false,
                            "is-datacenter": false,
                            "threat-level": "low",
                            "country-code": "US",
                            "country-name": "United States",
                            "region-code": "CA",
                            "region-name": "California",
                            "latitude": 37.7688,
                            "longitude": -122.262
                          },
                          "relationships": {
                            "inquiry": {
                              "data": {
                                "type": "inquiry",
                                "id": "inq_ABC123"
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/InquirySession"
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Expire Inquiry Sessions",
        "tags": [
          "Inquiry Sessions"
        ]
      }
    },
    "/inquiry-sessions/{inquiry-session-id}": {
      "get": {
        "description": "Retrieves details of a specific Inquiry Session.",
        "operationId": "retrieve-an-inquiry-session",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "Inquiry session ID",
            "in": "path",
            "name": "inquiry-session-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "$ref": "#/components/examples/InquirySessionResponse"
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/InquirySession"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Retrieve an Inquiry Session",
        "tags": [
          "Inquiry Sessions"
        ]
      }
    },
    "/inquiry-sessions/{inquiry-session-id}/expire": {
      "post": {
        "description": "Expires a specific Inquiry Session.",
        "operationId": "expire-an-inquiry-session",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "inquiry-session-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "$ref": "#/components/examples/InquirySessionResponse"
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/InquirySession"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Expire an Inquiry Session",
        "tags": [
          "Inquiry Sessions"
        ]
      }
    },
    "/inquiry-sessions/{inquiry-session-id}/generate-one-time-link": {
      "post": {
        "description": "Generates a one-time link for a specific Inquiry Session.",
        "operationId": "generate-a-one-time-link-for-an-inquiry-session",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "inquiry-session-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "inquiry-session",
                        "id": "iqse_ABC123",
                        "attributes": {
                          "status": "expired",
                          "created-at": "2023-07-25T04:15:20.000Z",
                          "ip-address": "127.0.0.1",
                          "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36",
                          "os-name": "Mac",
                          "os-full-version": "10.15.7",
                          "device-type": "desktop",
                          "device-name": null,
                          "browser-name": "Chrome",
                          "browser-full-version": "115.0.0.0",
                          "mobile-sdk-name": null,
                          "mobile-sdk-full-version": null,
                          "is-proxy": false,
                          "is-tor": false,
                          "is-datacenter": false,
                          "threat-level": "low",
                          "country-code": "US",
                          "country-name": "United States",
                          "region-code": "CA",
                          "region-name": "California",
                          "latitude": 37.7688,
                          "longitude": -122.262
                        },
                        "relationships": {
                          "inquiry": {
                            "data": {
                              "type": "inquiry",
                              "id": "inq_ABC123"
                            }
                          }
                        }
                      },
                      "meta": {
                        "one-time-link": "https://withpersona.com/verify?code=CODE",
                        "one-time-link-short": "https://perso.na/CODE"
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/InquirySession"
                    },
                    "meta": {
                      "properties": {
                        "one-time-link": {
                          "type": "string"
                        },
                        "one-time-link-short": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Generate a one-time link for Inquiry Session",
        "tags": [
          "Inquiry Sessions"
        ]
      }
    },
    "/list-item/browser-fingerprints": {
      "post": {
        "description": "Create a new item in a <<glossary:list>>.",
        "operationId": "create-a-browser-fingerprint-list-item",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "properties": {
                          "list-id": {
                            "description": "ID of the list to add this item to. List must be a Browser Fingerprint List.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Browser fingerprint to add to list.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "value": {
                      "data": {
                        "type": "list-item/browser-fingerprint",
                        "id": "libf_N6PqYkfSqeqiQYWoeHA3GGDo",
                        "attributes": {
                          "status": "pending",
                          "archived-at": null,
                          "updated-at": "2020-09-18T18:06:40.515Z",
                          "created-at": "2020-09-18T18:06:40.515Z",
                          "match-count": 0,
                          "value": "3082c312c9bfc8f0a43bc7173b18afe6"
                        },
                        "relationships": {
                          "creator": {
                            "data": null
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "archived-at": {},
                            "created-at": {
                              "examples": [
                                "2020-09-18T18:06:40.515Z"
                              ],
                              "type": "string"
                            },
                            "match-count": {
                              "default": 0,
                              "examples": [
                                0
                              ],
                              "type": "integer"
                            },
                            "status": {
                              "examples": [
                                "pending"
                              ],
                              "type": "string"
                            },
                            "updated-at": {
                              "examples": [
                                "2020-09-18T18:06:40.515Z"
                              ],
                              "type": "string"
                            },
                            "value": {
                              "examples": [
                                "3082c312c9bfc8f0a43bc7173b18afe6"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "libf_N6PqYkfSqeqiQYWoeHA3GGDo"
                          ],
                          "type": "string"
                        },
                        "relationships": {
                          "properties": {
                            "creator": {
                              "properties": {
                                "data": {}
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "examples": [
                            "list-item/browser-fingerprint"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Create a Browser Fingerprint List Item",
        "tags": [
          "List Items"
        ]
      }
    },
    "/list-item/browser-fingerprints/{list-item-id}": {
      "delete": {
        "description": "Archived items are not matched against new inquiries.",
        "operationId": "archive-a-browser-fingerprint-list-item",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "ID of list item to archive.",
            "in": "path",
            "name": "list-item-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "list-item/browser-fingerprint",
                        "id": "libf_N6PqYkfSqeqiQYWoeHA3GGDo",
                        "attributes": {
                          "status": "archived",
                          "archived-at": "2020-09-18T19:06:40.515Z",
                          "updated-at": "2020-09-18T18:06:40.515Z",
                          "created-at": "2020-09-18T18:06:40.515Z",
                          "match-count": 0,
                          "value": "3082c312c9bfc8f0a43bc7173b18afe6"
                        },
                        "relationships": {
                          "creator": {
                            "data": null
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "archived-at": {
                              "examples": [
                                "2020-09-18T19:06:40.515Z"
                              ],
                              "type": "string"
                            },
                            "created-at": {
                              "examples": [
                                "2020-09-18T18:06:40.515Z"
                              ],
                              "type": "string"
                            },
                            "match-count": {
                              "default": 0,
                              "examples": [
                                0
                              ],
                              "type": "integer"
                            },
                            "status": {
                              "examples": [
                                "archived"
                              ],
                              "type": "string"
                            },
                            "updated-at": {
                              "examples": [
                                "2020-09-18T18:06:40.515Z"
                              ],
                              "type": "string"
                            },
                            "value": {
                              "examples": [
                                "3082c312c9bfc8f0a43bc7173b18afe6"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "libf_N6PqYkfSqeqiQYWoeHA3GGDo"
                          ],
                          "type": "string"
                        },
                        "relationships": {
                          "properties": {
                            "creator": {
                              "properties": {
                                "data": {}
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "examples": [
                            "list-item/browser-fingerprint"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Archive a Browser Fingerprint List Item",
        "tags": [
          "List Items"
        ]
      }
    },
    "/list-item/countries": {
      "post": {
        "description": "Create a new item in a <<glossary:list>>.",
        "operationId": "create-a-county-list-item",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "properties": {
                          "country-code": {
                            "description": "Country code to add to list.",
                            "type": "string"
                          },
                          "list-id": {
                            "description": "ID of the list to add this item to. List must be a Country List.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "value": {
                      "data": {
                        "type": "list-item/country",
                        "id": "lic_wt5cgLbSi7twJ8itK7jxCs8q",
                        "attributes": {
                          "status": "pending",
                          "archived-at": null,
                          "updated-at": "2020-09-18T17:58:06.866Z",
                          "created-at": "2020-09-18T17:58:06.866Z",
                          "match-count": 0,
                          "country-code": "US"
                        },
                        "relationships": {
                          "creator": {
                            "data": null
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Create a Country List Item",
        "tags": [
          "List Items"
        ]
      }
    },
    "/list-item/countries/{list-item-id}": {
      "delete": {
        "description": "Archived items are not matched against new inquiries.",
        "operationId": "archive-a-country-list-item",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "ID of list item to archive.",
            "in": "path",
            "name": "list-item-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "list-item/country",
                        "id": "lic_wt5cgLbSi7twJ8itK7jxCs8q",
                        "attributes": {
                          "status": "archived",
                          "archived-at": "2020-09-18T18:58:06.866Z",
                          "updated-at": "2020-09-18T17:58:06.866Z",
                          "created-at": "2020-09-18T17:58:06.866Z",
                          "match-count": 0,
                          "country-code": "US"
                        },
                        "relationships": {
                          "creator": {
                            "data": null
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Archive a Country List Item",
        "tags": [
          "List Items"
        ]
      }
    },
    "/list-item/email-addresses": {
      "post": {
        "description": "Create a new item in a <<glossary:list>>.",
        "operationId": "create-an-email-address-list-item",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "properties": {
                          "list-id": {
                            "description": "ID of the list to add this item to. List must be an Email Address List.",
                            "type": "string"
                          },
                          "match-type": {
                            "description": "Can be either `email_address` or `domain`.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Email address to add.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "value": {
                      "data": {
                        "type": "list-item/email-address",
                        "id": "liea_wt5cgLbSi7twJ8itK7jxCs8q",
                        "attributes": {
                          "status": "pending",
                          "archived-at": null,
                          "updated-at": "2020-09-18T17:58:06.866Z",
                          "created-at": "2020-09-18T17:58:06.866Z",
                          "match-count": 0,
                          "value": "joe-imposter@yahoo.com",
                          "match-type": "email_address"
                        },
                        "relationships": {
                          "creator": {
                            "data": null
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "archived-at": {},
                            "created-at": {
                              "examples": [
                                "2020-09-18T17:58:06.866Z"
                              ],
                              "type": "string"
                            },
                            "match-count": {
                              "default": 0,
                              "examples": [
                                0
                              ],
                              "type": "integer"
                            },
                            "match-type": {
                              "examples": [
                                "email_address"
                              ],
                              "type": "string"
                            },
                            "status": {
                              "examples": [
                                "pending"
                              ],
                              "type": "string"
                            },
                            "updated-at": {
                              "examples": [
                                "2020-09-18T17:58:06.866Z"
                              ],
                              "type": "string"
                            },
                            "value": {
                              "examples": [
                                "joe-imposter@yahoo.com"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "liea_wt5cgLbSi7twJ8itK7jxCs8q"
                          ],
                          "type": "string"
                        },
                        "relationships": {
                          "properties": {
                            "creator": {
                              "properties": {
                                "data": {}
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "examples": [
                            "list-item/email-address"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Create an Email Address List Item",
        "tags": [
          "List Items"
        ]
      }
    },
    "/list-item/email-addresses/{list-item-id}": {
      "delete": {
        "description": "Archived items are not matched against new inquiries.",
        "operationId": "archive-an-email-address-list-item",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "ID of list item to archive.",
            "in": "path",
            "name": "list-item-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "list-item/email-address",
                        "id": "liea_wt5cgLbSi7twJ8itK7jxCs8q",
                        "attributes": {
                          "status": "archived",
                          "archived-at": "2020-09-18T18:58:06.866Z",
                          "updated-at": "2020-09-18T17:58:06.866Z",
                          "created-at": "2020-09-18T17:58:06.866Z",
                          "match-count": 0,
                          "value": "joe-imposter@yahoo.com",
                          "match-type": "email_address"
                        },
                        "relationships": {
                          "creator": {
                            "data": null
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "archived-at": {
                              "examples": [
                                "2020-09-18T18:58:06.866Z"
                              ],
                              "type": "string"
                            },
                            "created-at": {
                              "examples": [
                                "2020-09-18T17:58:06.866Z"
                              ],
                              "type": "string"
                            },
                            "match-count": {
                              "default": 0,
                              "examples": [
                                0
                              ],
                              "type": "integer"
                            },
                            "match-type": {
                              "examples": [
                                "email_address"
                              ],
                              "type": "string"
                            },
                            "status": {
                              "examples": [
                                "archived"
                              ],
                              "type": "string"
                            },
                            "updated-at": {
                              "examples": [
                                "2020-09-18T17:58:06.866Z"
                              ],
                              "type": "string"
                            },
                            "value": {
                              "examples": [
                                "joe-imposter@yahoo.com"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "liea_wt5cgLbSi7twJ8itK7jxCs8q"
                          ],
                          "type": "string"
                        },
                        "relationships": {
                          "properties": {
                            "creator": {
                              "properties": {
                                "data": {}
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "examples": [
                            "list-item/email-address"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Archive an Email Address List Item",
        "tags": [
          "List Items"
        ]
      }
    },
    "/list-item/faces": {
      "post": {
        "description": "Create a new item in a <<glossary:list>>.",
        "operationId": "create-a-face-list-item",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "properties": {
                          "face-photo": {
                            "properties": {
                              "data": {
                                "description": "Base64 encoded file",
                                "format": "binary",
                                "type": "string"
                              },
                              "filename": {
                                "description": "Name of file",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "list-id": {
                            "description": "ID of the list to add this item to. List must be a Face List.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "value": {
                      "data": {
                        "type": "list-item/face",
                        "id": "lifc_wt5cgLbSi7twJ8itK7jxCs8q",
                        "attributes": {
                          "status": "pending",
                          "archived-at": null,
                          "updated-at": "2020-09-18T17:58:06.866Z",
                          "created-at": "2020-09-18T17:58:06.866Z",
                          "match-count": 0,
                          "face-photo": {
                            "filename": "photo.png",
                            "url": "https://withpersona.com/api/v1/files/..."
                          }
                        },
                        "relationships": {
                          "creator": {
                            "data": null
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Create a Face List Item",
        "tags": [
          "List Items"
        ]
      }
    },
    "/list-item/faces/{list-item-id}": {
      "delete": {
        "description": "Archived items are not matched against new inquiries.",
        "operationId": "archive-a-face-list-item",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "ID of list item to archive.",
            "in": "path",
            "name": "list-item-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "list-item/geolocation",
                        "id": "lifc_FVrbLriSXNwPqMogu8vvuTi8",
                        "attributes": {
                          "status": "archived",
                          "archived-at": "2020-09-18T19:03:30.324Z",
                          "updated-at": "2020-09-18T18:03:30.324Z",
                          "created-at": "2020-09-18T18:03:30.324Z",
                          "match-count": 0,
                          "face-photo": {
                            "filename": "photo.png",
                            "url": "https://withpersona.com/api/v1/files/..."
                          }
                        },
                        "relationships": {
                          "creator": {
                            "data": null
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Archive a Face List Item",
        "tags": [
          "List Items"
        ]
      }
    },
    "/list-item/geolocations": {
      "post": {
        "description": "Create a new item in a <<glossary:list>>.",
        "operationId": "create-a-geolocation-list-item",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "properties": {
                          "latitude": {
                            "description": "Latitude of the geolocation item (-90 to 90).",
                            "format": "float",
                            "type": "number"
                          },
                          "list-id": {
                            "description": "ID of the list to add this item to. List must be a Geolocation List.",
                            "type": "string"
                          },
                          "longitude": {
                            "description": "Longitude of geolocation item (-180 to 180).",
                            "format": "float",
                            "type": "number"
                          },
                          "radius-meters": {
                            "description": "Radius in meters from point to be considered for match distance.",
                            "format": "float",
                            "type": "number"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "value": {
                      "data": {
                        "type": "list-item/geolocation",
                        "id": "ligl_DQdchRN288UN6sn9mAmEcMu5",
                        "attributes": {
                          "status": "pending",
                          "archived-at": null,
                          "updated-at": "2020-09-18T18:03:30.324Z",
                          "created-at": "2020-09-18T18:03:30.324Z",
                          "match-count": 0,
                          "latitude": 37.7879461,
                          "longitude": -122.3977409,
                          "radius-meters": 10
                        },
                        "relationships": {
                          "creator": {
                            "data": null
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "archived-at": {},
                            "created-at": {
                              "examples": [
                                "2020-09-18T18:03:30.324Z"
                              ],
                              "type": "string"
                            },
                            "latitude": {
                              "default": 0,
                              "examples": [
                                37.7879461
                              ],
                              "type": "number"
                            },
                            "longitude": {
                              "default": 0,
                              "examples": [
                                -122.3977409
                              ],
                              "type": "number"
                            },
                            "match-count": {
                              "default": 0,
                              "examples": [
                                0
                              ],
                              "type": "integer"
                            },
                            "radius-meters": {
                              "default": 0,
                              "examples": [
                                10
                              ],
                              "type": "integer"
                            },
                            "status": {
                              "examples": [
                                "pending"
                              ],
                              "type": "string"
                            },
                            "updated-at": {
                              "examples": [
                                "2020-09-18T18:03:30.324Z"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "ligl_DQdchRN288UN6sn9mAmEcMu5"
                          ],
                          "type": "string"
                        },
                        "relationships": {
                          "properties": {
                            "creator": {
                              "properties": {
                                "data": {}
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "examples": [
                            "list-item/geolocation"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Create a Geolocation List Item",
        "tags": [
          "List Items"
        ]
      }
    },
    "/list-item/geolocations/{list-item-id}": {
      "delete": {
        "description": "Archived items are not matched against new inquiries.",
        "operationId": "archive-a-geolocation-list-item",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "ID of list item to archive.",
            "in": "path",
            "name": "list-item-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "list-item/geolocation",
                        "id": "ligl_DQdchRN288UN6sn9mAmEcMu5",
                        "attributes": {
                          "status": "archived",
                          "archived-at": "2020-09-18T19:03:30.324Z",
                          "updated-at": "2020-09-18T18:03:30.324Z",
                          "created-at": "2020-09-18T18:03:30.324Z",
                          "match-count": 0,
                          "latitude": 37.7879461,
                          "longitude": -122.3977409,
                          "radius-meters": 10
                        },
                        "relationships": {
                          "creator": {
                            "data": null
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "archived-at": {
                              "examples": [
                                "2020-09-18T19:03:30.324Z"
                              ],
                              "type": "string"
                            },
                            "created-at": {
                              "examples": [
                                "2020-09-18T18:03:30.324Z"
                              ],
                              "type": "string"
                            },
                            "latitude": {
                              "default": 0,
                              "examples": [
                                37.7879461
                              ],
                              "type": "number"
                            },
                            "longitude": {
                              "default": 0,
                              "examples": [
                                -122.3977409
                              ],
                              "type": "number"
                            },
                            "match-count": {
                              "default": 0,
                              "examples": [
                                0
                              ],
                              "type": "integer"
                            },
                            "radius-meters": {
                              "default": 0,
                              "examples": [
                                10
                              ],
                              "type": "integer"
                            },
                            "status": {
                              "examples": [
                                "archived"
                              ],
                              "type": "string"
                            },
                            "updated-at": {
                              "examples": [
                                "2020-09-18T18:03:30.324Z"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "ligl_DQdchRN288UN6sn9mAmEcMu5"
                          ],
                          "type": "string"
                        },
                        "relationships": {
                          "properties": {
                            "creator": {
                              "properties": {
                                "data": {}
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "examples": [
                            "list-item/geolocation"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Archive a Geolocation List Item",
        "tags": [
          "List Items"
        ]
      }
    },
    "/list-item/government-id-numbers": {
      "post": {
        "description": "Create a new item in a <<glossary:list>>.",
        "operationId": "create-a-government-id-number-list-item",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "properties": {
                          "id-class": {
                            "description": "Common values for id-class include `'pp'` for passport and`'dl'` for driver license.",
                            "type": "string"
                          },
                          "id-number": {
                            "description": "Number of the ID.",
                            "type": "string"
                          },
                          "list-id": {
                            "description": "ID of the list to add this item to. List must be a Government ID Number List.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "value": {
                      "data": {
                        "type": "list-item/government-id-number",
                        "id": "ligin_soqGRWaUXZct3pCRbjRaXFqz",
                        "attributes": {
                          "status": "pending",
                          "archived-at": null,
                          "updated-at": "2020-09-18T18:07:53.000Z",
                          "created-at": "2020-09-18T18:07:53.000Z",
                          "match-count": 0,
                          "id-class": "dl",
                          "id-number": "F4K3NUM"
                        },
                        "relationships": {
                          "creator": {
                            "data": null
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "archived-at": {},
                            "created-at": {
                              "examples": [
                                "2020-09-18T18:07:53.000Z"
                              ],
                              "type": "string"
                            },
                            "id-class": {
                              "examples": [
                                "dl"
                              ],
                              "type": "string"
                            },
                            "id-number": {
                              "examples": [
                                "F4K3NUM"
                              ],
                              "type": "string"
                            },
                            "match-count": {
                              "default": 0,
                              "examples": [
                                0
                              ],
                              "type": "integer"
                            },
                            "status": {
                              "examples": [
                                "pending"
                              ],
                              "type": "string"
                            },
                            "updated-at": {
                              "examples": [
                                "2020-09-18T18:07:53.000Z"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "ligin_soqGRWaUXZct3pCRbjRaXFqz"
                          ],
                          "type": "string"
                        },
                        "relationships": {
                          "properties": {
                            "creator": {
                              "properties": {
                                "data": {}
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "examples": [
                            "list-item/government-id-number"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Create a Government ID Number List Item",
        "tags": [
          "List Items"
        ]
      }
    },
    "/list-item/government-id-numbers/{list-item-id}": {
      "delete": {
        "description": "Archived items are not matched against new inquiries.",
        "operationId": "archive-a-government-id-number-list-item",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "ID of list item to archive.",
            "in": "path",
            "name": "list-item-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "list-item/government-id-number",
                        "id": "ligin_soqGRWaUXZct3pCRbjRaXFqz",
                        "attributes": {
                          "status": "archived",
                          "archived-at": "2020-09-18T19:07:53.000Z",
                          "updated-at": "2020-09-18T18:07:53.000Z",
                          "created-at": "2020-09-18T18:07:53.000Z",
                          "match-count": 0,
                          "id-class": "dl",
                          "id-number": "F4K3NUM"
                        },
                        "relationships": {
                          "creator": {
                            "data": null
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "archived-at": {
                              "examples": [
                                "2020-09-18T19:07:53.000Z"
                              ],
                              "type": "string"
                            },
                            "created-at": {
                              "examples": [
                                "2020-09-18T18:07:53.000Z"
                              ],
                              "type": "string"
                            },
                            "id-class": {
                              "examples": [
                                "dl"
                              ],
                              "type": "string"
                            },
                            "id-number": {
                              "examples": [
                                "F4K3NUM"
                              ],
                              "type": "string"
                            },
                            "match-count": {
                              "default": 0,
                              "examples": [
                                0
                              ],
                              "type": "integer"
                            },
                            "status": {
                              "examples": [
                                "archived"
                              ],
                              "type": "string"
                            },
                            "updated-at": {
                              "examples": [
                                "2020-09-18T18:07:53.000Z"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "ligin_soqGRWaUXZct3pCRbjRaXFqz"
                          ],
                          "type": "string"
                        },
                        "relationships": {
                          "properties": {
                            "creator": {
                              "properties": {
                                "data": {}
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "examples": [
                            "list-item/government-id-number"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Archive a Government ID Number List Item",
        "tags": [
          "List Items"
        ]
      }
    },
    "/list-item/ip-addresses": {
      "post": {
        "description": "Create a new item in a <<glossary:list>>.",
        "operationId": "create-an-ip-address-list-item",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "properties": {
                          "list-id": {
                            "description": "ID of the list to add this item to. List must be an IP Address List.",
                            "type": "string"
                          },
                          "value": {
                            "description": "IP address to add. IPv4 and IPv6 are supported.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "value": {
                      "data": {
                        "type": "list-item/ip-address",
                        "id": "liip_soqGRWaUXZct3pCRbjRaXFqz",
                        "attributes": {
                          "status": "pending",
                          "archived-at": null,
                          "updated-at": "2020-09-18T18:07:53.000Z",
                          "created-at": "2020-09-18T18:07:53.000Z",
                          "match-count": 0,
                          "value": "127.0.0.0/24"
                        },
                        "relationships": {
                          "creator": {
                            "data": null
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Create an IP Address List Item",
        "tags": [
          "List Items"
        ]
      }
    },
    "/list-item/ip-addresses/{list-item-id}": {
      "delete": {
        "description": "Archived items are not matched against new inquiries.",
        "operationId": "archive-an-ip-address-list-item",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "ID of list item to archive.",
            "in": "path",
            "name": "list-item-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "list-item/ip-address",
                        "id": "liip_soqGRWaUXZct3pCRbjRaXFqz",
                        "attributes": {
                          "status": "archived",
                          "archived-at": "2020-09-18T19:07:53.000Z",
                          "updated-at": "2020-09-18T18:07:53.000Z",
                          "created-at": "2020-09-18T18:07:53.000Z",
                          "match-count": 0,
                          "value": "127.0.0.0/24"
                        },
                        "relationships": {
                          "creator": {
                            "data": null
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Archive an IP Address List Item",
        "tags": [
          "List Items"
        ]
      }
    },
    "/list-item/names": {
      "post": {
        "description": "Create a new item in a <<glossary:list>>.",
        "operationId": "create-a-name-list-item",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "properties": {
                          "list-id": {
                            "description": "ID of the list to add this item to. List must be a Name List.",
                            "type": "string"
                          },
                          "name-first": {
                            "description": "First name of the name to add to the list.",
                            "type": "string"
                          },
                          "name-last": {
                            "description": "Last name of the name to add to the list.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "value": {
                      "data": {
                        "type": "list-item/name",
                        "id": "lin_soqGRWaUXZct3pCRbjRaXFqz",
                        "attributes": {
                          "status": "pending",
                          "archived-at": null,
                          "updated-at": "2020-09-18T18:07:53.000Z",
                          "created-at": "2020-09-18T18:07:53.000Z",
                          "match-count": 0,
                          "name-first": "Joe",
                          "name-last": "Imposter"
                        },
                        "relationships": {
                          "creator": {
                            "data": null
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "archived-at": {},
                            "created-at": {
                              "examples": [
                                "2020-09-18T18:07:53.000Z"
                              ],
                              "type": "string"
                            },
                            "match-count": {
                              "default": 0,
                              "examples": [
                                0
                              ],
                              "type": "integer"
                            },
                            "name-first": {
                              "examples": [
                                "Joe"
                              ],
                              "type": "string"
                            },
                            "name-last": {
                              "examples": [
                                "Imposter"
                              ],
                              "type": "string"
                            },
                            "status": {
                              "examples": [
                                "pending"
                              ],
                              "type": "string"
                            },
                            "updated-at": {
                              "examples": [
                                "2020-09-18T18:07:53.000Z"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "lin_soqGRWaUXZct3pCRbjRaXFqz"
                          ],
                          "type": "string"
                        },
                        "relationships": {
                          "properties": {
                            "creator": {
                              "properties": {
                                "data": {}
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "examples": [
                            "list-item/name"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Create a Name List Item",
        "tags": [
          "List Items"
        ]
      }
    },
    "/list-item/names/{list-item-id}": {
      "delete": {
        "description": "Archived items are not matched against new inquiries.",
        "operationId": "archive-a-name-list-item",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "ID of list item to archive.",
            "in": "path",
            "name": "list-item-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "list-item/name",
                        "id": "lin_soqGRWaUXZct3pCRbjRaXFqz",
                        "attributes": {
                          "status": "archived",
                          "archived-at": "2020-09-18T19:07:53.000Z",
                          "updated-at": "2020-09-18T18:07:53.000Z",
                          "created-at": "2020-09-18T18:07:53.000Z",
                          "match-count": 0,
                          "name-first": "Joe",
                          "name-last": "Imposter"
                        },
                        "relationships": {
                          "creator": {
                            "data": null
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "archived-at": {
                              "examples": [
                                "2020-09-18T19:07:53.000Z"
                              ],
                              "type": "string"
                            },
                            "created-at": {
                              "examples": [
                                "2020-09-18T18:07:53.000Z"
                              ],
                              "type": "string"
                            },
                            "match-count": {
                              "default": 0,
                              "examples": [
                                0
                              ],
                              "type": "integer"
                            },
                            "name-first": {
                              "examples": [
                                "Joe"
                              ],
                              "type": "string"
                            },
                            "name-last": {
                              "examples": [
                                "Imposter"
                              ],
                              "type": "string"
                            },
                            "status": {
                              "examples": [
                                "archived"
                              ],
                              "type": "string"
                            },
                            "updated-at": {
                              "examples": [
                                "2020-09-18T18:07:53.000Z"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "lin_soqGRWaUXZct3pCRbjRaXFqz"
                          ],
                          "type": "string"
                        },
                        "relationships": {
                          "properties": {
                            "creator": {
                              "properties": {
                                "data": {}
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "examples": [
                            "list-item/name"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Archive a Name List Item",
        "tags": [
          "List Items"
        ]
      }
    },
    "/list-item/phone-numbers": {
      "post": {
        "description": "Create a new item in a <<glossary:list>>.",
        "operationId": "create-a-phone-number-list-item",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "properties": {
                          "list-id": {
                            "description": "ID of the list to add this item to. List must be a Name List.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Phone number to add.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "value": {
                      "data": {
                        "type": "list-item/phone-number",
                        "id": "lipn_soqGRWaUXZct3pCRbjRaXFqz",
                        "attributes": {
                          "status": "pending",
                          "archived-at": null,
                          "updated-at": "2020-09-18T18:07:53.000Z",
                          "created-at": "2020-09-18T18:07:53.000Z",
                          "match-count": 0,
                          "value": 18006009777
                        },
                        "relationships": {
                          "creator": {
                            "data": null
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Create a Phone Number List Item",
        "tags": [
          "List Items"
        ]
      }
    },
    "/list-item/phone-numbers/{list-item-id}": {
      "delete": {
        "description": "Archived items are not matched against new inquiries.",
        "operationId": "archive-a-phone-number-list-item",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "ID of list item to archive.",
            "in": "path",
            "name": "list-item-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "list-item/phone-number",
                        "id": "lipn_soqGRWaUXZct3pCRbjRaXFqz",
                        "attributes": {
                          "status": "archived",
                          "archived-at": "2020-09-18T19:07:53.000Z",
                          "updated-at": "2020-09-18T18:07:53.000Z",
                          "created-at": "2020-09-18T18:07:53.000Z",
                          "match-count": 0,
                          "value": 18006009777
                        },
                        "relationships": {
                          "creator": {
                            "data": null
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Archive a Phone Number List Item",
        "tags": [
          "List Items"
        ]
      }
    },
    "/list/browser-fingerprints": {
      "post": {
        "summary": "Create a Browser Fingerprint List",
        "tags": [
          "Lists"
        ],
        "description": "Create a new <<glossary:list>> for your organization.",
        "operationId": "create-a-browser-fingerprint-list",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "properties": {
                          "name": {
                            "description": "Name of the list",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "examples": {
                "exampleRequest": {
                  "summary": "Example Request",
                  "value": {
                    "data": {
                      "attributes": {
                        "name": "My New List"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "attributes": {
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string"
                            },
                            "archived-at": {
                              "type": [
                                "null",
                                "string"
                              ]
                            },
                            "created-at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "updated-at": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        },
                        "relationships": {
                          "properties": {
                            "list-items": {
                              "properties": {
                                "data": {
                                  "type": "array",
                                  "items": {},
                                  "description": "List items associated with this list. This should always be empty when creating a new list."
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "value": {
                      "data": {
                        "type": "list/browser-fingerprints",
                        "id": "lst_kRcKDJ4c8wF2AmAghggtYxboX",
                        "attributes": {
                          "name": "My New List",
                          "status": "active",
                          "archived-at": null,
                          "created-at": "2023-08-30T20:22:07.000Z",
                          "updated-at": "2023-08-30T20:22:07.000Z"
                        },
                        "relationships": {
                          "list-items": {
                            "data": []
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/list/countries": {
      "post": {
        "summary": "Create a Country List",
        "tags": [
          "Lists"
        ],
        "description": "Create a new <<glossary:list>> for your organization.",
        "operationId": "create-a-country-list",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "properties": {
                          "name": {
                            "description": "Name of the list",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "examples": {
                "exampleRequest": {
                  "summary": "Example Request",
                  "value": {
                    "data": {
                      "attributes": {
                        "name": "My New List"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "attributes": {
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string"
                            },
                            "archived-at": {
                              "type": [
                                "null",
                                "string"
                              ]
                            },
                            "created-at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "updated-at": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        },
                        "relationships": {
                          "properties": {
                            "list-items": {
                              "properties": {
                                "data": {
                                  "type": "array",
                                  "items": {},
                                  "description": "List items associated with this list. This should always be empty when creating a new list."
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "value": {
                      "data": {
                        "type": "list/countries",
                        "id": "lst_kRcKDJ4c8wF2AmAghggtYxboX",
                        "attributes": {
                          "name": "My New List",
                          "status": "active",
                          "archived-at": null,
                          "created-at": "2023-08-30T20:22:07.000Z",
                          "updated-at": "2023-08-30T20:22:07.000Z"
                        },
                        "relationships": {
                          "list-items": {
                            "data": []
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/list/email-addresses": {
      "post": {
        "summary": "Create an Email Address List",
        "tags": [
          "Lists"
        ],
        "description": "Create a new <<glossary:list>> for your organization.",
        "operationId": "create-an-email-address-list",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "properties": {
                          "name": {
                            "description": "Name of the list",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "examples": {
                "exampleRequest": {
                  "summary": "Example Request",
                  "value": {
                    "data": {
                      "attributes": {
                        "name": "My New List"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "attributes": {
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string"
                            },
                            "archived-at": {
                              "type": [
                                "null",
                                "string"
                              ]
                            },
                            "created-at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "updated-at": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        },
                        "relationships": {
                          "properties": {
                            "list-items": {
                              "properties": {
                                "data": {
                                  "type": "array",
                                  "items": {},
                                  "description": "List items associated with this list. This should always be empty when creating a new list."
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "value": {
                      "data": {
                        "type": "list/email-addresses",
                        "id": "lst_kRcKDJ4c8wF2AmAghggtYxboX",
                        "attributes": {
                          "name": "My New List",
                          "status": "active",
                          "archived-at": null,
                          "created-at": "2023-08-30T20:22:07.000Z",
                          "updated-at": "2023-08-30T20:22:07.000Z"
                        },
                        "relationships": {
                          "list-items": {
                            "data": []
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/list/faces": {
      "post": {
        "summary": "Create a Face List",
        "tags": [
          "Lists"
        ],
        "description": "Create a new <<glossary:list>> for your organization.",
        "operationId": "create-a-face-list",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "properties": {
                          "name": {
                            "description": "Name of the list",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "examples": {
                "exampleRequest": {
                  "summary": "Example Request",
                  "value": {
                    "data": {
                      "attributes": {
                        "name": "My New List"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "attributes": {
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string"
                            },
                            "archived-at": {
                              "type": [
                                "null",
                                "string"
                              ]
                            },
                            "created-at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "updated-at": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        },
                        "relationships": {
                          "properties": {
                            "list-items": {
                              "properties": {
                                "data": {
                                  "type": "array",
                                  "items": {},
                                  "description": "List items associated with this list. This should always be empty when creating a new list."
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "value": {
                      "data": {
                        "type": "list/faces",
                        "id": "lst_kRcKDJ4c8wF2AmAghggtYxboX",
                        "attributes": {
                          "name": "My New List",
                          "status": "active",
                          "archived-at": null,
                          "created-at": "2023-08-30T20:22:07.000Z",
                          "updated-at": "2023-08-30T20:22:07.000Z"
                        },
                        "relationships": {
                          "list-items": {
                            "data": []
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/list/geolocations": {
      "post": {
        "summary": "Create a Geolocation List",
        "tags": [
          "Lists"
        ],
        "description": "Create a new <<glossary:list>> for your organization.",
        "operationId": "create-a-geolocation-list",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "properties": {
                          "name": {
                            "description": "Name of the list",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "examples": {
                "exampleRequest": {
                  "summary": "Example Request",
                  "value": {
                    "data": {
                      "attributes": {
                        "name": "My New List"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "attributes": {
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string"
                            },
                            "archived-at": {
                              "type": [
                                "null",
                                "string"
                              ]
                            },
                            "created-at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "updated-at": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        },
                        "relationships": {
                          "properties": {
                            "list-items": {
                              "properties": {
                                "data": {
                                  "type": "array",
                                  "items": {},
                                  "description": "List items associated with this list. This should always be empty when creating a new list."
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "value": {
                      "data": {
                        "type": "list/geolocations",
                        "id": "lst_kRcKDJ4c8wF2AmAghggtYxboX",
                        "attributes": {
                          "name": "My New List",
                          "status": "active",
                          "archived-at": null,
                          "created-at": "2023-08-30T20:22:07.000Z",
                          "updated-at": "2023-08-30T20:22:07.000Z"
                        },
                        "relationships": {
                          "list-items": {
                            "data": []
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/list/government-id-numbers": {
      "post": {
        "summary": "Create a Government ID Number List",
        "tags": [
          "Lists"
        ],
        "description": "Create a new <<glossary:list>> for your organization.",
        "operationId": "create-a-government-id-number-list",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "properties": {
                          "name": {
                            "description": "Name of the list",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "examples": {
                "exampleRequest": {
                  "summary": "Example Request",
                  "value": {
                    "data": {
                      "attributes": {
                        "name": "My New List"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "attributes": {
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string"
                            },
                            "archived-at": {
                              "type": [
                                "null",
                                "string"
                              ]
                            },
                            "created-at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "updated-at": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        },
                        "relationships": {
                          "properties": {
                            "list-items": {
                              "properties": {
                                "data": {
                                  "type": "array",
                                  "items": {},
                                  "description": "List items associated with this list. This should always be empty when creating a new list."
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "value": {
                      "data": {
                        "type": "list/government-id-numbers",
                        "id": "lst_kRcKDJ4c8wF2AmAghggtYxboX",
                        "attributes": {
                          "name": "My New List",
                          "status": "active",
                          "archived-at": null,
                          "created-at": "2023-08-30T20:22:07.000Z",
                          "updated-at": "2023-08-30T20:22:07.000Z"
                        },
                        "relationships": {
                          "list-items": {
                            "data": []
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/list/ip-addresses": {
      "post": {
        "summary": "Create an IP Address List",
        "tags": [
          "Lists"
        ],
        "description": "Create a new <<glossary:list>> for your organization.",
        "operationId": "create-an-ip-address-list",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "properties": {
                          "name": {
                            "description": "Name of the list",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "examples": {
                "exampleRequest": {
                  "summary": "Example Request",
                  "value": {
                    "data": {
                      "attributes": {
                        "name": "My New List"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "attributes": {
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string"
                            },
                            "archived-at": {
                              "type": [
                                "null",
                                "string"
                              ]
                            },
                            "created-at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "updated-at": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        },
                        "relationships": {
                          "properties": {
                            "list-items": {
                              "properties": {
                                "data": {
                                  "type": "array",
                                  "items": {},
                                  "description": "List items associated with this list. This should always be empty when creating a new list."
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "value": {
                      "data": {
                        "type": "list/ip-address",
                        "id": "lst_kRcKDJ4c8wF2AmAghggtYxboX",
                        "attributes": {
                          "name": "My New List",
                          "status": "active",
                          "archived-at": null,
                          "created-at": "2023-08-30T20:22:07.000Z",
                          "updated-at": "2023-08-30T20:22:07.000Z"
                        },
                        "relationships": {
                          "list-items": {
                            "data": []
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/list/names": {
      "post": {
        "summary": "Create a Name List",
        "tags": [
          "Lists"
        ],
        "description": "Create a new <<glossary:list>> for your organization.",
        "operationId": "create-a-name-list",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "properties": {
                          "allow-fuzzy-name-first": {
                            "description": "Flag to determine if the list should use fuzzy matching for first name",
                            "type": "boolean"
                          },
                          "name": {
                            "description": "Name of the list",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "examples": {
                "exampleRequest": {
                  "summary": "Example Request",
                  "value": {
                    "data": {
                      "attributes": {
                        "name": "My New List",
                        "allow-fuzzy-name-first": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "attributes": {
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string"
                            },
                            "archived-at": {
                              "type": [
                                "null",
                                "string"
                              ]
                            },
                            "created-at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "updated-at": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        },
                        "relationships": {
                          "properties": {
                            "list-items": {
                              "properties": {
                                "data": {
                                  "type": "array",
                                  "items": {},
                                  "description": "List items associated with this list. This should always be empty when creating a new list."
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "value": {
                      "data": {
                        "type": "list/names",
                        "id": "lst_kRcKDJ4c8wF2AmAghggtYxboX",
                        "attributes": {
                          "name": "My New List",
                          "status": "active",
                          "archived-at": null,
                          "created-at": "2023-08-30T20:22:07.000Z",
                          "updated-at": "2023-08-30T20:22:07.000Z"
                        },
                        "relationships": {
                          "list-items": {
                            "data": []
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/list/phone-numbers": {
      "post": {
        "summary": "Create a Phone Number List",
        "tags": [
          "Lists"
        ],
        "description": "Create a new <<glossary:list>> for your organization.",
        "operationId": "create-a-phone-number-list",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "properties": {
                          "name": {
                            "description": "Name of the list",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "examples": {
                "exampleRequest": {
                  "summary": "Example Request",
                  "value": {
                    "data": {
                      "attributes": {
                        "name": "My New List"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "attributes": {
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string"
                            },
                            "archived-at": {
                              "type": [
                                "null",
                                "string"
                              ]
                            },
                            "created-at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "updated-at": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        },
                        "relationships": {
                          "properties": {
                            "list-items": {
                              "properties": {
                                "data": {
                                  "type": "array",
                                  "items": {},
                                  "description": "List items associated with this list. This should always be empty when creating a new list."
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "value": {
                      "data": {
                        "type": "list/phone-number",
                        "id": "lst_kRcKDJ4c8wF2AmAghggtYxboX",
                        "attributes": {
                          "name": "My New List",
                          "status": "active",
                          "archived-at": null,
                          "created-at": "2023-08-30T20:22:07.000Z",
                          "updated-at": "2023-08-30T20:22:07.000Z"
                        },
                        "relationships": {
                          "list-items": {
                            "data": []
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/lists": {
      "get": {
        "summary": "List all Lists",
        "tags": [
          "Lists"
        ],
        "description": "Returns a list of your organization's <<glossary: list>>s.",
        "operationId": "list-all-lists",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "in": "query",
            "name": "page",
            "style": "deepObject",
            "allowReserved": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/NestedPaginationQueryParams"
                },
                {
                  "type": "object",
                  "properties": {
                    "after": {
                      "example": "lst_ABC123"
                    },
                    "before": {
                      "example": "lst_ABC123"
                    }
                  }
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "filter",
            "style": "deepObject",
            "allowReserved": true,
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "description": "Filter lists by status",
                  "type": "string",
                  "enum": [
                    "active",
                    "archived"
                  ]
                }
              }
            }
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "list/browser-fingerprint",
                              "list/country",
                              "list/email-address",
                              "list/face",
                              "list/geolocation",
                              "list/government-id-number",
                              "list/ip-address",
                              "list/names",
                              "list/phone-number"
                            ]
                          },
                          "id": {
                            "type": "string"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "active",
                                  "archived"
                                ]
                              },
                              "archived-at": {
                                "type": [
                                  "null",
                                  "string"
                                ]
                              },
                              "created-at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "updated-at": {
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          },
                          "relationships": {
                            "type": "object",
                            "properties": {
                              "list-items": {
                                "type": "object",
                                "properties": {
                                  "data": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "description": "List items associated with this list."
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "prev": {
                          "type": [
                            "null",
                            "string"
                          ],
                          "description": "URL pointing to the previous page of data, or null if on the first page."
                        },
                        "next": {
                          "type": "string",
                          "description": "URL pointing to the next page of data, or null if on the last page."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": [
                        {
                          "type": "list/phone-number",
                          "id": "lst_kRcKDJ4c8wF2AmAghggtYxboX",
                          "attributes": {
                            "name": "My List",
                            "status": "active",
                            "archived-at": null,
                            "created-at": "2023-08-30T21:31:06.000Z",
                            "updated-at": "2023-08-30T21:31:06.000Z"
                          },
                          "relationships": {
                            "list-items": {
                              "data": []
                            }
                          }
                        }
                      ],
                      "links": {
                        "prev": null,
                        "next": "/api/v1/lists?page%5Bafter%5D=lst_3DS1z7bME8vWqqxmdCDqHwLm"
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/lists/{list-id}": {
      "delete": {
        "summary": "Archive a List",
        "tags": [
          "Lists"
        ],
        "description": "Archive an existing <<glossary:list>>. Archived lists are still retrievable, but will no\nlonger match on inquiries.\n",
        "operationId": "archive-a-list",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "ID of the list to archive",
            "in": "path",
            "name": "list-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "list/browser-fingerprint",
                            "list/country",
                            "list/email-address",
                            "list/face",
                            "list/geolocation",
                            "list/government-id-number",
                            "list/ip-address",
                            "list/names",
                            "list/phone-number"
                          ]
                        },
                        "id": {
                          "type": "string"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string"
                            },
                            "archived-at": {
                              "type": [
                                "null",
                                "string"
                              ],
                              "format": "date-time"
                            },
                            "created-at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "updated-at": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        },
                        "relationships": {
                          "type": "object",
                          "properties": {
                            "list-items": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "description": "List items associated with this list."
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "list/phone-number",
                        "id": "lst_kRcKDJ4c8wF2AmAghggtYxboX",
                        "attributes": {
                          "name": "My List",
                          "status": "archived",
                          "archived-at": "2023-01-01T00:00:00.000Z",
                          "created-at": "2023-01-01T00:00:00.000Z",
                          "updated-at": "2023-01-01T00:00:00.000Z"
                        },
                        "relationships": {
                          "list-items": {
                            "data": []
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      },
      "get": {
        "summary": "Retrieve a List",
        "tags": [
          "Lists"
        ],
        "description": "Retrieve the details of an existing <<glossary:list>>.",
        "operationId": "retrieve-a-list",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "ID of the list to retrieve",
            "in": "path",
            "name": "list-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "list/browser-fingerprint",
                            "list/country",
                            "list/email-address",
                            "list/face",
                            "list/geolocation",
                            "list/government-id-number",
                            "list/ip-address",
                            "list/names",
                            "list/phone-number"
                          ]
                        },
                        "id": {
                          "type": "string"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string"
                            },
                            "archived-at": {
                              "type": [
                                "null",
                                "string"
                              ],
                              "format": "date-time"
                            },
                            "created-at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "updated-at": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        },
                        "relationships": {
                          "type": "object",
                          "properties": {
                            "list-items": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "description": "List items associated with this list."
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "list/phone-number",
                        "id": "lst_kRcKDJ4c8wF2AmAghggtYxboX",
                        "attributes": {
                          "name": "My List",
                          "status": "archived",
                          "archived-at": "2023-01-01T00:00:00.000Z",
                          "created-at": "2023-01-01T00:00:00.000Z",
                          "updated-at": "2023-01-01T00:00:00.000Z"
                        },
                        "relationships": {
                          "list-items": {
                            "data": []
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/oauth/authorize": {
      "post": {
        "description": "Authorize another Organization to access your Inquiry/Verification/etc Objects",
        "operationId": "create-authorization",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "client-id": {
                    "description": "Organization (`org_`) to authorize",
                    "type": "string"
                  },
                  "response-type": {
                    "default": "code",
                    "description": "Must be set to 'code'",
                    "type": "string"
                  },
                  "scope": {
                    "description": "Space-separated list of 'permission:object' combinations (i.e. `inquiry.read:inq_uX7kRTiBxsJ1sZqPLAsjdP9j verification.read:ver_ynYuWdrjwwjiHJ2rgHfSoHeT`",
                    "type": "string"
                  }
                },
                "required": [
                  "client-id",
                  "response-type",
                  "scope"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "value": {
                      "code": "8qaA6Q9GQnPjqiWB8BPed9MC6twE",
                      "expires-in": 599
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Authorization Code that is only usable by the Organization specified by the client-id",
                      "examples": [
                        "8qaA6Q9GQnPjqiWB8BPed9MC6twE"
                      ],
                      "type": "string"
                    },
                    "expires-in": {
                      "description": "Number of seconds until the authorization code expires.",
                      "default": 0,
                      "examples": [
                        599
                      ],
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Create Authorization",
        "tags": [
          "OAuth"
        ]
      }
    },
    "/oauth/token": {
      "post": {
        "description": "Create an access token using an authorization code.",
        "operationId": "create-access-token",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "Authorization Code",
            "in": "query",
            "name": "code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Must be set to 'authorization_code'",
            "in": "query",
            "name": "grant-type",
            "required": true,
            "schema": {
              "default": "authorization_code",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "value": {
                      "access-token": "persona_access_token_d8b7f084-385f-4ff0-930e-1580ccefa16d",
                      "token-type": "bearer",
                      "expires-in": 3599,
                      "scope": "inquiry.read:inq_uX7kRTiBxsJ1sZqPLAsjdP9j inquiry.read:inq_1Uy5ruZb5yZy4zX21KesbtfK"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "access-token": {
                      "description": "Access Token that can be used wherever an API Key would be used.",
                      "examples": [
                        "persona_access_token_d8b7f084-385f-4ff0-930e-1580ccefa16d"
                      ],
                      "type": "string"
                    },
                    "expires-in": {
                      "description": "Number of seconds until the access token expires.",
                      "default": 0,
                      "examples": [
                        3599
                      ],
                      "type": "integer"
                    },
                    "scope": {
                      "description": "Space-separated list of 'permission:object' combinations (i.e. `inquiry.read:inq_uX7kRTiBxsJ1sZqPLAsjdP9j verification.read:ver_ynYuWdrjwwjiHJ2rgHfSoHeT`",
                      "examples": [
                        "inquiry.read:inq_uX7kRTiBxsJ1sZqPLAsjdP9j inquiry.read:inq_1Uy5ruZb5yZy4zX21KesbtfK"
                      ],
                      "type": "string"
                    },
                    "token-type": {
                      "examples": [
                        "bearer"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Create Access Token",
        "tags": [
          "OAuth"
        ]
      }
    },
    "/reports": {
      "get": {
        "description": "List all reports with pagination and filtering.",
        "operationId": "list-all-reports",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "in": "query",
            "name": "page",
            "style": "deepObject",
            "allowReserved": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/NestedPaginationQueryParams"
                },
                {
                  "type": "object",
                  "properties": {
                    "after": {
                      "example": "rep_ABC123"
                    },
                    "before": {
                      "example": "rep_ABC123"
                    }
                  }
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "filter",
            "style": "deepObject",
            "allowReserved": true,
            "schema": {
              "type": "object",
              "properties": {
                "reference-id": {
                  "description": "Filter reports by reference ID",
                  "type": "string"
                },
                "account-id": {
                  "description": "Filter reports by account ID",
                  "type": "string"
                }
              }
            }
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ReportData"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "prev": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "next": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": [
                        {
                          "type": "report/address-lookup",
                          "id": "rep_YcNZJLxuwEuV8jUPbykYQyXG",
                          "attributes": {
                            "created-at": "2019-12-19T21:42:49.000Z",
                            "completed-at": "2019-12-19T21:42:49.000Z",
                            "status": "ready"
                          }
                        },
                        {
                          "type": "report/adverse-media",
                          "id": "rep_2wM8yufwLrbMV6kUtGPBxeGS",
                          "attributes": {
                            "created-at": "2019-12-18T22:43:03.000Z",
                            "completed-at": "2019-12-18T22:43:03.000Z"
                          }
                        },
                        {
                          "type": "report/email-risk",
                          "id": "rep_LatvE1PdVhfiwcJWVLj4Z25j",
                          "attributes": {
                            "created-at": "2019-12-13T08:34:10.000Z",
                            "completed-at": "2019-12-13T08:34:10.000Z"
                          }
                        },
                        {
                          "type": "report/phone-risk",
                          "id": "rep_RU3JgzXaAzVV2g2NYLd7ub12",
                          "attributes": {
                            "created-at": "2019-12-13T08:32:49.000Z",
                            "completed-at": "2019-12-13T08:33:29.000Z"
                          }
                        },
                        {
                          "type": "report/sec-action-lookup",
                          "id": "rep_Eoe14YQ7efbiH73zkTFAkveB",
                          "attributes": {
                            "created-at": "2019-12-12T20:50:55.000Z",
                            "completed-at": "2019-12-12T20:50:55.000Z"
                          }
                        },
                        {
                          "type": "report/watchlist",
                          "id": "rep_6LRELcKmPcx9MxYGk6mdCPJo",
                          "attributes": {
                            "created-at": "2019-11-19T00:10:27.000Z",
                            "completed-at": "2019-11-19T00:10:27.000Z"
                          }
                        }
                      ],
                      "links": {
                        "prev": null,
                        "next": "/api/v1/reports?page%5Bafter%5D=rep_u2Dgz8U3CmxTVgqEH9qzezHi"
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "List all Reports",
        "tags": [
          "Reports"
        ]
      },
      "post": {
        "description": "Create various types of Reports with appropriate body params.",
        "operationId": "create-a-report",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Report"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Create a Report",
        "tags": [
          "Reports"
        ]
      }
    },
    "/reports/{report-id}": {
      "delete": {
        "description": "Permanently deletes personally identifiable information (PII) for a Report.\n\nThis endpoint can be used to comply with privacy regulations such as GDPR / CCPA or to enforce data privacy.\n\nNote that this will only delete the report -- it does not delete associated accounts, inquiries, or verifications.",
        "operationId": "redact-a-report",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "report-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Report"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Redact a Report",
        "tags": [
          "Reports"
        ]
      },
      "get": {
        "description": "Retrieve the details of a Report.",
        "operationId": "retrieve-a-report",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "report-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Report"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Retrieve a Report",
        "tags": [
          "Reports"
        ]
      }
    },
    "/reports/{report-id}/add-tag": {
      "post": {
        "description": "Add a new tag to the Report",
        "operationId": "reports-add-tag",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "report-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "meta": {
                    "properties": {
                      "tag-name": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "report/employer-lookup",
                        "id": "rep_EPehAHkBaZKU6S9LEDL1gv4h",
                        "attributes": {
                          "status": "ready",
                          "created-at": "2022-01-14T23:42:01.000Z",
                          "completed-at": "2022-01-14T23:42:01.000Z",
                          "redacted-at": null,
                          "report-template-version-name": "v1",
                          "email-address": "malav.bhavsar@gmail.com",
                          "email-domain-exists": null,
                          "email-domain-reputation": null,
                          "email-domain-is-new": null,
                          "email-domain-days-since-creation": null,
                          "email-domain-suspicious-tld": null,
                          "employers": []
                        },
                        "relationships": {
                          "inquiry": {
                            "data": null
                          },
                          "account": {
                            "data": null
                          },
                          "report-template": {
                            "data": {
                              "type": "report-template/employer-lookup",
                              "id": "rptp_jfp2TAY28vijsjpCcn4WVqdX"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "completed-at": {
                              "examples": [
                                "2022-01-14T23:42:01.000Z"
                              ],
                              "type": "string"
                            },
                            "created-at": {
                              "examples": [
                                "2022-01-14T23:42:01.000Z"
                              ],
                              "type": "string"
                            },
                            "email-address": {
                              "examples": [
                                "malav.bhavsar@gmail.com"
                              ],
                              "type": "string"
                            },
                            "email-domain-days-since-creation": {},
                            "email-domain-exists": {},
                            "email-domain-is-new": {},
                            "email-domain-reputation": {},
                            "email-domain-suspicious-tld": {},
                            "employers": {
                              "type": "array"
                            },
                            "redacted-at": {},
                            "report-template-version-name": {
                              "examples": [
                                "v1"
                              ],
                              "type": "string"
                            },
                            "status": {
                              "examples": [
                                "ready"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "rep_EPehAHkBaZKU6S9LEDL1gv4h"
                          ],
                          "type": "string"
                        },
                        "relationships": {
                          "properties": {
                            "account": {
                              "properties": {
                                "data": {}
                              },
                              "type": "object"
                            },
                            "inquiry": {
                              "properties": {
                                "data": {}
                              },
                              "type": "object"
                            },
                            "report-template": {
                              "properties": {
                                "data": {
                                  "properties": {
                                    "id": {
                                      "examples": [
                                        "rptp_jfp2TAY28vijsjpCcn4WVqdX"
                                      ],
                                      "type": "string"
                                    },
                                    "type": {
                                      "examples": [
                                        "report-template/employer-lookup"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "examples": [
                            "report/employer-lookup"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Add a tag",
        "tags": [
          "Reports"
        ]
      }
    },
    "/reports/{report-id}/dismiss": {
      "post": {
        "description": "Dismiss active matches for supported report types",
        "operationId": "dismiss-matches",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "report-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "properties": {
                          "dismiss-type": {
                            "description": "required in case of Adverse Media and Business Adverse Media. \"entity\" - refers to one of several individuals or businesses found by the report. \"media\" - refers to specific article about that \"entity\"",
                            "enum": [
                              "entity",
                              "media"
                            ],
                            "type": "string"
                          },
                          "entity-id": {
                            "description": "required in case of Adverse Media and Business Adverse Media. refers to id of the \"entity\" or the \"media\".",
                            "type": "string"
                          },
                          "reason": {
                            "description": "required",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "required": [
                  "data"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "report/watchlist",
                        "id": "rep_EPehAHkBaZKUxxxLEDL1gv4h",
                        "attributes": {
                          "status": "ready",
                          "created-at": "2022-01-14T23:42:01.000Z",
                          "completed-at": "2022-01-14T23:42:01.000Z",
                          "redacted-at": null,
                          "report-template-version-name": "v1",
                          "term": "Alexander Sample",
                          "matched-lists": []
                        },
                        "relationships": {
                          "inquiry": {
                            "data": null
                          },
                          "account": {
                            "data": null
                          },
                          "report-template": {
                            "data": {
                              "type": "report-template/watchlist",
                              "id": "rptp_jfp2TAY28vijxxxCcn4WVqdX"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "completed-at": {
                              "examples": [
                                "2022-01-14T23:42:01.000Z"
                              ],
                              "type": "string"
                            },
                            "created-at": {
                              "examples": [
                                "2022-01-14T23:42:01.000Z"
                              ],
                              "type": "string"
                            },
                            "matched-lists": {
                              "type": "array"
                            },
                            "redacted-at": {},
                            "report-template-version-name": {
                              "examples": [
                                "v1"
                              ],
                              "type": "string"
                            },
                            "status": {
                              "examples": [
                                "ready"
                              ],
                              "type": "string"
                            },
                            "term": {
                              "examples": [
                                "Alexander Sample"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "rep_EPehAHkBaZKUxxxLEDL1gv4h"
                          ],
                          "type": "string"
                        },
                        "relationships": {
                          "properties": {
                            "account": {
                              "properties": {
                                "data": {}
                              },
                              "type": "object"
                            },
                            "inquiry": {
                              "properties": {
                                "data": {}
                              },
                              "type": "object"
                            },
                            "report-template": {
                              "properties": {
                                "data": {
                                  "properties": {
                                    "id": {
                                      "examples": [
                                        "rptp_jfp2TAY28vijxxxCcn4WVqdX"
                                      ],
                                      "type": "string"
                                    },
                                    "type": {
                                      "examples": [
                                        "report-template/watchlist"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "examples": [
                            "report/watchlist"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Report Action: Dismiss Matches",
        "tags": [
          "Reports"
        ]
      }
    },
    "/reports/{report-id}/pause": {
      "post": {
        "description": "Pause continuous monitoring on a report. Requires additional permissions",
        "operationId": "report-action-pause-continuous-monitoring",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "report-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "report/watchlist",
                        "id": "rep_EPehAHkBaZKUxxxLEDL1gv4h",
                        "attributes": {
                          "status": "ready",
                          "created-at": "2022-01-14T23:42:01.000Z",
                          "completed-at": "2022-01-14T23:42:01.000Z",
                          "redacted-at": null,
                          "report-template-version-name": "v1",
                          "term": "Alexander Sample",
                          "matched-lists": []
                        },
                        "relationships": {
                          "inquiry": {
                            "data": null
                          },
                          "account": {
                            "data": null
                          },
                          "report-template": {
                            "data": {
                              "type": "report-template/watchlist",
                              "id": "rptp_jfp2TAY28vijxxxCcn4WVqdX"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "completed-at": {
                              "examples": [
                                "2022-01-14T23:42:01.000Z"
                              ],
                              "type": "string"
                            },
                            "created-at": {
                              "examples": [
                                "2022-01-14T23:42:01.000Z"
                              ],
                              "type": "string"
                            },
                            "matched-lists": {
                              "type": "array"
                            },
                            "redacted-at": {},
                            "report-template-version-name": {
                              "examples": [
                                "v1"
                              ],
                              "type": "string"
                            },
                            "status": {
                              "examples": [
                                "ready"
                              ],
                              "type": "string"
                            },
                            "term": {
                              "examples": [
                                "Alexander Sample"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "rep_EPehAHkBaZKUxxxLEDL1gv4h"
                          ],
                          "type": "string"
                        },
                        "relationships": {
                          "properties": {
                            "account": {
                              "properties": {
                                "data": {}
                              },
                              "type": "object"
                            },
                            "inquiry": {
                              "properties": {
                                "data": {}
                              },
                              "type": "object"
                            },
                            "report-template": {
                              "properties": {
                                "data": {
                                  "properties": {
                                    "id": {
                                      "examples": [
                                        "rptp_jfp2TAY28vijxxxCcn4WVqdX"
                                      ],
                                      "type": "string"
                                    },
                                    "type": {
                                      "examples": [
                                        "report-template/watchlist"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "examples": [
                            "report/watchlist"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Report Action: Pause Continuous Monitoring",
        "tags": [
          "Reports"
        ]
      }
    },
    "/reports/{report-id}/print": {
      "get": {
        "description": "Prints a report in PDF format.",
        "operationId": "print-report-pdf",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "report-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Print Report PDF",
        "tags": [
          "Reports"
        ]
      }
    },
    "/reports/{report-id}/remove-tag": {
      "post": {
        "description": "Remove an existing tag from a Report",
        "operationId": "reports-remove-tag",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "report-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "meta": {
                    "properties": {
                      "tag-name": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "report/employer-lookup",
                        "id": "rep_EPehAHkBaZKU6S9LEDL1gv4h",
                        "attributes": {
                          "status": "ready",
                          "created-at": "2022-01-14T23:42:01.000Z",
                          "completed-at": "2022-01-14T23:42:01.000Z",
                          "redacted-at": null,
                          "report-template-version-name": "v1",
                          "email-address": "malav.bhavsar@gmail.com",
                          "email-domain-exists": null,
                          "email-domain-reputation": null,
                          "email-domain-is-new": null,
                          "email-domain-days-since-creation": null,
                          "email-domain-suspicious-tld": null,
                          "employers": []
                        },
                        "relationships": {
                          "inquiry": {
                            "data": null
                          },
                          "account": {
                            "data": null
                          },
                          "report-template": {
                            "data": {
                              "type": "report-template/employer-lookup",
                              "id": "rptp_jfp2TAY28vijsjpCcn4WVqdX"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "completed-at": {
                              "examples": [
                                "2022-01-14T23:42:01.000Z"
                              ],
                              "type": "string"
                            },
                            "created-at": {
                              "examples": [
                                "2022-01-14T23:42:01.000Z"
                              ],
                              "type": "string"
                            },
                            "email-address": {
                              "examples": [
                                "malav.bhavsar@gmail.com"
                              ],
                              "type": "string"
                            },
                            "email-domain-days-since-creation": {},
                            "email-domain-exists": {},
                            "email-domain-is-new": {},
                            "email-domain-reputation": {},
                            "email-domain-suspicious-tld": {},
                            "employers": {
                              "type": "array"
                            },
                            "redacted-at": {},
                            "report-template-version-name": {
                              "examples": [
                                "v1"
                              ],
                              "type": "string"
                            },
                            "status": {
                              "examples": [
                                "ready"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "rep_EPehAHkBaZKU6S9LEDL1gv4h"
                          ],
                          "type": "string"
                        },
                        "relationships": {
                          "properties": {
                            "account": {
                              "properties": {
                                "data": {}
                              },
                              "type": "object"
                            },
                            "inquiry": {
                              "properties": {
                                "data": {}
                              },
                              "type": "object"
                            },
                            "report-template": {
                              "properties": {
                                "data": {
                                  "properties": {
                                    "id": {
                                      "examples": [
                                        "rptp_jfp2TAY28vijsjpCcn4WVqdX"
                                      ],
                                      "type": "string"
                                    },
                                    "type": {
                                      "examples": [
                                        "report-template/employer-lookup"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "examples": [
                            "report/employer-lookup"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Remove a tag",
        "tags": [
          "Reports"
        ]
      }
    },
    "/reports/{report-id}/resume": {
      "post": {
        "description": "Resume continuous monitoring on paused report. Requires additional permissions",
        "operationId": "report-action-resume-continuous-monitoring",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "report-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "report/watchlist",
                        "id": "rep_EPehAHkBaZKUxxxLEDL1gv4h",
                        "attributes": {
                          "status": "ready",
                          "created-at": "2022-01-14T23:42:01.000Z",
                          "completed-at": "2022-01-14T23:42:01.000Z",
                          "redacted-at": null,
                          "report-template-version-name": "v1",
                          "term": "Alexander Sample",
                          "matched-lists": []
                        },
                        "relationships": {
                          "inquiry": {
                            "data": null
                          },
                          "account": {
                            "data": null
                          },
                          "report-template": {
                            "data": {
                              "type": "report-template/watchlist",
                              "id": "rptp_jfp2TAY28vijxxxCcn4WVqdX"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "completed-at": {
                              "examples": [
                                "2022-01-14T23:42:01.000Z"
                              ],
                              "type": "string"
                            },
                            "created-at": {
                              "examples": [
                                "2022-01-14T23:42:01.000Z"
                              ],
                              "type": "string"
                            },
                            "matched-lists": {
                              "type": "array"
                            },
                            "redacted-at": {},
                            "report-template-version-name": {
                              "examples": [
                                "v1"
                              ],
                              "type": "string"
                            },
                            "status": {
                              "examples": [
                                "ready"
                              ],
                              "type": "string"
                            },
                            "term": {
                              "examples": [
                                "Alexander Sample"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "rep_EPehAHkBaZKUxxxLEDL1gv4h"
                          ],
                          "type": "string"
                        },
                        "relationships": {
                          "properties": {
                            "account": {
                              "properties": {
                                "data": {}
                              },
                              "type": "object"
                            },
                            "inquiry": {
                              "properties": {
                                "data": {}
                              },
                              "type": "object"
                            },
                            "report-template": {
                              "properties": {
                                "data": {
                                  "properties": {
                                    "id": {
                                      "examples": [
                                        "rptp_jfp2TAY28vijxxxCcn4WVqdX"
                                      ],
                                      "type": "string"
                                    },
                                    "type": {
                                      "examples": [
                                        "report-template/watchlist"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "examples": [
                            "report/watchlist"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Report Action: Resume Continuous Monitoring",
        "tags": [
          "Reports"
        ]
      }
    },
    "/reports/{report-id}/run": {
      "post": {
        "description": "Re-run a continuously monitored report immediately, outside of its existing recurrence schedule.",
        "operationId": "report-action-re-run-report",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "report-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "report/watchlist",
                        "id": "rep_EPehAHkBaZKUxxxLEDL1gv4h",
                        "attributes": {
                          "status": "ready",
                          "created-at": "2022-01-14T23:42:01.000Z",
                          "completed-at": "2022-01-14T23:42:01.000Z",
                          "redacted-at": null,
                          "report-template-version-name": "v1",
                          "term": "Alexander Sample",
                          "matched-lists": []
                        },
                        "relationships": {
                          "inquiry": {
                            "data": null
                          },
                          "account": {
                            "data": null
                          },
                          "report-template": {
                            "data": {
                              "type": "report-template/watchlist",
                              "id": "rptp_jfp2TAY28vijxxxCcn4WVqdX"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "completed-at": {
                              "examples": [
                                "2022-01-14T23:42:01.000Z"
                              ],
                              "type": "string"
                            },
                            "created-at": {
                              "examples": [
                                "2022-01-14T23:42:01.000Z"
                              ],
                              "type": "string"
                            },
                            "matched-lists": {
                              "type": "array"
                            },
                            "redacted-at": {},
                            "report-template-version-name": {
                              "examples": [
                                "v1"
                              ],
                              "type": "string"
                            },
                            "status": {
                              "examples": [
                                "ready"
                              ],
                              "type": "string"
                            },
                            "term": {
                              "examples": [
                                "Alexander Sample"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "rep_EPehAHkBaZKUxxxLEDL1gv4h"
                          ],
                          "type": "string"
                        },
                        "relationships": {
                          "properties": {
                            "account": {
                              "properties": {
                                "data": {}
                              },
                              "type": "object"
                            },
                            "inquiry": {
                              "properties": {
                                "data": {}
                              },
                              "type": "object"
                            },
                            "report-template": {
                              "properties": {
                                "data": {
                                  "properties": {
                                    "id": {
                                      "examples": [
                                        "rptp_jfp2TAY28vijxxxCcn4WVqdX"
                                      ],
                                      "type": "string"
                                    },
                                    "type": {
                                      "examples": [
                                        "report-template/watchlist"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "examples": [
                            "report/watchlist"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Report Action: Re-run Report",
        "tags": [
          "Reports"
        ]
      }
    },
    "/reports/{report-id}/set-tags": {
      "post": {
        "description": "Set all tags on a Report. Note that this removes any tags that are not provided.",
        "operationId": "reports-set-all-tags",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "report-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "meta": {
                    "properties": {
                      "tag-name": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "report/employer-lookup",
                        "id": "rep_EPehAHkBaZKU6S9LEDL1gv4h",
                        "attributes": {
                          "status": "ready",
                          "created-at": "2022-01-14T23:42:01.000Z",
                          "completed-at": "2022-01-14T23:42:01.000Z",
                          "redacted-at": null,
                          "report-template-version-name": "v1",
                          "email-address": "malav.bhavsar@gmail.com",
                          "email-domain-exists": null,
                          "email-domain-reputation": null,
                          "email-domain-is-new": null,
                          "email-domain-days-since-creation": null,
                          "email-domain-suspicious-tld": null,
                          "employers": []
                        },
                        "relationships": {
                          "inquiry": {
                            "data": null
                          },
                          "account": {
                            "data": null
                          },
                          "report-template": {
                            "data": {
                              "type": "report-template/employer-lookup",
                              "id": "rptp_jfp2TAY28vijsjpCcn4WVqdX"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "completed-at": {
                              "examples": [
                                "2022-01-14T23:42:01.000Z"
                              ],
                              "type": "string"
                            },
                            "created-at": {
                              "examples": [
                                "2022-01-14T23:42:01.000Z"
                              ],
                              "type": "string"
                            },
                            "email-address": {
                              "examples": [
                                "malav.bhavsar@gmail.com"
                              ],
                              "type": "string"
                            },
                            "email-domain-days-since-creation": {},
                            "email-domain-exists": {},
                            "email-domain-is-new": {},
                            "email-domain-reputation": {},
                            "email-domain-suspicious-tld": {},
                            "employers": {
                              "type": "array"
                            },
                            "redacted-at": {},
                            "report-template-version-name": {
                              "examples": [
                                "v1"
                              ],
                              "type": "string"
                            },
                            "status": {
                              "examples": [
                                "ready"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "rep_EPehAHkBaZKU6S9LEDL1gv4h"
                          ],
                          "type": "string"
                        },
                        "relationships": {
                          "properties": {
                            "account": {
                              "properties": {
                                "data": {}
                              },
                              "type": "object"
                            },
                            "inquiry": {
                              "properties": {
                                "data": {}
                              },
                              "type": "object"
                            },
                            "report-template": {
                              "properties": {
                                "data": {
                                  "properties": {
                                    "id": {
                                      "examples": [
                                        "rptp_jfp2TAY28vijsjpCcn4WVqdX"
                                      ],
                                      "type": "string"
                                    },
                                    "type": {
                                      "examples": [
                                        "report-template/employer-lookup"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "examples": [
                            "report/employer-lookup"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Set all tags",
        "tags": [
          "Reports"
        ]
      }
    },
    "/transactions": {
      "post": {
        "summary": "Create a Transaction",
        "tags": [
          "Transactions"
        ],
        "description": "Creates a new <<glossary:transaction>> for a specific <<glossary:transaction type>> in your organization.",
        "operationId": "create-a-transaction",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "transaction-type-id": {
                            "type": "string",
                            "description": "Transaction type ID to create the transaction for."
                          },
                          "fields": {
                            "description": "Key value pairs of field name to field value. Exact field names and data types will depend on the configurations for your <<glossary:transaction type>>.",
                            "examples": [
                              {
                                "external-integration-id": "ind_123"
                              }
                            ],
                            "type": "object",
                            "additionalProperties": true
                          },
                          "reference-id": {
                            "type": "string",
                            "description": "Reference ID on Account, refers to an entity in your user model."
                          },
                          "external-id": {
                            "type": "string",
                            "description": "External ID should be set to the ID for this transaction from your system. It can be used for lookup."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "value": {
                      "data": {
                        "type": "transaction",
                        "id": "txn_ABC123",
                        "attributes": {
                          "status": "declined",
                          "reference-id": null,
                          "fields": {
                            "country": {
                              "type": "string",
                              "value": "US"
                            },
                            "name-first": {
                              "type": "string",
                              "value": "LeBron"
                            },
                            "name-last": {
                              "type": "string",
                              "value": "James"
                            },
                            "selected-id-class": {
                              "type": "string",
                              "value": "dl"
                            },
                            "front-photo": {
                              "type": "file",
                              "value": {
                                "filename": "image.png",
                                "byte-size": 237011,
                                "mime-type": "image/png",
                                "url": "https://files.withpersona.com/image.png?access_token=ACCESS_ABC123"
                              }
                            },
                            "back-photo": {
                              "type": "file",
                              "value": {
                                "filename": "image.png",
                                "byte-size": 237011,
                                "mime-type": "image/png",
                                "url": "https://files.withpersona.com/image.png?access_token=ACCESS_ABC123"
                              }
                            }
                          },
                          "tags": [],
                          "created-at": "2023-05-26T16:49:33.860Z",
                          "updated-at": "2023-05-26T16:49:43.965Z"
                        },
                        "relationships": {
                          "reviewer": {
                            "data": {
                              "type": "workflow-run",
                              "id": "wfr_ABC123"
                            }
                          },
                          "transaction-label": {
                            "data": null
                          },
                          "transaction-type": {
                            "data": {
                              "type": "transaction-type",
                              "id": "txntp_ABC123"
                            }
                          },
                          "related-objects": {
                            "data": [
                              {
                                "type": "account",
                                "id": "act_ABC123"
                              },
                              {
                                "type": "verification/government-id",
                                "id": "ver_ABC123"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Transaction"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      },
      "get": {
        "summary": "List all Transactions",
        "tags": [
          "Transactions"
        ],
        "description": "Returns a list of your organization's transactions. Note that this endpoint aggregates transactions across all <<glossary:transaction type>>(s). See [Pagination](https://docs.withpersona.com/reference/pagination) for more details about handling the response.",
        "operationId": "list-all-transactions",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "in": "query",
            "name": "page",
            "style": "deepObject",
            "allowReserved": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/NestedPaginationQueryParams"
                },
                {
                  "type": "object",
                  "properties": {
                    "after": {
                      "example": "txn_ABC123"
                    },
                    "before": {
                      "example": "txn_ABC123"
                    }
                  }
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "filter",
            "style": "deepObject",
            "allowReserved": true,
            "schema": {
              "type": "object",
              "properties": {
                "reference-id": {
                  "description": "Filter transactions by reference ID.",
                  "type": "string"
                },
                "external-id": {
                  "description": "Filter transactions by external ID.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": [
                        {
                          "type": "transaction",
                          "id": "txn_ABC123",
                          "attributes": {
                            "status": "declined",
                            "reference-id": null,
                            "fields": {
                              "country": {
                                "type": "string",
                                "value": "US"
                              },
                              "name-first": {
                                "type": "string",
                                "value": "LeBron"
                              },
                              "name-last": {
                                "type": "string",
                                "value": "James"
                              },
                              "selected-id-class": {
                                "type": "string",
                                "value": "dl"
                              },
                              "front-photo": {
                                "type": "file",
                                "value": {
                                  "filename": "image.png",
                                  "byte-size": 237011,
                                  "mime-type": "image/png",
                                  "url": "https://files.withpersona.com/image.png?access_token=ACCESS_ABC123"
                                }
                              },
                              "back-photo": {
                                "type": "file",
                                "value": {
                                  "filename": "image.png",
                                  "byte-size": 237011,
                                  "mime-type": "image/png",
                                  "url": "https://files.withpersona.com/image.png?access_token=ACCESS_ABC123"
                                }
                              }
                            },
                            "tags": [],
                            "created-at": "2023-05-26T16:49:33.860Z",
                            "updated-at": "2023-05-26T16:49:43.965Z"
                          },
                          "relationships": {
                            "reviewer": {
                              "data": {
                                "type": "workflow-run",
                                "id": "wfr_ABC123"
                              }
                            },
                            "transaction-label": {
                              "data": null
                            },
                            "transaction-type": {
                              "data": {
                                "type": "transaction-type",
                                "id": "txntp_ABC123"
                              }
                            },
                            "related-objects": {
                              "data": [
                                {
                                  "type": "account",
                                  "id": "act_ABC123"
                                },
                                {
                                  "type": "verification/government-id",
                                  "id": "ver_ABC123"
                                }
                              ]
                            }
                          }
                        },
                        {
                          "type": "transaction",
                          "id": "txn_ABC123",
                          "attributes": {
                            "status": "declined",
                            "reference-id": null,
                            "external-id": null,
                            "fields": {
                              "country": {
                                "type": "string",
                                "value": "US"
                              },
                              "name-first": {
                                "type": "string",
                                "value": "LeBron"
                              },
                              "name-last": {
                                "type": "string",
                                "value": "James"
                              },
                              "selected-id-class": {
                                "type": "string",
                                "value": "dl"
                              },
                              "front-photo": {
                                "type": "file",
                                "value": {
                                  "filename": "image.png",
                                  "byte-size": 237011,
                                  "mime-type": "image/png",
                                  "url": "https://files.withpersona.com/image.png?access_token=ACCESS_ABC123"
                                }
                              },
                              "back-photo": {
                                "type": "file",
                                "value": {
                                  "filename": "image.png",
                                  "byte-size": 237011,
                                  "mime-type": "image/png",
                                  "url": "https://files.withpersona.com/image.png?access_token=ACCESS_ABC123"
                                }
                              }
                            },
                            "tags": [],
                            "created-at": "2023-05-26T16:49:33.860Z",
                            "updated-at": "2023-05-26T16:49:43.965Z"
                          },
                          "relationships": {
                            "reviewer": {
                              "data": {
                                "type": "workflow-run",
                                "id": "wfr_ABC123"
                              }
                            },
                            "transaction-label": {
                              "data": null
                            },
                            "transaction-type": {
                              "data": {
                                "type": "transaction-type",
                                "id": "txntp_ABC123"
                              }
                            },
                            "related-objects": {
                              "data": [
                                {
                                  "type": "account",
                                  "id": "act_ABC123"
                                },
                                {
                                  "type": "verification/government-id",
                                  "id": "ver_ABC123"
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "links": {
                        "prev": null,
                        "next": "/api/v1/transactions?page%5Bafter%5D=txn_ABC123"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Transaction"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "prev": {},
                        "next": {
                          "type": "string",
                          "examples": [
                            "/api/v1/transactions?page%5Bafter%5D=txn_ABC123"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/transactions/{transaction-id}": {
      "get": {
        "summary": "Retrieve a Transaction",
        "tags": [
          "Transactions"
        ],
        "description": "Retrieves the details of a <<glossary:transaction>> that has previously been created.",
        "operationId": "retrieve-a-transaction",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "transaction-id",
            "in": "path",
            "description": "ID of the transaction to retrieve.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "transaction",
                        "id": "txn_ABC123",
                        "attributes": {
                          "status": "declined",
                          "reference-id": null,
                          "external-id": null,
                          "fields": {
                            "country": {
                              "type": "string",
                              "value": "US"
                            },
                            "name-first": {
                              "type": "string",
                              "value": "LeBron"
                            },
                            "name-last": {
                              "type": "string",
                              "value": "James"
                            },
                            "selected-id-class": {
                              "type": "string",
                              "value": "dl"
                            },
                            "front-photo": {
                              "type": "file",
                              "value": {
                                "filename": "image.png",
                                "byte-size": 237011,
                                "mime-type": "image/png",
                                "url": "https://files.withpersona.com/image.png?access_token=ACCESS_ABC123"
                              }
                            },
                            "back-photo": {
                              "type": "file",
                              "value": {
                                "filename": "image.png",
                                "byte-size": 237011,
                                "mime-type": "image/png",
                                "url": "https://files.withpersona.com/image.png?access_token=ACCESS_ABC123"
                              }
                            }
                          },
                          "tags": [],
                          "created-at": "2023-05-26T16:49:33.860Z",
                          "updated-at": "2023-05-26T16:49:43.965Z"
                        },
                        "relationships": {
                          "reviewer": {
                            "data": {
                              "type": "workflow-run",
                              "id": "wfr_ABC123"
                            }
                          },
                          "transaction-label": {
                            "data": null
                          },
                          "transaction-type": {
                            "data": {
                              "type": "transaction-type",
                              "id": "txntp_ABC123"
                            }
                          },
                          "related-objects": {
                            "data": [
                              {
                                "type": "account",
                                "id": "act_ABC123"
                              },
                              {
                                "type": "verification/government-id",
                                "id": "ver_ABC123"
                              }
                            ]
                          }
                        }
                      },
                      "included": [
                        {
                          "type": "account",
                          "id": "act_ABC123",
                          "attributes": {
                            "reference-id": null,
                            "external-id": null,
                            "created-at": "2023-05-26T16:49:35.000Z",
                            "updated-at": "2023-05-26T16:49:35.000Z",
                            "redacted-at": null,
                            "fields": {
                              "name": {
                                "type": "hash",
                                "value": {
                                  "first": {
                                    "type": "string",
                                    "value": null
                                  },
                                  "middle": {
                                    "type": "string",
                                    "value": null
                                  },
                                  "last": {
                                    "type": "string",
                                    "value": null
                                  }
                                }
                              },
                              "address": {
                                "type": "hash",
                                "value": {
                                  "street-1": {
                                    "type": "string",
                                    "value": null
                                  },
                                  "street-2": {
                                    "type": "string",
                                    "value": null
                                  },
                                  "subdivision": {
                                    "type": "string",
                                    "value": null
                                  },
                                  "city": {
                                    "type": "string",
                                    "value": null
                                  },
                                  "postal-code": {
                                    "type": "string",
                                    "value": null
                                  },
                                  "country-code": {
                                    "type": "string",
                                    "value": null
                                  }
                                }
                              },
                              "identification-numbers": {
                                "type": "array",
                                "value": []
                              },
                              "birthdate": {
                                "type": "date",
                                "value": null
                              },
                              "phone-number": {
                                "type": "string",
                                "value": null
                              },
                              "email-address": {
                                "type": "string",
                                "value": null
                              },
                              "selfie-photo": {
                                "type": "file",
                                "value": null
                              }
                            },
                            "country-code": null,
                            "tags": []
                          }
                        },
                        {
                          "type": "verification/government-id",
                          "id": "ver_ABC123",
                          "attributes": {
                            "status": "failed",
                            "created-at": "2023-05-26T16:49:43.000Z",
                            "created-at-ts": 1685119783,
                            "submitted-at": "2023-05-26T16:49:43.000Z",
                            "submitted-at-ts": 1685119783,
                            "completed-at": "2023-05-26T16:49:43.000Z",
                            "completed-at-ts": 1685119783,
                            "country-code": null,
                            "entity-confidence-score": 0,
                            "entity-confidence-reasons": [
                              "generic"
                            ],
                            "front-photo-url": "https://files.withpersona.com/image.jpg?access_token=ACCESS_ABC123",
                            "back-photo-url": "https://files.withpersona.com/image.jpg?access_token=ACCESS_ABC123",
                            "photo-urls": [
                              {
                                "page": "front",
                                "url": "https://files.withpersona.com/image.jpg?access_token=ACCESS_ABC123",
                                "normalized-url": "https://files.withpersona.com/image.jpg?access_token=ACCESS_ABC123",
                                "original-urls": [
                                  "https://files.withpersona.com/image.png?access_token=ACCESS_ABC123"
                                ],
                                "byte-size": 62347
                              },
                              {
                                "page": "back",
                                "url": "https://files.withpersona.com/image.jpg?access_token=ACCESS_ABC123",
                                "normalized-url": "https://files.withpersona.com/image.jpg?access_token=ACCESS_ABC123",
                                "original-urls": [
                                  "https://files.withpersona.com/image.png?access_token=ACCESS_ABC123"
                                ],
                                "byte-size": 62347
                              }
                            ],
                            "selfie-photo": null,
                            "selfie-photo-url": null,
                            "video-url": null,
                            "id-class": null,
                            "capture-method": "api",
                            "expiration-date": null,
                            "endorsements": null,
                            "restrictions": null,
                            "vehicle-class": null,
                            "checks": [
                              {
                                "name": "id_aamva_database_lookup",
                                "status": "not_applicable",
                                "reasons": [
                                  "disabled"
                                ],
                                "requirement": "not_required",
                                "metadata": {}
                              },
                              {
                                "name": "id_account_comparison",
                                "status": "not_applicable",
                                "reasons": [
                                  "no_account"
                                ],
                                "requirement": "not_required",
                                "metadata": {}
                              },
                              {
                                "name": "id_age_comparison",
                                "status": "not_applicable",
                                "reasons": [
                                  "missing_birthdate"
                                ],
                                "requirement": "not_required",
                                "metadata": {}
                              },
                              {
                                "name": "id_barcode_detection",
                                "status": "failed",
                                "reasons": [
                                  "barcode_not_decoded"
                                ],
                                "requirement": "not_required",
                                "metadata": {}
                              },
                              {
                                "name": "id_barcode_inconsistency_detection",
                                "status": "not_applicable",
                                "reasons": [
                                  "barcode_not_decoded"
                                ],
                                "requirement": "not_required",
                                "metadata": {}
                              },
                              {
                                "name": "id_blur_detection",
                                "status": "passed",
                                "reasons": [],
                                "requirement": "not_required",
                                "metadata": {}
                              },
                              {
                                "name": "id_color_inconsistency_detection",
                                "status": "passed",
                                "reasons": [],
                                "requirement": "not_required",
                                "metadata": {}
                              },
                              {
                                "name": "id_disallowed_country_detection",
                                "status": "not_applicable",
                                "reasons": [
                                  "no_country"
                                ],
                                "requirement": "required",
                                "metadata": {}
                              },
                              {
                                "name": "id_disallowed_type_detection",
                                "status": "failed",
                                "reasons": [
                                  "type_not_detected"
                                ],
                                "requirement": "required",
                                "metadata": {
                                  "country-code": null,
                                  "detected-id-designations": [],
                                  "disallowed-id-designations": []
                                }
                              },
                              {
                                "name": "id_double_side_detection",
                                "status": "failed",
                                "reasons": [
                                  "side_submitted_twice"
                                ],
                                "requirement": "not_required",
                                "metadata": {}
                              },
                              {
                                "name": "id_electronic_replica_detection",
                                "status": "failed",
                                "reasons": [
                                  "replica_detected"
                                ],
                                "requirement": "not_required",
                                "metadata": {}
                              },
                              {
                                "name": "id_entity_detection",
                                "status": "failed",
                                "reasons": [
                                  "cannot_verify_id"
                                ],
                                "requirement": "required",
                                "metadata": {}
                              },
                              {
                                "name": "id_expired_detection",
                                "status": "not_applicable",
                                "reasons": [
                                  "no_expiration_date"
                                ],
                                "requirement": "required",
                                "metadata": {}
                              },
                              {
                                "name": "id_extraction_inconsistency_detection",
                                "status": "not_applicable",
                                "reasons": [
                                  "missing_properties"
                                ],
                                "requirement": "not_required",
                                "metadata": {
                                  "check-requirements": []
                                }
                              },
                              {
                                "name": "id_extracted_properties_detection",
                                "status": "not_applicable",
                                "reasons": [
                                  "no_required_properties"
                                ],
                                "requirement": "not_required",
                                "metadata": {}
                              },
                              {
                                "name": "id_fabrication_detection",
                                "status": "passed",
                                "reasons": [],
                                "requirement": "not_required",
                                "metadata": {}
                              },
                              {
                                "name": "id_glare_detection",
                                "status": "failed",
                                "reasons": [
                                  "too_much_glare"
                                ],
                                "requirement": "not_required",
                                "metadata": {}
                              },
                              {
                                "name": "id_handwriting_detection",
                                "status": "passed",
                                "reasons": [],
                                "requirement": "not_required",
                                "metadata": {}
                              },
                              {
                                "name": "id_inquiry_comparison",
                                "status": "not_applicable",
                                "reasons": [
                                  "no_inquiry"
                                ],
                                "requirement": "not_required",
                                "metadata": {}
                              },
                              {
                                "name": "id_mrz_detection",
                                "status": "not_applicable",
                                "reasons": [],
                                "requirement": "required",
                                "metadata": {}
                              },
                              {
                                "name": "id_mrz_inconsistency_detection",
                                "status": "not_applicable",
                                "reasons": [
                                  "mrz_not_found"
                                ],
                                "requirement": "not_required",
                                "metadata": {}
                              },
                              {
                                "name": "id_number_format_inconsistency_detection",
                                "status": "not_applicable",
                                "reasons": [
                                  "invalid_country"
                                ],
                                "requirement": "not_required",
                                "metadata": {}
                              },
                              {
                                "name": "id_po_box_detection",
                                "status": "not_applicable",
                                "reasons": [
                                  "missing_address"
                                ],
                                "requirement": "not_required",
                                "metadata": {}
                              },
                              {
                                "name": "id_portrait_clarity_detection",
                                "status": "not_applicable",
                                "reasons": [],
                                "requirement": "required",
                                "metadata": {}
                              },
                              {
                                "name": "id_portrait_detection",
                                "status": "failed",
                                "reasons": [
                                  "portrait_not_found"
                                ],
                                "requirement": "required",
                                "metadata": {}
                              },
                              {
                                "name": "id_real_id_detection",
                                "status": "not_applicable",
                                "reasons": [
                                  "disabled"
                                ],
                                "requirement": "not_required",
                                "metadata": {}
                              },
                              {
                                "name": "id_tamper_detection",
                                "status": "passed",
                                "reasons": [],
                                "requirement": "not_required",
                                "metadata": {}
                              },
                              {
                                "name": "id_unprocessable_submission_detection",
                                "status": "passed",
                                "reasons": [],
                                "requirement": "not_required",
                                "metadata": {}
                              },
                              {
                                "name": "id_valid_dates_detection",
                                "status": "not_applicable",
                                "reasons": [],
                                "requirement": "not_required",
                                "metadata": {}
                              },
                              {
                                "name": "id_age_inconsistency_detection",
                                "status": "not_applicable",
                                "reasons": [
                                  "disabled"
                                ],
                                "requirement": "not_required",
                                "metadata": {}
                              },
                              {
                                "name": "id_compromised_detection",
                                "status": "passed",
                                "reasons": [],
                                "requirement": "required",
                                "metadata": {}
                              },
                              {
                                "name": "id_inconsistent_repeat_detection",
                                "status": "not_applicable",
                                "reasons": [
                                  "not_enabled"
                                ],
                                "requirement": "not_required",
                                "metadata": {}
                              },
                              {
                                "name": "id_public_figure_detection",
                                "status": "passed",
                                "reasons": [],
                                "requirement": "not_required",
                                "metadata": {}
                              },
                              {
                                "name": "id_repeat_detection",
                                "status": "not_applicable",
                                "reasons": [
                                  "not_enabled"
                                ],
                                "requirement": "not_required",
                                "metadata": {}
                              },
                              {
                                "name": "id_selfie_comparison",
                                "status": "not_applicable",
                                "reasons": [
                                  "no_selfie"
                                ],
                                "requirement": "required",
                                "metadata": {}
                              }
                            ]
                          },
                          "relationships": {
                            "inquiry": {
                              "data": null
                            },
                            "template": {
                              "data": null
                            },
                            "inquiry-template-version": {
                              "data": null
                            },
                            "inquiry-template": {
                              "data": null
                            },
                            "verification-template": {
                              "data": {
                                "type": "verification-template/government-id",
                                "id": "vtmpl_ABC123"
                              }
                            },
                            "verification-template-version": {
                              "data": {
                                "type": "verification-template-version/government-id",
                                "id": "vtmplv_ABC123"
                              }
                            },
                            "document": {
                              "data": {
                                "type": "document/government-id",
                                "id": "doc_ABC123"
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Transaction"
                    },
                    "included": {
                      "items": {
                        "properties": {
                          "type": {
                            "examples": [
                              "account"
                            ],
                            "type": "string"
                          },
                          "id": {
                            "examples": [
                              "act_ABC123"
                            ],
                            "type": "string"
                          }
                        },
                        "additionalProperties": true,
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      },
      "patch": {
        "summary": "Update a Transaction",
        "tags": [
          "Transactions"
        ],
        "description": "Updates a <<glossary:transaction>> that has been previously created.",
        "operationId": "update-a-transaction",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "transaction-id",
            "in": "path",
            "description": "ID of the transaction to update.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "fields": {
                            "description": "Key value pairs of field name to field value. Exact field names and data types will depend on the configurations for your <<glossary:transaction type>>.",
                            "examples": [
                              {
                                "external-integration-id": "ind_123"
                              }
                            ],
                            "type": "object",
                            "additionalProperties": true
                          },
                          "status": {
                            "type": "string"
                          },
                          "reference-id": {
                            "type": "string",
                            "description": "Reference ID on Account, refers to an entity in your user model."
                          },
                          "external-id": {
                            "type": "string",
                            "description": "External ID should be set to the ID for this transaction from your system. It can be used for lookup."
                          },
                          "label": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": ""
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/transactions/{transaction-id}/add-tag": {
      "post": {
        "summary": "Add tag to a transaction",
        "tags": [
          "Transactions"
        ],
        "description": "Add a tag to a transaction. Create a new tag if the tag does not already exist. No effect if the transaction already has the tag.",
        "operationId": "transactions-add-tag",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "transaction-id",
            "in": "path",
            "description": "ID of the transaction to add tag on.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "meta": {
                    "properties": {
                      "tag-name": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "examples": {
                "Example": {
                  "value": {
                    "meta": {
                      "tag-name": "new tag"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "transaction",
                        "id": "txn_ABC123",
                        "attributes": {
                          "status": "declined",
                          "reference-id": null,
                          "external-id": null,
                          "fields": {
                            "country": {
                              "type": "string",
                              "value": "US"
                            },
                            "name-first": {
                              "type": "string",
                              "value": "LeBron"
                            },
                            "name-last": {
                              "type": "string",
                              "value": "James"
                            },
                            "selected-id-class": {
                              "type": "string",
                              "value": "dl"
                            },
                            "front-photo": {
                              "type": "file",
                              "value": {
                                "filename": "image.png",
                                "byte-size": 237011,
                                "mime-type": "image/png",
                                "url": "https://files.withpersona.com/image.png?access_token=ACCESS_ABC123"
                              }
                            },
                            "back-photo": {
                              "type": "file",
                              "value": {
                                "filename": "image.png",
                                "byte-size": 237011,
                                "mime-type": "image/png",
                                "url": "https://files.withpersona.com/image.png?access_token=ACCESS_ABC123"
                              }
                            }
                          },
                          "tags": [
                            "new tag"
                          ],
                          "created-at": "2023-05-26T16:49:33.860Z",
                          "updated-at": "2023-05-26T16:49:43.965Z"
                        },
                        "relationships": {
                          "reviewer": {
                            "data": {
                              "type": "workflow-run",
                              "id": "wfr_ABC123"
                            }
                          },
                          "transaction-label": {
                            "data": null
                          },
                          "transaction-type": {
                            "data": {
                              "type": "transaction-type",
                              "id": "txntp_ABC123"
                            }
                          },
                          "related-objects": {
                            "data": [
                              {
                                "type": "account",
                                "id": "act_ABC123"
                              },
                              {
                                "type": "verification/government-id",
                                "id": "ver_ABC123"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Transaction"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/transactions/{transaction-id}/label": {
      "post": {
        "summary": "Create a Transaction Label",
        "tags": [
          "Transactions"
        ],
        "description": "Create a new label for an existing <<glossary:transaction>>.",
        "operationId": "create-a-transaction-label",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "transaction-id",
            "in": "path",
            "description": "ID of the transaction to create a label for.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "meta": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string"
                      },
                      "score": {
                        "type": "number",
                        "format": "float"
                      },
                      "model-version": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "transaction",
                        "id": "txn_ABC123",
                        "attributes": {
                          "status": "declined",
                          "reference-id": null,
                          "external-id": null,
                          "fields": {
                            "country": {
                              "type": "string",
                              "value": "US"
                            },
                            "name-first": {
                              "type": "string",
                              "value": "LeBron"
                            },
                            "name-last": {
                              "type": "string",
                              "value": "James"
                            },
                            "selected-id-class": {
                              "type": "string",
                              "value": "dl"
                            },
                            "front-photo": {
                              "type": "file",
                              "value": {
                                "filename": "image.png",
                                "byte-size": 237011,
                                "mime-type": "image/png",
                                "url": "https://files.withpersona.com/image.png?access_token=ACCESS_ABC123"
                              }
                            },
                            "back-photo": {
                              "type": "file",
                              "value": {
                                "filename": "image.png",
                                "byte-size": 237011,
                                "mime-type": "image/png",
                                "url": "https://files.withpersona.com/image.png?access_token=ACCESS_ABC123"
                              }
                            }
                          },
                          "tags": [],
                          "created-at": "2023-05-26T16:49:33.860Z",
                          "updated-at": "2023-05-26T16:49:43.965Z"
                        },
                        "relationships": {
                          "reviewer": {
                            "data": {
                              "type": "workflow-run",
                              "id": "wfr_ABC123"
                            }
                          },
                          "transaction-label": {
                            "data": null
                          },
                          "transaction-type": {
                            "data": {
                              "type": "transaction-type",
                              "id": "txntp_ABC123"
                            }
                          },
                          "related-objects": {
                            "data": [
                              {
                                "type": "account",
                                "id": "act_ABC123"
                              },
                              {
                                "type": "verification/government-id",
                                "id": "ver_ABC123"
                              }
                            ]
                          }
                        }
                      },
                      "included": [
                        {
                          "type": "transaction-label",
                          "id": "txnl_ABC123",
                          "attributes": {
                            "model-label": "test",
                            "model-version": "1.2.3",
                            "created-at": "2023-06-29T23:54:35.293Z",
                            "updated-at": "2023-06-29T23:54:35.293Z"
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Transaction"
                    },
                    "included": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "examples": [
                              "transaction-label"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "examples": [
                              "txnl_ABC123"
                            ]
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "model-label": {
                                "type": "string",
                                "examples": [
                                  "test"
                                ]
                              },
                              "model-version": {
                                "type": "string",
                                "examples": [
                                  "1.2.3"
                                ]
                              },
                              "created-at": {
                                "type": "string",
                                "examples": [
                                  "2023-06-29T23:54:35.293Z"
                                ]
                              },
                              "updated-at": {
                                "type": "string",
                                "examples": [
                                  "2023-06-29T23:54:35.293Z"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/transactions/{transaction-id}/remove-tag": {
      "post": {
        "summary": "Remove tag to a transaction",
        "tags": [
          "Transactions"
        ],
        "description": "Remove a tag from a transaction. No effect if the transaction does not have the tag.",
        "operationId": "transactions-remove-tag",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "transaction-id",
            "in": "path",
            "description": "ID of the transaction to remove tag from.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "meta": {
                    "properties": {
                      "tag-name": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "examples": {
                "Example": {
                  "value": {
                    "meta": {
                      "tag-name": "new tag"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "transaction",
                        "id": "txn_ABC123",
                        "attributes": {
                          "status": "declined",
                          "reference-id": null,
                          "external-id": null,
                          "fields": {
                            "country": {
                              "type": "string",
                              "value": "US"
                            },
                            "name-first": {
                              "type": "string",
                              "value": "LeBron"
                            },
                            "name-last": {
                              "type": "string",
                              "value": "James"
                            },
                            "selected-id-class": {
                              "type": "string",
                              "value": "dl"
                            },
                            "front-photo": {
                              "type": "file",
                              "value": {
                                "filename": "image.png",
                                "byte-size": 237011,
                                "mime-type": "image/png",
                                "url": "https://files.withpersona.com/image.png?access_token=ACCESS_ABC123"
                              }
                            },
                            "back-photo": {
                              "type": "file",
                              "value": {
                                "filename": "image.png",
                                "byte-size": 237011,
                                "mime-type": "image/png",
                                "url": "https://files.withpersona.com/image.png?access_token=ACCESS_ABC123"
                              }
                            }
                          },
                          "tags": [],
                          "created-at": "2023-05-26T16:49:33.860Z",
                          "updated-at": "2023-05-26T16:49:43.965Z"
                        },
                        "relationships": {
                          "reviewer": {
                            "data": {
                              "type": "workflow-run",
                              "id": "wfr_ABC123"
                            }
                          },
                          "transaction-label": {
                            "data": null
                          },
                          "transaction-type": {
                            "data": {
                              "type": "transaction-type",
                              "id": "txntp_ABC123"
                            }
                          },
                          "related-objects": {
                            "data": [
                              {
                                "type": "account",
                                "id": "act_ABC123"
                              },
                              {
                                "type": "verification/government-id",
                                "id": "ver_ABC123"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Transaction"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/transactions/{transaction-id}/set-tags": {
      "post": {
        "summary": "Set a list of tags to a transaction",
        "tags": [
          "Transactions"
        ],
        "description": "Set the list of tags on a transaction. Remove all tags on the transaction that don't appear on the list. Add all tags on the transaction from the list.",
        "operationId": "transactions-set-tags",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "transaction-id",
            "in": "path",
            "description": "ID of the transaction to set tags on.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "meta": {
                    "properties": {
                      "tag-name": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "examples": {
                "Example": {
                  "value": {
                    "meta": {
                      "tag-name": [
                        "new tag 1",
                        "new tag 2"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "transaction",
                        "id": "txn_ABC123",
                        "attributes": {
                          "status": "declined",
                          "reference-id": null,
                          "external-id": null,
                          "fields": {
                            "country": {
                              "type": "string",
                              "value": "US"
                            },
                            "name-first": {
                              "type": "string",
                              "value": "LeBron"
                            },
                            "name-last": {
                              "type": "string",
                              "value": "James"
                            },
                            "selected-id-class": {
                              "type": "string",
                              "value": "dl"
                            },
                            "front-photo": {
                              "type": "file",
                              "value": {
                                "filename": "image.png",
                                "byte-size": 237011,
                                "mime-type": "image/png",
                                "url": "https://files.withpersona.com/image.png?access_token=ACCESS_ABC123"
                              }
                            },
                            "back-photo": {
                              "type": "file",
                              "value": {
                                "filename": "image.png",
                                "byte-size": 237011,
                                "mime-type": "image/png",
                                "url": "https://files.withpersona.com/image.png?access_token=ACCESS_ABC123"
                              }
                            }
                          },
                          "tags": [
                            "new tag 1",
                            "new tag 2"
                          ],
                          "created-at": "2023-05-26T16:49:33.860Z",
                          "updated-at": "2023-05-26T16:49:43.965Z"
                        },
                        "relationships": {
                          "reviewer": {
                            "data": {
                              "type": "workflow-run",
                              "id": "wfr_ABC123"
                            }
                          },
                          "transaction-label": {
                            "data": null
                          },
                          "transaction-type": {
                            "data": {
                              "type": "transaction-type",
                              "id": "txntp_ABC123"
                            }
                          },
                          "related-objects": {
                            "data": [
                              {
                                "type": "account",
                                "id": "act_ABC123"
                              },
                              {
                                "type": "verification/government-id",
                                "id": "ver_ABC123"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Transaction"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      }
    },
    "/user-audit-logs": {
      "get": {
        "description": "Returns a list of your organization's user audit logs.",
        "operationId": "list-all-user-audit-logs",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "in": "query",
            "name": "page",
            "style": "deepObject",
            "allowReserved": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/NestedPaginationQueryParams"
                },
                {
                  "type": "object",
                  "properties": {
                    "after": {
                      "example": "ual_ABC123"
                    },
                    "before": {
                      "example": "ual_ABC123"
                    }
                  }
                }
              ]
            }
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": [
                        {
                          "type": "user-audit-log",
                          "id": "ual_ABC123ABC",
                          "attributes": {
                            "path": "/api/v1/inquiries",
                            "method": "GET",
                            "get-params": {},
                            "post-params": {},
                            "ip-address": "127.0.0.1",
                            "created-at": "2023-10-03T21:31:05.163Z",
                            "impersonator-email-address": null
                          },
                          "relationships": {
                            "user": {
                              "data": {
                                "type": "user",
                                "id": "user_ABC123"
                              }
                            }
                          }
                        },
                        {
                          "type": "user-audit-log",
                          "id": "ual_ABC123XYZ",
                          "attributes": {
                            "path": "/api/internal/dashboard/v1/user-sessions/uses_ABC123/expire",
                            "method": "GET",
                            "get-params": {},
                            "post-params": {
                              "data": {
                                "id": "uses_ABC123",
                                "type": "user-session"
                              }
                            },
                            "ip-address": "127.0.0.1",
                            "created-at": "2023-10-03T21:31:05.163Z",
                            "impersonator-email-address": null
                          },
                          "relationships": {
                            "user": {
                              "data": {
                                "type": "user",
                                "id": "user_ABC123"
                              }
                            }
                          }
                        }
                      ],
                      "links": {
                        "next": null,
                        "prev": null
                      },
                      "included": [
                        {
                          "type": "user",
                          "id": "user_ABC123",
                          "attributes": {
                            "email-address": "jane@doe.com",
                            "name-first": "Jane",
                            "name-last": "Doe"
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UserAuditLog"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "prev": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "examples": [
                            "/api/v1/user-audit-logs?page%5Bbefore%5D=ual_ABC123"
                          ]
                        },
                        "next": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "examples": [
                            "/api/v1/user-audit-logs?page%5Bafter%5D=ual_ABC123"
                          ]
                        }
                      }
                    },
                    "included": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "examples": [
                              "user"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "examples": [
                              "user_ABC123"
                            ]
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "email-address": {
                                "type": "string",
                                "examples": [
                                  "jane@doe.com"
                                ]
                              },
                              "name-first": {
                                "type": "string",
                                "examples": [
                                  "Jane"
                                ]
                              },
                              "name-last": {
                                "type": "string",
                                "examples": [
                                  "Doe"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "List all User Audit Logs",
        "tags": [
          "User Audit Logs"
        ]
      }
    },
    "/user-audit-logs/{user-audit-log-id}": {
      "get": {
        "description": "Retrieve the details of an API Log that has previously been created.",
        "operationId": "retrieve-an-user-audit-log",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "user-audit-log-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "user-audit-log",
                        "id": "ual_ABC123",
                        "attributes": {
                          "path": "/api/v1/inquiries",
                          "method": "GET",
                          "get-params": {},
                          "post-params": {},
                          "ip-address": "127.0.0.1",
                          "created-at": "2023-10-03T21:31:05.163Z",
                          "impersonator-email-address": null
                        },
                        "relationships": {
                          "user": {
                            "data": {
                              "type": "user",
                              "id": "user_ABC123"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UserAuditLog"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Retrieve an User Audit Log",
        "tags": [
          "User Audit Logs"
        ]
      }
    },
    "/verification/database-phone-carriers": {
      "post": {
        "description": "Create a new phone carrier database verification",
        "operationId": "create-a-phone-carrier-database-verification",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/AddressFields"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "birthdate": {
                                "description": "Birthdate of the individual",
                                "format": "date",
                                "type": "string"
                              },
                              "name-first": {
                                "description": "First name of the individual",
                                "type": "string"
                              },
                              "name-last": {
                                "description": "Last name of the individual",
                                "type": "string"
                              },
                              "phone-number": {
                                "description": "Phone number of the individual",
                                "type": "string"
                              },
                              "verification-template-id": {
                                "description": "ID of Verification Template. You can find your Verification Template IDs [here](https://app.withpersona.com/dashboard/verification-templates?filter=%7B%22type%22%3A%5B%22verification-template%2Fdatabase-phone-carrier\"%5D%7D)",
                                "type": "string"
                              }
                            }
                          }
                        ],
                        "required": [
                          "verification-template-id",
                          "phone-number",
                          "name-first",
                          "name-last",
                          "address-street-1",
                          "address-subdivision",
                          "address-postal-code",
                          "birthdate"
                        ]
                      }
                    },
                    "type": "object"
                  }
                },
                "required": [
                  "data"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "value": {
                      "data": {
                        "type": "verification/database-phone-carrier",
                        "id": "ver_sg4L6Zax4TfXrVsGbVaBoSdr",
                        "attributes": {
                          "status": "initiated",
                          "created-at": "2022-08-03T03:15:56.000Z",
                          "created-at-ts": 1659496556,
                          "submitted-at": null,
                          "submitted-at-ts": null,
                          "completed-at": null,
                          "completed-at-ts": null,
                          "country-code": "US",
                          "name-first": "ALEXANDER",
                          "checks": []
                        },
                        "relationships": {
                          "inquiry": {
                            "data": null
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "checks": {
                              "type": "array"
                            },
                            "completed-at": {},
                            "completed-at-ts": {},
                            "country-code": {
                              "examples": [
                                "US"
                              ],
                              "type": "string"
                            },
                            "created-at": {
                              "examples": [
                                "2022-08-03T03:15:56.000Z"
                              ],
                              "type": "string"
                            },
                            "created-at-ts": {
                              "default": 0,
                              "examples": [
                                1659496556
                              ],
                              "type": "integer"
                            },
                            "name-first": {
                              "examples": [
                                "ALEXANDER"
                              ],
                              "type": "string"
                            },
                            "status": {
                              "examples": [
                                "initiated"
                              ],
                              "type": "string"
                            },
                            "submitted-at": {},
                            "submitted-at-ts": {}
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "ver_sg4L6Zax4TfXrVsGbVaBoSdr"
                          ],
                          "type": "string"
                        },
                        "relationships": {
                          "properties": {
                            "inquiry": {
                              "properties": {
                                "data": {}
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "examples": [
                            "verification/database-phone-carrier"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Create a Phone Carrier Database Verification",
        "tags": [
          "Phone Carrier Database Verifications"
        ]
      }
    },
    "/verification/database-phone-carriers/{verification-id}": {
      "get": {
        "description": "Retrieve a phone carrier database verification",
        "operationId": "retrieve-a-phone-carrier-database-verification",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "ID of Verification to retrieve",
            "in": "path",
            "name": "verification-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "verification/database-phone-carrier",
                        "id": "ver_sg4L6Zax4TfXrVsGbVaBoSdr",
                        "attributes": {
                          "status": "failed",
                          "created-at": "2022-08-03T03:15:56.000Z",
                          "created-at-ts": 1659496556,
                          "submitted-at": "2022-08-03T03:16:26.000Z",
                          "submitted-at-ts": 1659496586,
                          "completed-at": "2022-08-03T03:16:27.000Z",
                          "completed-at-ts": 1659496587,
                          "country-code": "US",
                          "name-first": "ALEXANDER",
                          "checks": [
                            {
                              "name": "database_phone_carrier_name_first_comparison",
                              "status": "passed",
                              "reasons": [],
                              "metadata": {
                                "match-score": 100,
                                "match-result": "full"
                              }
                            },
                            {
                              "name": "database_phone_carrier_name_last_comparison",
                              "status": "failed",
                              "reasons": [
                                "insufficient_match"
                              ],
                              "metadata": {
                                "match-score": 63,
                                "match-result": "partial"
                              }
                            },
                            {
                              "name": "database_phone_carrier_birthdate_comparison",
                              "status": "not_applicable",
                              "reasons": [
                                "unavailable_for_country"
                              ],
                              "metadata": {}
                            },
                            {
                              "name": "database_phone_carrier_address_comparison",
                              "status": "passed",
                              "reasons": [],
                              "metadata": {
                                "match-score": 48,
                                "match-result": "none"
                              }
                            }
                          ]
                        },
                        "relationships": {
                          "inquiry": {
                            "data": null
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "checks": {
                              "items": {
                                "properties": {
                                  "metadata": {
                                    "properties": {
                                      "match-result": {
                                        "examples": [
                                          "full"
                                        ],
                                        "type": "string"
                                      },
                                      "match-score": {
                                        "default": 0,
                                        "examples": [
                                          100
                                        ],
                                        "type": "integer"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "name": {
                                    "examples": [
                                      "database_phone_carrier_name_first_comparison"
                                    ],
                                    "type": "string"
                                  },
                                  "reasons": {
                                    "type": "array"
                                  },
                                  "status": {
                                    "examples": [
                                      "passed"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "completed-at": {
                              "examples": [
                                "2022-08-03T03:16:27.000Z"
                              ],
                              "type": "string"
                            },
                            "completed-at-ts": {
                              "default": 0,
                              "examples": [
                                1659496587
                              ],
                              "type": "integer"
                            },
                            "country-code": {
                              "examples": [
                                "US"
                              ],
                              "type": "string"
                            },
                            "created-at": {
                              "examples": [
                                "2022-08-03T03:15:56.000Z"
                              ],
                              "type": "string"
                            },
                            "created-at-ts": {
                              "default": 0,
                              "examples": [
                                1659496556
                              ],
                              "type": "integer"
                            },
                            "name-first": {
                              "examples": [
                                "ALEXANDER"
                              ],
                              "type": "string"
                            },
                            "status": {
                              "examples": [
                                "failed"
                              ],
                              "type": "string"
                            },
                            "submitted-at": {
                              "examples": [
                                "2022-08-03T03:16:26.000Z"
                              ],
                              "type": "string"
                            },
                            "submitted-at-ts": {
                              "default": 0,
                              "examples": [
                                1659496586
                              ],
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "ver_sg4L6Zax4TfXrVsGbVaBoSdr"
                          ],
                          "type": "string"
                        },
                        "relationships": {
                          "properties": {
                            "inquiry": {
                              "properties": {
                                "data": {}
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "examples": [
                            "verification/database-phone-carrier"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Retrieve a Phone Carrier Database Verification",
        "tags": [
          "Phone Carrier Database Verifications"
        ]
      }
    },
    "/verification/database-phone-carriers/{verification-id}/submit": {
      "post": {
        "description": "Submit a phone carrier database verification for processing. Can only submit `initiated` verifications",
        "operationId": "submit-a-phone-carrier-database-verification",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "ID of Verification to submit",
            "in": "path",
            "name": "verification-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "verification/database-phone-carrier",
                        "id": "ver_sg4L6Zax4TfXrVsGbVaBoSdr",
                        "attributes": {
                          "status": "submitted",
                          "created-at": "2022-08-03T03:15:56.000Z",
                          "created-at-ts": 1659496556,
                          "submitted-at": "2022-08-03T03:16:26.000Z",
                          "submitted-at-ts": 1659496586,
                          "completed-at": null,
                          "completed-at-ts": null,
                          "country-code": "US",
                          "name-first": "ALEXANDER",
                          "checks": []
                        },
                        "relationships": {
                          "inquiry": {
                            "data": null
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "checks": {
                              "type": "array"
                            },
                            "completed-at": {},
                            "completed-at-ts": {},
                            "country-code": {
                              "examples": [
                                "US"
                              ],
                              "type": "string"
                            },
                            "created-at": {
                              "examples": [
                                "2022-08-03T03:15:56.000Z"
                              ],
                              "type": "string"
                            },
                            "created-at-ts": {
                              "default": 0,
                              "examples": [
                                1659496556
                              ],
                              "type": "integer"
                            },
                            "name-first": {
                              "examples": [
                                "ALEXANDER"
                              ],
                              "type": "string"
                            },
                            "status": {
                              "examples": [
                                "submitted"
                              ],
                              "type": "string"
                            },
                            "submitted-at": {
                              "examples": [
                                "2022-08-03T03:16:26.000Z"
                              ],
                              "type": "string"
                            },
                            "submitted-at-ts": {
                              "default": 0,
                              "examples": [
                                1659496586
                              ],
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "ver_sg4L6Zax4TfXrVsGbVaBoSdr"
                          ],
                          "type": "string"
                        },
                        "relationships": {
                          "properties": {
                            "inquiry": {
                              "properties": {
                                "data": {}
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "examples": [
                            "verification/database-phone-carrier"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Submit a Phone Carrier Database Verification",
        "tags": [
          "Phone Carrier Database Verifications"
        ]
      }
    },
    "/verification/database-serpros": {
      "post": {
        "description": "Create a new Serpro database verification",
        "operationId": "create-a-serpro-database-verification",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "properties": {
                          "birthdate": {
                            "description": "Birthdate of the individual",
                            "format": "date",
                            "type": "string"
                          },
                          "cpf": {
                            "description": "The Cadastro de Pessoas Físicas for the individual",
                            "type": "string"
                          },
                          "name-first": {
                            "description": "First name of the individual. This will be overwritten by name-full",
                            "type": "string"
                          },
                          "name-full": {
                            "description": "Full name of the individual. This will overwrite values for name-first an name-last if provided",
                            "type": "string"
                          },
                          "name-last": {
                            "description": "Last name of the individual. This will be overwritten by name-full",
                            "type": "string"
                          },
                          "selfie-id": {
                            "description": "ID of a selfie of the individual. This id should begin with self_",
                            "type": "string"
                          },
                          "verification-template-id": {
                            "description": "ID of Verification Template. You can find your Verification Template IDs [here](https://app.withpersona.com/dashboard/verification-templates?filter=%7B%22type%22%3A%5B%22verification-template%2Fdatabase-serpro\"%5D%7D)",
                            "type": "string"
                          }
                        },
                        "required": [
                          "verification-template-id",
                          "cpf"
                        ],
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "required": [
                  "data"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "value": {
                      "data": {
                        "type": "verification/database-serpro",
                        "id": "ver_ixBrVPK2jKwg4qGmbWZvwMmw",
                        "attributes": {
                          "status": "initiated",
                          "created-at": "2022-08-03T03:42:20.000Z",
                          "created-at-ts": 1659498140,
                          "submitted-at": null,
                          "submitted-at-ts": null,
                          "completed-at": null,
                          "completed-at-ts": null,
                          "country-code": "BR",
                          "name-first": "ALEXANDER",
                          "checks": []
                        },
                        "relationships": {
                          "inquiry": {
                            "data": null
                          },
                          "selfie": {
                            "data": null
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "checks": {
                              "type": "array"
                            },
                            "completed-at": {},
                            "completed-at-ts": {},
                            "country-code": {
                              "examples": [
                                "BR"
                              ],
                              "type": "string"
                            },
                            "created-at": {
                              "examples": [
                                "2022-08-03T03:42:20.000Z"
                              ],
                              "type": "string"
                            },
                            "created-at-ts": {
                              "default": 0,
                              "examples": [
                                1659498140
                              ],
                              "type": "integer"
                            },
                            "name-first": {
                              "examples": [
                                "ALEXANDER"
                              ],
                              "type": "string"
                            },
                            "status": {
                              "examples": [
                                "initiated"
                              ],
                              "type": "string"
                            },
                            "submitted-at": {},
                            "submitted-at-ts": {}
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "ver_ixBrVPK2jKwg4qGmbWZvwMmw"
                          ],
                          "type": "string"
                        },
                        "relationships": {
                          "properties": {
                            "inquiry": {
                              "properties": {
                                "data": {}
                              },
                              "type": "object"
                            },
                            "selfie": {
                              "properties": {
                                "data": {}
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "examples": [
                            "verification/database-serpro"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Create a Serpro Database Verification",
        "tags": [
          "Serpro Database Verifications"
        ]
      }
    },
    "/verification/database-serpros/{verification-id}": {
      "get": {
        "description": "Retrieve a Serpro database verification",
        "operationId": "retrieve-a-serpro-database-verification",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "ID of Verification to retrieve",
            "in": "path",
            "name": "verification-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "verification/database-serpro",
                        "id": "ver_b9uPLjR3xtihTQsSmdKceTx9",
                        "attributes": {
                          "status": "passed",
                          "created-at": "2022-08-03T03:42:20.000Z",
                          "created-at-ts": 1659498140,
                          "submitted-at": "2022-08-03T03:52:00.000Z",
                          "submitted-at-ts": 1659498720,
                          "completed-at": "2022-08-03T03:52:03.000Z",
                          "completed-at-ts": 1659498723,
                          "country-code": "BR",
                          "name-first": "ALEXANDER",
                          "checks": [
                            {
                              "name": "database_serpro_name_comparison",
                              "status": "passed",
                              "reasons": [],
                              "metadata": {}
                            },
                            {
                              "name": "database_serpro_birthdate_comparison",
                              "status": "passed",
                              "reasons": [],
                              "metadata": {}
                            },
                            {
                              "name": "database_serpro_cpf_comparison",
                              "status": "passed",
                              "reasons": [],
                              "metadata": {}
                            },
                            {
                              "name": "database_serpro_service_available_detection",
                              "status": "passed",
                              "reasons": [],
                              "metadata": {}
                            }
                          ]
                        },
                        "relationships": {
                          "inquiry": {
                            "data": null
                          },
                          "selfie": {
                            "data": null
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "checks": {
                              "items": {
                                "properties": {
                                  "metadata": {
                                    "properties": {},
                                    "type": "object"
                                  },
                                  "name": {
                                    "examples": [
                                      "database_serpro_name_comparison"
                                    ],
                                    "type": "string"
                                  },
                                  "reasons": {
                                    "type": "array"
                                  },
                                  "status": {
                                    "examples": [
                                      "passed"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "completed-at": {
                              "examples": [
                                "2022-08-03T03:52:03.000Z"
                              ],
                              "type": "string"
                            },
                            "completed-at-ts": {
                              "default": 0,
                              "examples": [
                                1659498723
                              ],
                              "type": "integer"
                            },
                            "country-code": {
                              "examples": [
                                "BR"
                              ],
                              "type": "string"
                            },
                            "created-at": {
                              "examples": [
                                "2022-08-03T03:42:20.000Z"
                              ],
                              "type": "string"
                            },
                            "created-at-ts": {
                              "default": 0,
                              "examples": [
                                1659498140
                              ],
                              "type": "integer"
                            },
                            "name-first": {
                              "examples": [
                                "ALEXANDER"
                              ],
                              "type": "string"
                            },
                            "status": {
                              "examples": [
                                "passed"
                              ],
                              "type": "string"
                            },
                            "submitted-at": {
                              "examples": [
                                "2022-08-03T03:52:00.000Z"
                              ],
                              "type": "string"
                            },
                            "submitted-at-ts": {
                              "default": 0,
                              "examples": [
                                1659498720
                              ],
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "ver_b9uPLjR3xtihTQsSmdKceTx9"
                          ],
                          "type": "string"
                        },
                        "relationships": {
                          "properties": {
                            "inquiry": {
                              "properties": {
                                "data": {}
                              },
                              "type": "object"
                            },
                            "selfie": {
                              "properties": {
                                "data": {}
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "examples": [
                            "verification/database-serpro"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Retrieve a Serpro Database Verification",
        "tags": [
          "Serpro Database Verifications"
        ]
      }
    },
    "/verification/database-serpros/{verification-id}/submit": {
      "post": {
        "description": "Submit a Serpro database verification for processing. Can only submit `initiated` verifications",
        "operationId": "submit-a-serpro-database-verification",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "ID of Verification to submit",
            "in": "path",
            "name": "verification-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "verification/database-serpro",
                        "id": "ver_ixBrVPK2jKwg4qGmbWZvwMmw",
                        "attributes": {
                          "status": "submitted",
                          "created-at": "2022-08-03T03:42:20.000Z",
                          "created-at-ts": 1659498140,
                          "submitted-at": "2022-08-03T03:52:00.000Z",
                          "submitted-at-ts": 1659498720,
                          "completed-at": null,
                          "completed-at-ts": null,
                          "country-code": "BR",
                          "name-first": "ALEXANDER",
                          "checks": []
                        },
                        "relationships": {
                          "inquiry": {
                            "data": null
                          },
                          "selfie": {
                            "data": null
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "checks": {
                              "type": "array"
                            },
                            "completed-at": {},
                            "completed-at-ts": {},
                            "country-code": {
                              "examples": [
                                "BR"
                              ],
                              "type": "string"
                            },
                            "created-at": {
                              "examples": [
                                "2022-08-03T03:42:20.000Z"
                              ],
                              "type": "string"
                            },
                            "created-at-ts": {
                              "default": 0,
                              "examples": [
                                1659498140
                              ],
                              "type": "integer"
                            },
                            "name-first": {
                              "examples": [
                                "ALEXANDER"
                              ],
                              "type": "string"
                            },
                            "status": {
                              "examples": [
                                "submitted"
                              ],
                              "type": "string"
                            },
                            "submitted-at": {
                              "examples": [
                                "2022-08-03T03:52:00.000Z"
                              ],
                              "type": "string"
                            },
                            "submitted-at-ts": {
                              "default": 0,
                              "examples": [
                                1659498720
                              ],
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "ver_ixBrVPK2jKwg4qGmbWZvwMmw"
                          ],
                          "type": "string"
                        },
                        "relationships": {
                          "properties": {
                            "inquiry": {
                              "properties": {
                                "data": {}
                              },
                              "type": "object"
                            },
                            "selfie": {
                              "properties": {
                                "data": {}
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "examples": [
                            "verification/database-serpro"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Submit a Serpro Database Verification",
        "tags": [
          "Serpro Database Verifications"
        ]
      }
    },
    "/verification/database-standards": {
      "post": {
        "description": "Create a new database standard verification",
        "operationId": "create-a-database-standard-verification",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/DefaultFields"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "country-code": {
                                "description": "Country of residence for the individual",
                                "type": "string"
                              },
                              "verification-template-id": {
                                "description": "ID of Verification Template. You can find your Verification Template IDs [here](https://app.withpersona.com/dashboard/verification-templates?filter=%7B%22type%22%3A%5B%22verification-template%2Fdatabase\"%5D%7D)",
                                "type": "string"
                              }
                            }
                          }
                        ],
                        "required": [
                          "verification-template-id",
                          "country-code"
                        ]
                      }
                    },
                    "type": "object"
                  }
                },
                "required": [
                  "data"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "value": {
                      "data": {
                        "type": "verification/database-standard",
                        "id": "ver_6hhbmCZyhrhTjqHVwwP66QGe",
                        "attributes": {
                          "status": "initiated",
                          "created-at": "2022-08-02T04:53:19.000Z",
                          "created-at-ts": 1659415999,
                          "submitted-at": null,
                          "submitted-at-ts": null,
                          "completed-at": null,
                          "completed-at-ts": null,
                          "country-code": "US",
                          "name-first": "ALEXANDER",
                          "name-middle": "JAMES",
                          "name-last": "HAMILTON",
                          "checks": []
                        },
                        "relationships": {
                          "inquiry": {
                            "data": {}
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "checks": {
                              "type": "array"
                            },
                            "completed-at": {},
                            "completed-at-ts": {},
                            "country-code": {
                              "examples": [
                                "US"
                              ],
                              "type": "string"
                            },
                            "created-at": {
                              "examples": [
                                "2022-08-02T04:53:19.000Z"
                              ],
                              "type": "string"
                            },
                            "created-at-ts": {
                              "default": 0,
                              "examples": [
                                1659415999
                              ],
                              "type": "integer"
                            },
                            "name-first": {
                              "examples": [
                                "ALEXANDER"
                              ],
                              "type": "string"
                            },
                            "name-middle": {
                              "examples": [
                                "JAMES"
                              ],
                              "type": "string"
                            },
                            "name-last": {
                              "examples": [
                                "HAMILTON"
                              ],
                              "type": "string"
                            },
                            "status": {
                              "examples": [
                                "initiated"
                              ],
                              "type": "string"
                            },
                            "submitted-at": {},
                            "submitted-at-ts": {}
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "ver_6hhbmCZyhrhTjqHVwwP66QGe"
                          ],
                          "type": "string"
                        },
                        "relationships": {
                          "properties": {
                            "inquiry": {
                              "properties": {
                                "data": {
                                  "properties": {
                                    "id": {
                                      "examples": [
                                        "inq_Dj1JxEG9K153GbvFYGScCRlL"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "examples": [
                            "verification/database-standard"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Create a Database Standard Verification",
        "tags": [
          "Database Standard Verifications"
        ]
      }
    },
    "/verification/database-standards/{verification-id}": {
      "get": {
        "description": "Retrieve a database standard verification",
        "operationId": "retrieve-a-database-standard-verification",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "ID of Verification to retrieve",
            "in": "path",
            "name": "verification-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "verification/database-standard",
                        "id": "ver_1rWMmoV3hoy2qWv3wGPcH43c",
                        "attributes": {
                          "status": "passed",
                          "created-at": "2022-08-02T05:02:56.000Z",
                          "created-at-ts": 1659416576,
                          "submitted-at": "2022-08-02T05:03:02.000Z",
                          "submitted-at-ts": 1659416582,
                          "completed-at": "2022-08-02T05:03:02.000Z",
                          "completed-at-ts": 1659416582,
                          "country-code": "US",
                          "name-first": "ALEXANDER",
                          "name-middle": "JAMES",
                          "name-last": "HAMILTON",
                          "address-street-1": "555 Beverly Hills",
                          "address-street-2": "Apartment 123",
                          "address-city": "Los Angeles",
                          "address-subdivision": "CA",
                          "address-postal-code": "55555",
                          "normalized-address-street-1": "555 Beverly Hills",
                          "normalized-address-street-2": "Apt 123",
                          "normalized-address-city": "Los Angeles",
                          "normalized-address-subdivision": "CA",
                          "normalized-address-postal-code": "55555",
                          "checks": [
                            {
                              "name": "database_standard_identity_comparison",
                              "status": "passed",
                              "reasons": [],
                              "metadata": {
                                "check-requirements": [
                                  {
                                    "name": "name_first",
                                    "match-result": "partial",
                                    "status": "passed",
                                    "comparisons": [
                                      {
                                        "type": "string_similarity",
                                        "match-level-minimum": "partial",
                                        "match-result": "partial"
                                      },
                                      {
                                        "type": "nickname",
                                        "match-level-minimum": "partial",
                                        "match-result": "none"
                                      },
                                      {
                                        "type": "string_difference",
                                        "match-level-minimum": "partial",
                                        "match-result": "none"
                                      },
                                      {
                                        "type": "substring",
                                        "match-level-minimum": "partial",
                                        "match-result": "partial"
                                      },
                                      {
                                        "type": "tokenization",
                                        "match-level-minimum": "partial",
                                        "match-result": "partial"
                                      }
                                    ]
                                  },
                                  {
                                    "name": "name_last",
                                    "match-result": "full",
                                    "status": "passed",
                                    "comparisons": [
                                      {
                                        "type": "string_similarity",
                                        "match-level-minimum": "partial",
                                        "match-result": "full"
                                      },
                                      {
                                        "type": "string_difference",
                                        "match-level-minimum": "partial",
                                        "match-result": "full"
                                      },
                                      {
                                        "type": "substring",
                                        "match-level-minimum": "partial",
                                        "match-result": "full"
                                      },
                                      {
                                        "type": "tokenization",
                                        "match-level-minimum": "partial",
                                        "match-result": "partial"
                                      }
                                    ]
                                  },
                                  {
                                    "name": "address_postal_code",
                                    "match-result": "full",
                                    "status": "passed",
                                    "comparisons": [
                                      {
                                        "type": "string_difference",
                                        "match-level-minimum": "partial",
                                        "match-result": "full"
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "relationships": {
                          "inquiry": {
                            "data": {}
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/DefaultFields"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "checks": {
                                  "items": {
                                    "properties": {
                                      "metadata": {
                                        "properties": {
                                          "check-requirements": {
                                            "items": {
                                              "properties": {
                                                "comparisons": {
                                                  "items": {
                                                    "properties": {
                                                      "match-level-minimum": {
                                                        "examples": [
                                                          "partial"
                                                        ],
                                                        "type": "string"
                                                      },
                                                      "match-result": {
                                                        "examples": [
                                                          "partial"
                                                        ],
                                                        "type": "string"
                                                      },
                                                      "type": {
                                                        "examples": [
                                                          "string_similarity"
                                                        ],
                                                        "type": "string"
                                                      }
                                                    },
                                                    "type": "object"
                                                  },
                                                  "type": "array"
                                                },
                                                "match-result": {
                                                  "examples": [
                                                    "partial"
                                                  ],
                                                  "type": "string"
                                                },
                                                "name": {
                                                  "examples": [
                                                    "John"
                                                  ],
                                                  "type": "string"
                                                },
                                                "status": {
                                                  "examples": [
                                                    "passed"
                                                  ],
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "name": {
                                        "examples": [
                                          "database_standard_identity_comparison"
                                        ],
                                        "type": "string"
                                      },
                                      "reasons": {
                                        "items": {
                                          "examples": [
                                            "no_inquiry"
                                          ],
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "status": {
                                        "examples": [
                                          "not_applicable"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "completed-at": {
                                  "examples": [
                                    "2022-08-02T05:03:02.000Z"
                                  ],
                                  "type": "string"
                                },
                                "completed-at-ts": {
                                  "default": 0,
                                  "examples": [
                                    1659416582
                                  ],
                                  "type": "integer"
                                },
                                "country-code": {
                                  "examples": [
                                    "US"
                                  ],
                                  "type": "string"
                                },
                                "created-at": {
                                  "examples": [
                                    "2022-08-02T05:02:56.000Z"
                                  ],
                                  "type": "string"
                                },
                                "created-at-ts": {
                                  "default": 0,
                                  "examples": [
                                    1659416576
                                  ],
                                  "type": "integer"
                                },
                                "normalized-address-city": {
                                  "examples": [
                                    "Los Angeles"
                                  ],
                                  "type": "string"
                                },
                                "normalized-address-postal-code": {
                                  "examples": [
                                    "55555"
                                  ],
                                  "type": "string"
                                },
                                "normalized-address-street-1": {
                                  "examples": [
                                    "555 Beverly Hills"
                                  ],
                                  "type": "string"
                                },
                                "normalized-address-street-2": {
                                  "examples": [
                                    "Apt 123"
                                  ],
                                  "type": "string"
                                },
                                "normalized-address-subdivision": {
                                  "examples": [
                                    "CA"
                                  ],
                                  "type": "string"
                                },
                                "status": {
                                  "examples": [
                                    "passed"
                                  ],
                                  "type": "string"
                                },
                                "submitted-at": {
                                  "examples": [
                                    "2022-08-02T05:03:02.000Z"
                                  ],
                                  "type": "string"
                                },
                                "submitted-at-ts": {
                                  "default": 0,
                                  "examples": [
                                    1659416582
                                  ],
                                  "type": "integer"
                                }
                              }
                            }
                          ]
                        },
                        "id": {
                          "examples": [
                            "ver_1rWMmoV3hoy2qWv3wGPcH43c"
                          ],
                          "type": "string"
                        },
                        "relationships": {
                          "properties": {
                            "inquiry": {
                              "properties": {
                                "data": {
                                  "properties": {
                                    "id": {
                                      "examples": [
                                        "inq_Dj1JxEG9K153GbvFYGScCRlL"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "examples": [
                            "verification/database-standard"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Retrieve a Database Standard Verification",
        "tags": [
          "Database Standard Verifications"
        ]
      }
    },
    "/verification/database-standards/{verification-id}/submit": {
      "post": {
        "description": "Submit a database verification for processing. Can only submit `initiated` verifications",
        "operationId": "submit-a-database-standard-verification",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "ID of Verification to submit",
            "in": "path",
            "name": "verification-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "verification/database-standard",
                        "id": "ver_6hhbmCZyhrhTjqHVwwP66QGe",
                        "attributes": {
                          "status": "submitted",
                          "created-at": "2022-08-02T05:02:56.000Z",
                          "created-at-ts": 1659416576,
                          "submitted-at": "2022-08-02T05:03:02.000Z",
                          "submitted-at-ts": 1659416582,
                          "completed-at": null,
                          "completed-at-ts": null,
                          "country-code": "US",
                          "name-first": "ALEXANDER",
                          "name-middle": null,
                          "checks": []
                        },
                        "relationships": {
                          "inquiry": {
                            "data": {}
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "checks": {
                              "type": "array"
                            },
                            "completed-at": {},
                            "completed-at-ts": {},
                            "country-code": {
                              "examples": [
                                "US"
                              ],
                              "type": "string"
                            },
                            "created-at": {
                              "examples": [
                                "2022-08-02T05:02:56.000Z"
                              ],
                              "type": "string"
                            },
                            "created-at-ts": {
                              "default": 0,
                              "examples": [
                                1659416576
                              ],
                              "type": "integer"
                            },
                            "name-first": {
                              "examples": [
                                "ALEXANDER"
                              ],
                              "type": "string"
                            },
                            "name-middle": {},
                            "status": {
                              "examples": [
                                "submitted"
                              ],
                              "type": "string"
                            },
                            "submitted-at": {
                              "examples": [
                                "2022-08-02T05:03:02.000Z"
                              ],
                              "type": "string"
                            },
                            "submitted-at-ts": {
                              "default": 0,
                              "examples": [
                                1659416582
                              ],
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "ver_6hhbmCZyhrhTjqHVwwP66QGe"
                          ],
                          "type": "string"
                        },
                        "relationships": {
                          "properties": {
                            "inquiry": {
                              "properties": {
                                "data": {
                                  "properties": {
                                    "id": {
                                      "examples": [
                                        "inq_Dj1JxEG9K153GbvFYGScCRlL"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "examples": [
                            "verification/database-standard"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Submit a Database Standard Verification",
        "tags": [
          "Database Standard Verifications"
        ]
      }
    },
    "/verification/database-tins": {
      "post": {
        "description": "Create a new TIN database verification",
        "operationId": "create-a-tin-database-verification",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "properties": {
                          "name-business": {
                            "description": "Corporate name",
                            "type": "string"
                          },
                          "name-first": {
                            "description": "First name of the individual",
                            "type": "string"
                          },
                          "name-last": {
                            "description": "Last name of the individual",
                            "type": "string"
                          },
                          "tin": {
                            "description": "US Taxpayer Identification Number",
                            "type": "string"
                          },
                          "verification-template-id": {
                            "description": "ID of Verification Template. You can find your Verification Template IDs [here](https://app.withpersona.com/dashboard/verification-templates?filter=%7B%22type%22%3A%5B%22verification-template%2Fdatabase-tin\"%5D%7D)",
                            "type": "string"
                          }
                        },
                        "required": [
                          "verification-template-id",
                          "tin"
                        ],
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "value": {
                      "data": {
                        "type": "verification/database-tin",
                        "id": "ver_2wpqiEtejRcTA1hMJEXmbrJ6",
                        "attributes": {
                          "status": "initiated",
                          "created-at": "2022-08-03T04:11:32.000Z",
                          "created-at-ts": 1659499892,
                          "submitted-at": null,
                          "submitted-at-ts": null,
                          "completed-at": null,
                          "completed-at-ts": null,
                          "country-code": "US",
                          "name-first": "ALEXANDER",
                          "checks": []
                        },
                        "relationships": {
                          "inquiry": {
                            "data": null
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "checks": {
                              "type": "array"
                            },
                            "completed-at": {},
                            "completed-at-ts": {},
                            "country-code": {
                              "examples": [
                                "US"
                              ],
                              "type": "string"
                            },
                            "created-at": {
                              "examples": [
                                "2022-08-03T04:11:32.000Z"
                              ],
                              "type": "string"
                            },
                            "created-at-ts": {
                              "default": 0,
                              "examples": [
                                1659499892
                              ],
                              "type": "integer"
                            },
                            "name-first": {
                              "examples": [
                                "ALEXANDER"
                              ],
                              "type": "string"
                            },
                            "status": {
                              "examples": [
                                "initiated"
                              ],
                              "type": "string"
                            },
                            "submitted-at": {},
                            "submitted-at-ts": {}
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "ver_2wpqiEtejRcTA1hMJEXmbrJ6"
                          ],
                          "type": "string"
                        },
                        "relationships": {
                          "properties": {
                            "inquiry": {
                              "properties": {
                                "data": {}
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "examples": [
                            "verification/database-tin"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Create a TIN Database Verification",
        "tags": [
          "TIN Database Verifications"
        ]
      }
    },
    "/verification/database-tins/{verification-id}": {
      "get": {
        "description": "Retrieve a TIN database verification",
        "operationId": "retrieve-a-tin-database-verification",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "ID of Verification to retrieve",
            "in": "path",
            "name": "verification-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "verification/database-tin",
                        "id": "ver_2wpqiEtejRcTA1hMJEXmbrJ6",
                        "attributes": {
                          "status": "passed",
                          "created-at": "2022-08-03T04:11:32.000Z",
                          "created-at-ts": 1659499892,
                          "submitted-at": "2022-08-03T04:13:00.000Z",
                          "submitted-at-ts": 1659499980,
                          "completed-at": "2022-08-03T04:13:06.000Z",
                          "completed-at-ts": 1659499986,
                          "country-code": "US",
                          "name-first": "ALEXANDER",
                          "checks": [
                            {
                              "name": "database_tin_name_comparison",
                              "status": "passed",
                              "reasons": [],
                              "metadata": {}
                            },
                            {
                              "name": "database_tin_deceased_detection",
                              "status": "passed",
                              "reasons": [],
                              "metadata": {}
                            },
                            {
                              "name": "database_tin_invalid_format_detection",
                              "status": "passed",
                              "reasons": [],
                              "metadata": {}
                            },
                            {
                              "name": "database_tin_disallowed_type_detection",
                              "status": "passed",
                              "reasons": [],
                              "metadata": {}
                            },
                            {
                              "name": "database_tin_service_available_detection",
                              "status": "passed",
                              "reasons": [],
                              "metadata": {}
                            }
                          ]
                        },
                        "relationships": {
                          "inquiry": {
                            "data": null
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "checks": {
                              "items": {
                                "properties": {
                                  "metadata": {
                                    "properties": {},
                                    "type": "object"
                                  },
                                  "name": {
                                    "examples": [
                                      "database_tin_name_comparison"
                                    ],
                                    "type": "string"
                                  },
                                  "reasons": {
                                    "type": "array"
                                  },
                                  "status": {
                                    "examples": [
                                      "passed"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "completed-at": {
                              "examples": [
                                "2022-08-03T04:13:06.000Z"
                              ],
                              "type": "string"
                            },
                            "completed-at-ts": {
                              "default": 0,
                              "examples": [
                                1659499986
                              ],
                              "type": "integer"
                            },
                            "country-code": {
                              "examples": [
                                "US"
                              ],
                              "type": "string"
                            },
                            "created-at": {
                              "examples": [
                                "2022-08-03T04:11:32.000Z"
                              ],
                              "type": "string"
                            },
                            "created-at-ts": {
                              "default": 0,
                              "examples": [
                                1659499892
                              ],
                              "type": "integer"
                            },
                            "name-first": {
                              "examples": [
                                "ALEXANDER"
                              ],
                              "type": "string"
                            },
                            "status": {
                              "examples": [
                                "passed"
                              ],
                              "type": "string"
                            },
                            "submitted-at": {
                              "examples": [
                                "2022-08-03T04:13:00.000Z"
                              ],
                              "type": "string"
                            },
                            "submitted-at-ts": {
                              "default": 0,
                              "examples": [
                                1659499980
                              ],
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "ver_2wpqiEtejRcTA1hMJEXmbrJ6"
                          ],
                          "type": "string"
                        },
                        "relationships": {
                          "properties": {
                            "inquiry": {
                              "properties": {
                                "data": {}
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "examples": [
                            "verification/database-tin"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Retrieve a TIN Database Verification",
        "tags": [
          "TIN Database Verifications"
        ]
      }
    },
    "/verification/database-tins/{verification-id}/submit": {
      "post": {
        "description": "Submit a TIN database verification for processing. Can only submit `initiated` verifications",
        "operationId": "submit-a-tin-database-verification",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "ID of Verification to submit",
            "in": "path",
            "name": "verification-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "verification/database-tin",
                        "id": "ver_2wpqiEtejRcTA1hMJEXmbrJ6",
                        "attributes": {
                          "status": "submitted",
                          "created-at": "2022-08-03T04:11:32.000Z",
                          "created-at-ts": 1659499892,
                          "submitted-at": "2022-08-03T04:13:00.000Z",
                          "submitted-at-ts": 1659499980,
                          "completed-at": null,
                          "completed-at-ts": null,
                          "country-code": "US",
                          "name-first": "ALEXANDER",
                          "checks": []
                        },
                        "relationships": {
                          "inquiry": {
                            "data": null
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "checks": {
                              "type": "array"
                            },
                            "completed-at": {},
                            "completed-at-ts": {},
                            "country-code": {
                              "examples": [
                                "US"
                              ],
                              "type": "string"
                            },
                            "created-at": {
                              "examples": [
                                "2022-08-03T04:11:32.000Z"
                              ],
                              "type": "string"
                            },
                            "created-at-ts": {
                              "default": 0,
                              "examples": [
                                1659499892
                              ],
                              "type": "integer"
                            },
                            "name-first": {
                              "examples": [
                                "ALEXANDER"
                              ],
                              "type": "string"
                            },
                            "status": {
                              "examples": [
                                "submitted"
                              ],
                              "type": "string"
                            },
                            "submitted-at": {
                              "examples": [
                                "2022-08-03T04:13:00.000Z"
                              ],
                              "type": "string"
                            },
                            "submitted-at-ts": {
                              "default": 0,
                              "examples": [
                                1659499980
                              ],
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "ver_2wpqiEtejRcTA1hMJEXmbrJ6"
                          ],
                          "type": "string"
                        },
                        "relationships": {
                          "properties": {
                            "inquiry": {
                              "properties": {
                                "data": {}
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "examples": [
                            "verification/database-tin"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Submit a TIN Database Verification",
        "tags": [
          "TIN Database Verifications"
        ]
      }
    },
    "/verification/databases": {
      "post": {
        "description": "Create a new database verification",
        "operationId": "create-a-database-verification",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/DefaultFields"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "country-code": {
                                "description": "Country of residence for the individual",
                                "type": "string"
                              },
                              "identification-number": {
                                "description": "Unique ID number of the individual",
                                "type": "string"
                              },
                              "verification-template-id": {
                                "description": "ID of Verification Template. You can find your Verification Template IDs [here](https://app.withpersona.com/dashboard/verification-templates?filter=%7B%22type%22%3A%5B%22verification-template%2Fdatabase\"%5D%7D)",
                                "type": "string"
                              }
                            }
                          }
                        ],
                        "required": [
                          "verification-template-id",
                          "country-code"
                        ]
                      }
                    },
                    "type": "object"
                  }
                },
                "required": [
                  "data"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "$ref": "#/components/examples/VerificationDatabaseResponse"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/VerificationDatabase"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Create a Database Verification",
        "tags": [
          "Database Verifications"
        ]
      }
    },
    "/verification/databases/{verification-id}": {
      "get": {
        "description": "Retrieve a database verification",
        "operationId": "retrieve-a-database-verification",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "ID of Verification to retrieve",
            "in": "path",
            "name": "verification-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "$ref": "#/components/examples/VerificationDatabaseResponse"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/VerificationDatabase"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Retrieve a Database Verification",
        "tags": [
          "Database Verifications"
        ]
      }
    },
    "/verification/databases/{verification-id}/submit": {
      "post": {
        "description": "Submit a database verification for processing. Can only submit `initiated` verifications",
        "operationId": "submit-a-database-verification",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "ID of Verification to submit",
            "in": "path",
            "name": "verification-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "$ref": "#/components/examples/VerificationDatabaseResponse"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/VerificationDatabase"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Submit a Database Verification",
        "tags": [
          "Database Verifications"
        ]
      }
    },
    "/verification/documents": {
      "post": {
        "description": "Create a verification of a generic document.",
        "operationId": "create-a-document-verification",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "properties": {
                          "document-id": {
                            "description": "ID of the document to verify. The document is an object of type document/generic.",
                            "type": "string"
                          },
                          "inquiry-id": {
                            "description": "ID of the associated inquiry the verification is being created for.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "document-id"
                        ],
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "required": [
                  "data"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "$ref": "#/components/examples/VerificationDocumentResponse"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/VerificationDocument"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Create a Document Verification",
        "tags": [
          "Document Verifications"
        ]
      }
    },
    "/verification/documents/{verification-id}": {
      "get": {
        "description": "Retrieve the details of a specific document verification",
        "operationId": "retrieve-a-document-verification",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "verification-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "$ref": "#/components/examples/VerificationDocumentResponse"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/VerificationDocument"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Retrieve a Document Verification",
        "tags": [
          "Document Verifications"
        ]
      }
    },
    "/verification/documents/{verification-id}/submit": {
      "post": {
        "description": "Submit a document verification for processing. Can only submit `initiated` verifications.",
        "operationId": "submit-a-document-verification",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "verification-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "$ref": "#/components/examples/VerificationDocumentSubmittedResponse"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/VerificationDocument"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Submit a Document Verification",
        "tags": [
          "Document Verifications"
        ]
      }
    },
    "/verification/email-addresses/{verification-id}": {
      "get": {
        "description": "Retrieve a email address verification",
        "operationId": "retrieve-a-email-address-verification",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "ID of Verification to retrieve",
            "in": "path",
            "name": "verification-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "$ref": "#/components/examples/VerificationEmailAddressResponse"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/VerificationEmailAddress"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Retrieve a Email Address Verification",
        "tags": [
          "Email Address Verifications"
        ]
      }
    },
    "/verification/email-addresses": {
      "post": {
        "description": "Create a new email address verification",
        "operationId": "create-an-email-address-verification",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "properties": {
                          "email-address": {
                            "description": "Claimed email address of the individual to send the confirmation code to",
                            "type": "string"
                          },
                          "verification-template-id": {
                            "description": "ID of Verification Template. You can find your Verification Template IDs [here](https://app.withpersona.com/dashboard/verification-templates?filter=%7B%22type%22%3A%5B%22verification-template%2Femail_address\"%5D%7D)",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "required": [
                  "data"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "$ref": "#/components/examples/VerificationEmailAddressResponse"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/VerificationEmailAddress"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Create an Email Address Verification",
        "tags": [
          "Email Address Verifications"
        ]
      }
    },
    "/verification/email-addresses/{verification-id}/confirm": {
      "post": {
        "description": "Confirm the confirmation code sent to the email address. Can only confirm `initiated` verifications.",
        "operationId": "confirm-an-email-address-verification",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "ID of Verification to confirm",
            "in": "path",
            "name": "verification-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "properties": {
                          "confirmation-code": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "confirmation-code"
                        ],
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "required": [
                  "data"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "$ref": "#/components/examples/VerificationEmailAddressResponse"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/VerificationEmailAddress"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Confirm an Email Address Verification",
        "tags": [
          "Email Address Verifications"
        ]
      }
    },
    "/verification/email-addresses/{verification-id}/send-confirmation-code": {
      "post": {
        "description": "Send an email to the email address.",
        "operationId": "send-an-email",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "ID of Verification to confirm",
            "in": "path",
            "name": "verification-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "properties": {
                          "email-address": {
                            "description": "Optional email address parameter to send confirmation code to an alternate email address",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "$ref": "#/components/examples/VerificationEmailAddressResponse"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/VerificationEmailAddress"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Send an email",
        "tags": [
          "Email Address Verifications"
        ]
      }
    },
    "/verification/government-ids": {
      "post": {
        "description": "Create a new government ID verification",
        "operationId": "create-a-gov-id-verification",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "properties": {
                          "back-photo": {
                            "description": "Back of ID.",
                            "properties": {
                              "data": {
                                "description": "Government ID photo data, must be images. Can provide more than one image and we will pick the best for processing. Can also be provided as uploaded file(s) such as with multipart/form-data requests instead of this object(s). Images must be between 10KB and 15MB.",
                                "properties": {
                                  "data": {
                                    "description": "Base64 encoded file.",
                                    "format": "binary",
                                    "type": "string"
                                  },
                                  "filename": {
                                    "description": "Name of file.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "data",
                                  "filename"
                                ],
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "country-code": {
                            "description": "ISO 3166-1 alpha-2 code of the ID’s issuing country.",
                            "type": "string"
                          },
                          "front-photo": {
                            "description": "Front of ID.",
                            "properties": {
                              "data": {
                                "description": "Government ID photo data, must be images. Can provide more than one image and we will pick the best for processing. Can also be provided as uploaded file(s) such as with multipart/form-data requests instead of this object(s). Images must be between 10KB and 15MB.",
                                "properties": {
                                  "data": {
                                    "description": "Base64 encoded file.",
                                    "format": "binary",
                                    "type": "string"
                                  },
                                  "filename": {
                                    "description": "Name of file.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "data",
                                  "filename"
                                ],
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "selected-id-class": {
                            "description": "ID class of the input government ID.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "verification-template-id": {
                            "description": "ID of Verification Template. You can find your Verification Template IDs [here](https://app.withpersona.com/dashboard/verification-templates?filter=%7B%22type%22%3A%5B%22verification-template%2Fgovernment-id%22%5D%7D)",
                            "type": "string"
                          }
                        },
                        "required": [
                          "verification-template-id"
                        ],
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "required": [
                  "data"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "value": {
                      "data": {
                        "type": "verification/government-id",
                        "id": "ver_rYJDSAT7BNJhVW8cz4fqEfHP",
                        "attributes": {
                          "status": "initiated",
                          "created-at": "2022-07-28T16:55:44.000Z",
                          "created-at-ts": 1659027344,
                          "submitted-at": null,
                          "submitted-at-ts": null,
                          "completed-at": null,
                          "completed-at-ts": null,
                          "country-code": "US",
                          "entity-confidence-score": null,
                          "entity-confidence-reasons": [
                            "generic"
                          ],
                          "front-photo-url": null,
                          "back-photo-url": null,
                          "photo-urls": null,
                          "selfie-photo-url": null,
                          "id-class": null,
                          "capture-method": "api",
                          "name-first": null,
                          "name-middle": null,
                          "name-last": null,
                          "vehicle-class": null,
                          "checks": []
                        },
                        "relationships": {
                          "inquiry": {
                            "data": null
                          },
                          "document": {
                            "data": {
                              "type": "document/government-id",
                              "id": "doc_QZ8M2J1fH2o76Rq57vuVWMsE"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "back-photo-url": {},
                            "capture-method": {
                              "examples": [
                                "api"
                              ],
                              "type": "string"
                            },
                            "checks": {
                              "type": "array"
                            },
                            "completed-at": {},
                            "completed-at-ts": {},
                            "country-code": {
                              "examples": [
                                "US"
                              ],
                              "type": "string"
                            },
                            "created-at": {
                              "examples": [
                                "2022-07-28T16:55:44.000Z"
                              ],
                              "type": "string"
                            },
                            "created-at-ts": {
                              "default": 0,
                              "examples": [
                                1659027344
                              ],
                              "type": "integer"
                            },
                            "entity-confidence-reasons": {
                              "items": {
                                "examples": [
                                  "generic"
                                ],
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "entity-confidence-score": {},
                            "front-photo-url": {},
                            "id-class": {},
                            "name-first": {},
                            "name-middle": {},
                            "name-last": {},
                            "photo-urls": {},
                            "selfie-photo-url": {},
                            "status": {
                              "examples": [
                                "initiated"
                              ],
                              "type": "string"
                            },
                            "submitted-at": {},
                            "submitted-at-ts": {},
                            "vehicle-class": {}
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "ver_rYJDSAT7BNJhVW8cz4fqEfHP"
                          ],
                          "type": "string"
                        },
                        "relationships": {
                          "properties": {
                            "document": {
                              "properties": {
                                "data": {
                                  "properties": {
                                    "id": {
                                      "examples": [
                                        "doc_QZ8M2J1fH2o76Rq57vuVWMsE"
                                      ],
                                      "type": "string"
                                    },
                                    "type": {
                                      "examples": [
                                        "document/government-id"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "inquiry": {
                              "properties": {
                                "data": {}
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "examples": [
                            "verification/government-id"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Create a Government ID Verification",
        "tags": [
          "Government ID Verifications"
        ]
      }
    },
    "/verification/government-ids/{verification-id}": {
      "get": {
        "description": "Retrieve a government ID verification",
        "operationId": "retrieve-a-government-id-verification",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "verification-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "verification/government-id",
                        "id": "ver_Ra6LFdoQmPFJH27gonC3cChh",
                        "attributes": {
                          "status": "passed",
                          "created-at": "2022-07-28T16:55:44.000Z",
                          "created-at-ts": 1659027344,
                          "submitted-at": "2022-07-28T20:47:06.000Z",
                          "submitted-at-ts": 1659041226,
                          "completed-at": "2022-07-28T20:47:12.000Z",
                          "completed-at-ts": 1659041232,
                          "country-code": "US",
                          "entity-confidence-score": 100,
                          "entity-confidence-reasons": [
                            "generic"
                          ],
                          "front-photo-url": "https://files.withpersona.com/...",
                          "back-photo-url": "https://files.withpersona.com/...",
                          "photo-urls": [
                            {
                              "page": "front",
                              "url": "https://files.withpersona.com/...",
                              "normalized-url": "https://files.withpersona.com/...",
                              "original-urls": [
                                "https://files.withpersona.com/..."
                              ],
                              "byte-size": 316802
                            }
                          ],
                          "selfie-photo": {
                            "url": "https://files.withpersona.com/...",
                            "byte-size": 316802
                          },
                          "selfie-photo-url": "https://files.withpersona.com/...",
                          "video-url": null,
                          "id-class": "dl",
                          "capture-method": "api",
                          "name-first": "ALEXANDER",
                          "name-middle": "AL",
                          "name-last": "SAMPLE",
                          "name-suffix": "III",
                          "birthdate": "2000-01-01",
                          "address-street-1": "1 Dr Carlton B Goodlett Pl",
                          "address-street-2": "",
                          "address-city": "San Francisco",
                          "address-subdivision": "CA",
                          "address-postal-code": "94102",
                          "issuing-authority": "",
                          "issuing-subdivision": "CA",
                          "nationality": "US",
                          "document-number": "123456",
                          "visa-status": null,
                          "issue-date": "2010-01-01",
                          "expiration-date": "2020-01-01",
                          "designations": [],
                          "birthplace": "",
                          "height": "5'2\"",
                          "sex": "M",
                          "vehicle-class": "CM1",
                          "checks": [
                            {
                              "name": "id_account_comparison",
                              "status": "not_applicable",
                              "reasons": [
                                "no_account"
                              ],
                              "metadata": {}
                            },
                            {
                              "name": "id_inquiry_comparison",
                              "status": "not_applicable",
                              "reasons": [
                                "no_inquiry"
                              ],
                              "metadata": {}
                            },
                            {
                              "name": "id_compromised_detection",
                              "status": "passed",
                              "reasons": [],
                              "metadata": {}
                            },
                            {
                              "name": "id_po_box_detection",
                              "status": "passed",
                              "reasons": [],
                              "metadata": {}
                            },
                            {
                              "name": "id_extracted_properties_detection",
                              "status": "not_applicable",
                              "reasons": [
                                "no_required_properties"
                              ],
                              "metadata": {}
                            },
                            {
                              "name": "id_barcode_detection",
                              "status": "failed",
                              "reasons": [
                                "back_missing"
                              ],
                              "metadata": {}
                            },
                            {
                              "name": "id_disallowed_country_detection",
                              "status": "passed",
                              "reasons": [],
                              "metadata": {
                                "country-code": "JP",
                                "selected-country-code": "JP"
                              }
                            },
                            {
                              "name": "id_expired_detection",
                              "status": "passed",
                              "reasons": [],
                              "metadata": {}
                            },
                            {
                              "name": "id_unprocessable_submission_detection",
                              "status": "passed",
                              "reasons": [],
                              "metadata": {}
                            },
                            {
                              "name": "id_disallowed_type_detection",
                              "status": "passed",
                              "reasons": [],
                              "metadata": {
                                "country-code": "JP",
                                "detected-id-class": "dl",
                                "detected-id-designations": [
                                  "work_not_permitted"
                                ],
                                "disallowed-id-designations": [],
                                "selected-id-classes": [
                                  "dl"
                                ]
                              }
                            },
                            {
                              "name": "id_electronic_replica_detection",
                              "status": "passed",
                              "reasons": [],
                              "metadata": {}
                            },
                            {
                              "name": "id_age_comparison",
                              "status": "not_applicable",
                              "reasons": [
                                "no_configuration"
                              ],
                              "metadata": {}
                            },
                            {
                              "name": "id_real_id_detection",
                              "status": "not_applicable",
                              "reasons": [
                                "no_barcode"
                              ],
                              "metadata": {}
                            },
                            {
                              "name": "id_barcode_inconsistency_detection",
                              "status": "not_applicable",
                              "reasons": [
                                "barcode_not_detected"
                              ],
                              "metadata": {}
                            },
                            {
                              "name": "id_extraction_inconsistency_detection",
                              "status": "not_applicable",
                              "reasons": [
                                "missing_properties"
                              ],
                              "metadata": {
                                "check-requirements": [
                                  {
                                    "status": "failed",
                                    "description": "First Name",
                                    "attributes": [
                                      "name_first"
                                    ],
                                    "values": {
                                      "extracted": "William",
                                      "claimed": "ALEXANDER"
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "name": "id_blur_detection",
                              "status": "passed",
                              "reasons": [],
                              "metadata": {}
                            },
                            {
                              "name": "id_double_side_detection",
                              "status": "passed",
                              "reasons": [],
                              "metadata": {}
                            },
                            {
                              "name": "id_color_inconsistency_detection",
                              "status": "passed",
                              "reasons": [],
                              "metadata": {}
                            },
                            {
                              "name": "id_valid_dates_detection",
                              "status": "passed",
                              "reasons": [],
                              "metadata": {}
                            },
                            {
                              "name": "id_handwriting_detection",
                              "status": "passed",
                              "reasons": [],
                              "metadata": {}
                            },
                            {
                              "name": "id_tamper_detection",
                              "status": "passed",
                              "reasons": [],
                              "metadata": {}
                            },
                            {
                              "name": "id_glare_detection",
                              "status": "passed",
                              "reasons": [],
                              "metadata": {}
                            },
                            {
                              "name": "id_mrz_detection",
                              "status": "not_applicable",
                              "reasons": [],
                              "metadata": {}
                            },
                            {
                              "name": "id_mrz_inconsistency_detection",
                              "status": "not_applicable",
                              "reasons": [
                                "mrz_not_found"
                              ],
                              "metadata": {}
                            },
                            {
                              "name": "id_selfie_comparison",
                              "status": "not_applicable",
                              "reasons": [
                                "no_selfie"
                              ],
                              "metadata": {}
                            },
                            {
                              "name": "id_repeat_detection",
                              "status": "not_applicable",
                              "reasons": [
                                "not_enabled"
                              ],
                              "metadata": {}
                            },
                            {
                              "name": "id_inconsistent_repeat_detection",
                              "status": "not_applicable",
                              "reasons": [
                                "not_enabled"
                              ],
                              "metadata": {}
                            },
                            {
                              "name": "id_entity_detection",
                              "status": "passed",
                              "reasons": [],
                              "metadata": {}
                            },
                            {
                              "name": "id_age_inconsistency_detection",
                              "status": "passed",
                              "reasons": [],
                              "metadata": {}
                            },
                            {
                              "name": "id_portrait_clarity_detection",
                              "status": "passed",
                              "reasons": [],
                              "metadata": {}
                            },
                            {
                              "name": "id_portrait_detection",
                              "status": "passed",
                              "reasons": [],
                              "metadata": {}
                            },
                            {
                              "name": "id_public_figure_detection",
                              "status": "passed",
                              "reasons": [],
                              "metadata": {}
                            }
                          ]
                        },
                        "relationships": {
                          "inquiry": {
                            "data": null
                          },
                          "document": {
                            "data": {
                              "type": "document/government-id",
                              "id": "doc_QZ8M2J1fH2o76Rq57vuVWMsE"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/AddressFields"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "back-photo-url": {
                                  "examples": [
                                    "https://files.withpersona.com/..."
                                  ],
                                  "type": "string"
                                },
                                "birthdate": {
                                  "examples": [
                                    "2000-01-01"
                                  ],
                                  "type": "string"
                                },
                                "birthplace": {
                                  "examples": [
                                    "Singapore"
                                  ],
                                  "type": "string"
                                },
                                "capture-method": {
                                  "examples": [
                                    "api"
                                  ],
                                  "type": "string"
                                },
                                "checks": {
                                  "items": {
                                    "properties": {
                                      "metadata": {
                                        "additionalProperties": true,
                                        "type": "object"
                                      },
                                      "name": {
                                        "examples": [
                                          "id_account_comparison"
                                        ],
                                        "type": "string"
                                      },
                                      "reasons": {
                                        "items": {
                                          "examples": [
                                            "no_account"
                                          ],
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "status": {
                                        "examples": [
                                          "not_applicable"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "completed-at": {
                                  "examples": [
                                    "2022-07-28T20:47:12.000Z"
                                  ],
                                  "type": "string"
                                },
                                "completed-at-ts": {
                                  "default": 0,
                                  "examples": [
                                    1659041232
                                  ],
                                  "type": "integer"
                                },
                                "country-code": {
                                  "examples": [
                                    "US"
                                  ],
                                  "type": "string"
                                },
                                "created-at": {
                                  "examples": [
                                    "2022-07-28T16:55:44.000Z"
                                  ],
                                  "type": "string"
                                },
                                "created-at-ts": {
                                  "default": 0,
                                  "examples": [
                                    1659027344
                                  ],
                                  "type": "integer"
                                },
                                "designations": {
                                  "examples": [
                                    [
                                      "probationary"
                                    ]
                                  ],
                                  "type": "array"
                                },
                                "document-number": {
                                  "examples": [
                                    "123456"
                                  ],
                                  "type": "string"
                                },
                                "entity-confidence-reasons": {
                                  "items": {
                                    "examples": [
                                      "generic"
                                    ],
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "entity-confidence-score": {
                                  "default": 0,
                                  "examples": [
                                    100
                                  ],
                                  "type": "integer"
                                },
                                "expiration-date": {
                                  "examples": [
                                    "2020-01-01"
                                  ],
                                  "type": "string"
                                },
                                "front-photo-url": {
                                  "examples": [
                                    "https://files.withpersona.com/..."
                                  ],
                                  "type": "string"
                                },
                                "height": {
                                  "examples": [
                                    "6'1\""
                                  ],
                                  "type": "string"
                                },
                                "id-class": {
                                  "examples": [
                                    "dl"
                                  ],
                                  "type": "string"
                                },
                                "identification-number": {
                                  "examples": [
                                    "123456"
                                  ],
                                  "type": "string"
                                },
                                "issue-date": {
                                  "examples": [
                                    "2010-01-01"
                                  ],
                                  "type": "string"
                                },
                                "issuing-authority": {
                                  "examples": [
                                    "State Department"
                                  ],
                                  "type": "string"
                                },
                                "issuing-subdivision": {
                                  "examples": [
                                    "CA"
                                  ],
                                  "type": "string"
                                },
                                "name-first": {
                                  "examples": [
                                    "ALEXANDER"
                                  ],
                                  "type": "string"
                                },
                                "name-middle": {
                                  "examples": [
                                    "AL"
                                  ],
                                  "type": "string"
                                },
                                "name-last": {
                                  "examples": [
                                    "SAMPLE"
                                  ],
                                  "type": "string"
                                },
                                "name-suffix": {
                                  "examples": [
                                    "III"
                                  ],
                                  "type": "string"
                                },
                                "nationality": {
                                  "examples": [
                                    "US"
                                  ],
                                  "type": "string"
                                },
                                "photo-urls": {
                                  "items": {
                                    "properties": {
                                      "byte-size": {
                                        "default": 0,
                                        "examples": [
                                          316802
                                        ],
                                        "type": "integer"
                                      },
                                      "normalized-url": {
                                        "examples": [
                                          "https://files.withpersona.com/..."
                                        ],
                                        "type": "string"
                                      },
                                      "original-urls": {
                                        "items": {
                                          "examples": [
                                            "https://files.withpersona.com/..."
                                          ],
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "page": {
                                        "examples": [
                                          "front"
                                        ],
                                        "type": "string"
                                      },
                                      "url": {
                                        "examples": [
                                          "https://files.withpersona.com/..."
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "selfie-photo": {
                                  "properties": {
                                    "byte-size": {
                                      "default": 0,
                                      "examples": [
                                        316802
                                      ],
                                      "type": "integer"
                                    },
                                    "url": {
                                      "examples": [
                                        "https://files.withpersona.com/..."
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "selfie-photo-url": {
                                  "examples": [
                                    "https://files.withpersona.com/..."
                                  ],
                                  "type": "string"
                                },
                                "sex": {
                                  "examples": [
                                    "F"
                                  ],
                                  "type": "string",
                                  "enum": [
                                    "M",
                                    "F",
                                    "X"
                                  ]
                                },
                                "status": {
                                  "examples": [
                                    "passed"
                                  ],
                                  "type": "string"
                                },
                                "submitted-at": {
                                  "examples": [
                                    "2022-07-28T20:47:06.000Z"
                                  ],
                                  "type": "string"
                                },
                                "submitted-at-ts": {
                                  "default": 0,
                                  "examples": [
                                    1659041226
                                  ],
                                  "type": "integer"
                                },
                                "vehicle-class": {
                                  "examples": [
                                    "C"
                                  ],
                                  "type": "string"
                                },
                                "video-url": {},
                                "visa-status": {}
                              }
                            }
                          ]
                        },
                        "id": {
                          "examples": [
                            "ver_Ra6LFdoQmPFJH27gonC3cChh"
                          ],
                          "type": "string"
                        },
                        "relationships": {
                          "properties": {
                            "document": {
                              "properties": {
                                "data": {
                                  "properties": {
                                    "id": {
                                      "examples": [
                                        "doc_QZ8M2J1fH2o76Rq57vuVWMsE"
                                      ],
                                      "type": "string"
                                    },
                                    "type": {
                                      "examples": [
                                        "document/government-id"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "inquiry": {
                              "properties": {
                                "data": {}
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "examples": [
                            "verification/government-id"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Retrieve a Government Id Verification",
        "tags": [
          "Government ID Verifications"
        ]
      },
      "patch": {
        "description": "Updates an existing government ID verification. Can only update `initiated` verifications.",
        "operationId": "update-a-government-id-verification",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "verification-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "properties": {
                          "back-photo": {
                            "description": "Back of ID.",
                            "properties": {
                              "data": {
                                "description": "Government ID photo data, must be images. Can provide more than one image and we will pick the best for processing. Can also be provided as uploaded file(s) such as with multipart/form-data requests instead of this object(s). Images must be between 10KB and 15MB.",
                                "properties": {
                                  "data": {
                                    "description": "Base64 encoded file.",
                                    "format": "binary",
                                    "type": "string"
                                  },
                                  "filename": {
                                    "description": "Name of file.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "data",
                                  "filename"
                                ],
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "front-photo": {
                            "description": "Front of ID.",
                            "properties": {
                              "data": {
                                "description": "Government ID photo data, must be images. Can provide more than one image and we will pick the best for processing. Can also be provided as uploaded file(s) such as with multipart/form-data requests instead of this object(s). Images must be between 10KB and 15MB.",
                                "properties": {
                                  "data": {
                                    "description": "Base64 encoded file.",
                                    "format": "binary",
                                    "type": "string"
                                  },
                                  "filename": {
                                    "description": "Name of file.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "data",
                                  "filename"
                                ],
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "selected-id-class": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "required": [
                  "data"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "verification/government-id",
                        "id": "ver_X5mC6bFdeyzofECAbw2kM00b",
                        "attributes": {
                          "status": "initiated",
                          "created-at": "2020-09-13T05:20:25.000Z",
                          "created-at-ts": 1599974425,
                          "submitted-at": null,
                          "submitted-at-ts": null,
                          "completed-at": null,
                          "completed-at-ts": null,
                          "country-code": "US",
                          "entity-confidence-score": null,
                          "entity-confidence-reasons": null,
                          "front-photo-url": null,
                          "back-photo-url": null,
                          "photo-urls": null,
                          "selfie-photo-url": null,
                          "id-class": null,
                          "capture-method": null,
                          "name-middle": null,
                          "name-last": null,
                          "birthdate": null,
                          "address-street-1": null,
                          "address-street-2": null,
                          "address-city": null,
                          "address-subdivision": null,
                          "address-postal-code": null,
                          "vehicle-class": null,
                          "checks": []
                        },
                        "relationships": {
                          "inquiry": {
                            "data": {
                              "type": "inquiry",
                              "id": "inq_Hn1JxEG9K153GbvFYGScCRxX"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/AddressFields"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "back-photo-url": {},
                                "birthdate": {},
                                "capture-method": {},
                                "checks": {
                                  "type": "array"
                                },
                                "completed-at": {},
                                "completed-at-ts": {},
                                "country-code": {
                                  "examples": [
                                    "US"
                                  ],
                                  "type": "string"
                                },
                                "created-at": {
                                  "examples": [
                                    "2020-09-13T05:20:25.000Z"
                                  ],
                                  "type": "string"
                                },
                                "created-at-ts": {
                                  "default": 0,
                                  "examples": [
                                    1599974425
                                  ],
                                  "type": "integer"
                                },
                                "entity-confidence-reasons": {},
                                "entity-confidence-score": {},
                                "front-photo-url": {},
                                "id-class": {},
                                "name-last": {},
                                "name-middle": {},
                                "photo-urls": {},
                                "selfie-photo-url": {},
                                "status": {
                                  "examples": [
                                    "initiated"
                                  ],
                                  "type": "string"
                                },
                                "submitted-at": {},
                                "submitted-at-ts": {},
                                "vehicle-class": {}
                              }
                            }
                          ]
                        },
                        "id": {
                          "examples": [
                            "ver_X5mC6bFdeyzofECAbw2kM00b"
                          ],
                          "type": "string"
                        },
                        "relationships": {
                          "properties": {
                            "inquiry": {
                              "properties": {
                                "data": {
                                  "properties": {
                                    "id": {
                                      "examples": [
                                        "inq_Hn1JxEG9K153GbvFYGScCRxX"
                                      ],
                                      "type": "string"
                                    },
                                    "type": {
                                      "examples": [
                                        "inquiry"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "examples": [
                            "verification/government-id"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Update a Government ID Verification",
        "tags": [
          "Government ID Verifications"
        ]
      }
    },
    "/verification/government-ids/{verification-id}/submit": {
      "post": {
        "description": "Submit a government ID verification for processing. Can only submit `initiated` verifications with photos of the ID attached.",
        "operationId": "submit-a-government-id-verification",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "ID of Verification to submit",
            "in": "path",
            "name": "verification-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "verification/government-id",
                        "id": "ver_rYJDSAT7BNJhVW8cz4fqEfHP",
                        "attributes": {
                          "status": "submitted",
                          "created-at": "2022-07-28T16:55:44.000Z",
                          "created-at-ts": 1659027344,
                          "submitted-at": "2022-07-28T20:47:06.000Z",
                          "submitted-at-ts": 1659041226,
                          "completed-at": null,
                          "completed-at-ts": null,
                          "country-code": "US",
                          "entity-confidence-score": null,
                          "entity-confidence-reasons": [
                            "generic"
                          ],
                          "front-photo-url": null,
                          "back-photo-url": null,
                          "photo-urls": null,
                          "selfie-photo-url": null,
                          "id-class": null,
                          "capture-method": "api",
                          "name-first": null,
                          "name-middle": null,
                          "vehicle-class": null,
                          "checks": []
                        },
                        "relationships": {
                          "inquiry": {
                            "data": null
                          },
                          "document": {
                            "data": {
                              "type": "document/government-id",
                              "id": "doc_QZ8M2J1fH2o76Rq57vuVWMsE"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "back-photo-url": {},
                            "capture-method": {
                              "examples": [
                                "api"
                              ],
                              "type": "string"
                            },
                            "checks": {
                              "type": "array"
                            },
                            "completed-at": {},
                            "completed-at-ts": {},
                            "country-code": {
                              "examples": [
                                "US"
                              ],
                              "type": "string"
                            },
                            "created-at": {
                              "examples": [
                                "2022-07-28T16:55:44.000Z"
                              ],
                              "type": "string"
                            },
                            "created-at-ts": {
                              "default": 0,
                              "examples": [
                                1659027344
                              ],
                              "type": "integer"
                            },
                            "entity-confidence-reasons": {
                              "items": {
                                "examples": [
                                  "generic"
                                ],
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "entity-confidence-score": {},
                            "front-photo-url": {},
                            "id-class": {},
                            "name-first": {},
                            "name-middle": {},
                            "name-last": {},
                            "photo-urls": {},
                            "selfie-photo-url": {},
                            "status": {
                              "examples": [
                                "submitted"
                              ],
                              "type": "string"
                            },
                            "submitted-at": {
                              "examples": [
                                "2022-07-28T20:47:06.000Z"
                              ],
                              "type": "string"
                            },
                            "submitted-at-ts": {
                              "default": 0,
                              "examples": [
                                1659041226
                              ],
                              "type": "integer"
                            },
                            "vehicle-class": {}
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "ver_rYJDSAT7BNJhVW8cz4fqEfHP"
                          ],
                          "type": "string"
                        },
                        "relationships": {
                          "properties": {
                            "document": {
                              "properties": {
                                "data": {
                                  "properties": {
                                    "id": {
                                      "examples": [
                                        "doc_QZ8M2J1fH2o76Rq57vuVWMsE"
                                      ],
                                      "type": "string"
                                    },
                                    "type": {
                                      "examples": [
                                        "document/government-id"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "inquiry": {
                              "properties": {
                                "data": {}
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "examples": [
                            "verification/government-id"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Submit a Government ID Verification",
        "tags": [
          "Government ID Verifications"
        ]
      }
    },
    "/verification/government-id-nfcs/{verification-id}": {
      "get": {
        "description": "Retrieve a Government ID NFC verification",
        "operationId": "retrieve-a-government-id-nfc-verification",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "verification-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "verification/government-id-nfc",
                        "id": "ver_Ra6LFdoQmPFJH27gonC3cChh",
                        "attributes": {
                          "status": "passed",
                          "created-at": "2022-07-28T16:55:44.000Z",
                          "created-at-ts": 1659027344,
                          "submitted-at": "2022-07-28T20:47:06.000Z",
                          "submitted-at-ts": 1659041226,
                          "completed-at": "2022-07-28T20:47:12.000Z",
                          "completed-at-ts": 1659041232,
                          "birthdate": "1994-12-30",
                          "country-code": "UT",
                          "expiration-date": "2022-12-30",
                          "identification-number": "L898902C3",
                          "id-class": "pp",
                          "name-first": "ANNA MARIA",
                          "name-last": "SAMPLE",
                          "sex": "F",
                          "selfie-photo": {
                            "url": "https://files.withpersona.com/...",
                            "byte-size": 1000
                          },
                          "checks": [
                            {
                              "name": "id_nfc_expired_detection",
                              "status": "failed",
                              "reasons": [
                                "expired"
                              ],
                              "metadata": {}
                            }
                          ]
                        },
                        "relationships": {
                          "inquiry": {
                            "data": null
                          },
                          "document": {
                            "data": {
                              "type": "document/government-id-nfc",
                              "id": "doc_QZ8M2J1fH2o76Rq57vuVWMsE"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "birthdate": {
                              "examples": [
                                "2000-01-01"
                              ],
                              "type": "string"
                            },
                            "checks": {
                              "items": {
                                "properties": {
                                  "metadata": {
                                    "additionalProperties": true,
                                    "type": "object"
                                  },
                                  "name": {
                                    "examples": [
                                      "id_nfc_expired_detection"
                                    ],
                                    "type": "string"
                                  },
                                  "reasons": {
                                    "items": {
                                      "examples": [
                                        "expired"
                                      ],
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "status": {
                                    "examples": [
                                      "failed"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "completed-at": {
                              "examples": [
                                "2022-07-28T20:47:12.000Z"
                              ],
                              "type": "string"
                            },
                            "completed-at-ts": {
                              "default": 0,
                              "examples": [
                                1659041232
                              ],
                              "type": "integer"
                            },
                            "country-code": {
                              "examples": [
                                "US"
                              ],
                              "type": "string"
                            },
                            "created-at": {
                              "examples": [
                                "2022-07-28T16:55:44.000Z"
                              ],
                              "type": "string"
                            },
                            "created-at-ts": {
                              "default": 0,
                              "examples": [
                                1659027344
                              ],
                              "type": "integer"
                            },
                            "expiration-date": {
                              "examples": [
                                "2000-01-01"
                              ],
                              "type": "string"
                            },
                            "id-class": {
                              "examples": [
                                "dl"
                              ],
                              "type": "string"
                            },
                            "identification-number": {
                              "examples": [
                                "P123456AA"
                              ],
                              "type": "string"
                            },
                            "name-first": {
                              "examples": [
                                "ALEXANDER"
                              ],
                              "type": "string"
                            },
                            "name-last": {
                              "examples": [
                                "SAMPLE"
                              ],
                              "type": "string"
                            },
                            "selfie-photo": {
                              "properties": {
                                "byte-size": {
                                  "default": 0,
                                  "examples": [
                                    316802
                                  ],
                                  "type": "integer"
                                },
                                "url": {
                                  "examples": [
                                    "https://files.withpersona.com/..."
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "restrictions": {},
                            "sex": {
                              "examples": [
                                "M"
                              ],
                              "type": "string",
                              "enum": [
                                "M",
                                "F",
                                "X"
                              ]
                            },
                            "status": {
                              "examples": [
                                "passed"
                              ],
                              "type": "string"
                            },
                            "submitted-at": {
                              "examples": [
                                "2022-07-28T20:47:06.000Z"
                              ],
                              "type": "string"
                            },
                            "submitted-at-ts": {
                              "default": 0,
                              "examples": [
                                1659041226
                              ],
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "ver_Ra6LFdoQmPFJH27gonC3cChh"
                          ],
                          "type": "string"
                        },
                        "relationships": {
                          "properties": {
                            "document": {
                              "properties": {
                                "data": {
                                  "properties": {
                                    "id": {
                                      "examples": [
                                        "doc_QZ8M2J1fH2o76Rq57vuVWMsE"
                                      ],
                                      "type": "string"
                                    },
                                    "type": {
                                      "examples": [
                                        "document/government-id-nfc"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "inquiry": {
                              "properties": {
                                "data": {}
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "examples": [
                            "verification/government-id-nfc"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Retrieve a Government Id NFC Verification",
        "tags": [
          "Government ID NFC Verifications"
        ]
      }
    },
    "/verification/phone-numbers": {
      "post": {
        "description": "Create a new phone number verification",
        "operationId": "create-a-phone-number-verification",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "properties": {
                          "country-code": {
                            "description": "ISO 3166-1 alpha-2 code of the phone number",
                            "type": "string"
                          },
                          "phone-number": {
                            "description": "Claimed phone number of the individual to send the confirmation code to",
                            "type": "string"
                          },
                          "verification-template-id": {
                            "description": "ID of Verification Template. You can find your Verification Template IDs [here](https://app.withpersona.com/dashboard/verification-templates?filter=%7B%22type%22%3A%5B%22verification-template%2Fphone-number\"%5D%7D)",
                            "type": "string"
                          }
                        },
                        "required": [
                          "verification-template-id",
                          "phone-number",
                          "country-code"
                        ],
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "required": [
                  "data"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "$ref": "#/components/examples/VerificationPhoneNumberResponse"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/VerificationPhoneNumber"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Create a Phone Number Verification",
        "tags": [
          "Phone Number Verifications"
        ]
      }
    },
    "/verification/phone-numbers/{verification-id}": {
      "get": {
        "description": "Retrieve a phone number verification",
        "operationId": "retrieve-a-phone-number-verification",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "ID of Verification to retrieve",
            "in": "path",
            "name": "verification-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "$ref": "#/components/examples/VerificationPhoneNumberResponse"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/VerificationPhoneNumber"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Retrieve a Phone Number Verification",
        "tags": [
          "Phone Number Verifications"
        ]
      }
    },
    "/verification/phone-numbers/{verification-id}/confirm": {
      "post": {
        "description": "Confirm the confirmation code sent to the phone number. Can only confirm `initiated` verifications.",
        "operationId": "confirm-a-phone-number-verification",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "ID of Verification to confirm",
            "in": "path",
            "name": "verification-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "properties": {
                          "confirmation-code": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "confirmation-code"
                        ],
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "required": [
                  "data"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "$ref": "#/components/examples/VerificationPhoneNumberResponse"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/VerificationPhoneNumber"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Confirm a Phone Number Verification",
        "tags": [
          "Phone Number Verifications"
        ]
      }
    },
    "/verification/phone-numbers/{verification-id}/send-confirmation-code": {
      "post": {
        "description": "Send an SMS to the phone number.",
        "operationId": "send-an-sms",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "ID of Verification to confirm",
            "in": "path",
            "name": "verification-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "properties": {
                          "phone-number": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "$ref": "#/components/examples/VerificationPhoneNumberResponse"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/VerificationPhoneNumber"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Send an SMS",
        "tags": [
          "Phone Number Verifications"
        ]
      }
    },
    "/verification/selfies": {
      "post": {
        "description": "Create a new selfie verification",
        "operationId": "create-a-selfie-verification",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "properties": {
                          "center-photo": {
                            "description": "Selfie photo of the center profile",
                            "properties": {
                              "data": {
                                "properties": {
                                  "data": {
                                    "description": "Base64 encoded file.",
                                    "format": "binary",
                                    "type": "string"
                                  },
                                  "filename": {
                                    "description": "Name of file.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "data",
                                  "filename"
                                ],
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "left-photo": {
                            "description": "Selfie photo of the left profile",
                            "properties": {
                              "data": {
                                "properties": {
                                  "data": {
                                    "description": "Base64 encoded file.",
                                    "format": "binary",
                                    "type": "string"
                                  },
                                  "filename": {
                                    "description": "Name of file.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "data",
                                  "filename"
                                ],
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "right-photo": {
                            "description": "Selfie photo of the right profile",
                            "properties": {
                              "data": {
                                "properties": {
                                  "data": {
                                    "description": "Base64 encoded file.",
                                    "format": "binary",
                                    "type": "string"
                                  },
                                  "filename": {
                                    "description": "Name of file.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "data",
                                  "filename"
                                ],
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "verification-template-id": {
                            "description": "ID of Verification Template. You can find your Verification Template IDs [here](https://app.withpersona.com/dashboard/verification-templates?filter=%7B%22type%22%3A%5B%22verification-template%2Fselfie\"%5D%7D)",
                            "type": "string"
                          }
                        },
                        "required": [
                          "verification-template-id"
                        ],
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "required": [
                  "data"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "value": {
                      "data": {
                        "type": "verification/selfie",
                        "id": "ver_dCvHHPUHxvb5j2iYKfjwafBU",
                        "attributes": {
                          "status": "initiated",
                          "created-at": "2022-07-28T21:10:33.000Z",
                          "created-at-ts": 1659042633,
                          "submitted-at": null,
                          "submitted-at-ts": null,
                          "completed-at": null,
                          "completed-at-ts": null,
                          "country-code": null,
                          "entity-confidence-reasons": [],
                          "document-similarity-score": null,
                          "selfie-similarity-score-left": null,
                          "selfie-similarity-score-right": null,
                          "checks": [],
                          "capture-method": null
                        },
                        "relationships": {
                          "inquiry": {
                            "data": null
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "capture-method": {},
                            "checks": {
                              "type": "array"
                            },
                            "completed-at": {},
                            "completed-at-ts": {},
                            "country-code": {},
                            "created-at": {
                              "examples": [
                                "2022-07-28T21:10:33.000Z"
                              ],
                              "type": "string"
                            },
                            "created-at-ts": {
                              "default": 0,
                              "examples": [
                                1659042633
                              ],
                              "type": "integer"
                            },
                            "document-similarity-score": {},
                            "entity-confidence-reasons": {
                              "type": "array"
                            },
                            "selfie-similarity-score-left": {},
                            "selfie-similarity-score-right": {},
                            "status": {
                              "examples": [
                                "initiated"
                              ],
                              "type": "string"
                            },
                            "submitted-at": {},
                            "submitted-at-ts": {}
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "ver_dCvHHPUHxvb5j2iYKfjwafBU"
                          ],
                          "type": "string"
                        },
                        "relationships": {
                          "properties": {
                            "inquiry": {
                              "properties": {
                                "data": {}
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "examples": [
                            "verification/selfie"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Create a Selfie Verification",
        "tags": [
          "Selfie Verifications"
        ]
      }
    },
    "/verification/selfies/{verification-id}": {
      "get": {
        "description": "Retrieve a selfie ID verification",
        "operationId": "retrieve-a-selfie-verification",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "verification-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "verification/selfie",
                        "id": "ver_dCvHHPUHxvb5j2iYKfjwafBU",
                        "attributes": {
                          "status": "passed",
                          "created-at": "2022-07-28T21:54:23.000Z",
                          "created-at-ts": 1659045263,
                          "submitted-at": "2022-07-28T21:54:29.000Z",
                          "submitted-at-ts": 1659045269,
                          "completed-at": "2022-07-28T21:54:33.000Z",
                          "completed-at-ts": 1659045273,
                          "country-code": null,
                          "entity-confidence-reasons": [],
                          "document-similarity-score": null,
                          "selfie-similarity-score-left": 100,
                          "selfie-similarity-score-right": 100,
                          "checks": [
                            {
                              "name": "selfie_id_comparison",
                              "status": "not_applicable",
                              "reasons": [
                                "no_government_id"
                              ],
                              "metadata": {}
                            },
                            {
                              "name": "selfie_pose_detection",
                              "status": "passed",
                              "reasons": [],
                              "metadata": {}
                            },
                            {
                              "name": "selfie_multiple_faces_detection",
                              "status": "passed",
                              "reasons": [],
                              "metadata": {}
                            },
                            {
                              "name": "selfie_pose_repeat_detection",
                              "status": "passed",
                              "reasons": [],
                              "metadata": {}
                            },
                            {
                              "name": "selfie_account_comparison",
                              "status": "not_applicable",
                              "reasons": [
                                "no_account_selfie_present"
                              ],
                              "metadata": {}
                            },
                            {
                              "name": "selfie_suspicious_entity_detection",
                              "status": "passed",
                              "reasons": [],
                              "metadata": {}
                            },
                            {
                              "name": "selfie_liveness_detection",
                              "status": "passed",
                              "reasons": [],
                              "metadata": {}
                            },
                            {
                              "name": "selfie_glasses_detection",
                              "status": "passed",
                              "reasons": [],
                              "metadata": {}
                            },
                            {
                              "name": "selfie_glare_detection",
                              "status": "failed",
                              "reasons": [
                                "too_much_glare"
                              ],
                              "metadata": {}
                            },
                            {
                              "name": "selfie_public_figure_detection",
                              "status": "passed",
                              "reasons": [],
                              "metadata": {}
                            },
                            {
                              "name": "selfie_age_comparison",
                              "status": "not_applicable",
                              "reasons": [
                                "no_reference_birthdate"
                              ],
                              "metadata": {}
                            },
                            {
                              "name": "selfie_face_covering_detection",
                              "status": "passed",
                              "reasons": [],
                              "metadata": {}
                            }
                          ],
                          "capture-method": "photo"
                        },
                        "relationships": {
                          "inquiry": {
                            "data": null
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "capture-method": {
                              "examples": [
                                "photo"
                              ],
                              "type": "string"
                            },
                            "checks": {
                              "items": {
                                "properties": {
                                  "metadata": {
                                    "properties": {},
                                    "type": "object"
                                  },
                                  "name": {
                                    "examples": [
                                      "selfie_id_comparison"
                                    ],
                                    "type": "string"
                                  },
                                  "reasons": {
                                    "items": {
                                      "examples": [
                                        "no_government_id"
                                      ],
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "status": {
                                    "examples": [
                                      "not_applicable"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "completed-at": {
                              "examples": [
                                "2022-07-28T21:54:33.000Z"
                              ],
                              "type": "string"
                            },
                            "completed-at-ts": {
                              "default": 0,
                              "examples": [
                                1659045273
                              ],
                              "type": "integer"
                            },
                            "country-code": {},
                            "created-at": {
                              "examples": [
                                "2022-07-28T21:54:23.000Z"
                              ],
                              "type": "string"
                            },
                            "created-at-ts": {
                              "default": 0,
                              "examples": [
                                1659045263
                              ],
                              "type": "integer"
                            },
                            "document-similarity-score": {},
                            "entity-confidence-reasons": {
                              "type": "array"
                            },
                            "selfie-similarity-score-left": {
                              "default": 0,
                              "examples": [
                                100
                              ],
                              "type": "integer"
                            },
                            "selfie-similarity-score-right": {
                              "default": 0,
                              "examples": [
                                100
                              ],
                              "type": "integer"
                            },
                            "status": {
                              "examples": [
                                "passed"
                              ],
                              "type": "string"
                            },
                            "submitted-at": {
                              "examples": [
                                "2022-07-28T21:54:29.000Z"
                              ],
                              "type": "string"
                            },
                            "submitted-at-ts": {
                              "default": 0,
                              "examples": [
                                1659045269
                              ],
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "ver_dCvHHPUHxvb5j2iYKfjwafBU"
                          ],
                          "type": "string"
                        },
                        "relationships": {
                          "properties": {
                            "inquiry": {
                              "properties": {
                                "data": {}
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "examples": [
                            "verification/selfie"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Retrieve a Selfie Verification",
        "tags": [
          "Selfie Verifications"
        ]
      }
    },
    "/verification/selfies/{verification-id}/submit": {
      "post": {
        "description": "Submit a selfie verification for processing. Can only submit `initiated` verifications",
        "operationId": "submit-a-selfie-verification",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "verification-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "verification/selfie",
                        "id": "ver_dCvHHPUHxvb5j2iYKfjwafBU",
                        "attributes": {
                          "status": "submitted",
                          "created-at": "2022-07-28T21:54:23.000Z",
                          "created-at-ts": 1659045263,
                          "submitted-at": "2022-07-28T21:54:29.000Z",
                          "submitted-at-ts": 1659045269,
                          "completed-at": null,
                          "completed-at-ts": null,
                          "country-code": null,
                          "entity-confidence-reasons": [],
                          "document-similarity-score": null,
                          "selfie-similarity-score-left": null,
                          "selfie-similarity-score-right": null,
                          "checks": [],
                          "capture-method": "photo"
                        },
                        "relationships": {
                          "inquiry": {
                            "data": null
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "capture-method": {
                              "examples": [
                                "photo"
                              ],
                              "type": "string"
                            },
                            "checks": {
                              "type": "array"
                            },
                            "completed-at": {},
                            "completed-at-ts": {},
                            "country-code": {},
                            "created-at": {
                              "examples": [
                                "2022-07-28T21:54:23.000Z"
                              ],
                              "type": "string"
                            },
                            "created-at-ts": {
                              "default": 0,
                              "examples": [
                                1659045263
                              ],
                              "type": "integer"
                            },
                            "document-similarity-score": {},
                            "entity-confidence-reasons": {
                              "type": "array"
                            },
                            "selfie-similarity-score-left": {},
                            "selfie-similarity-score-right": {},
                            "status": {
                              "examples": [
                                "submitted"
                              ],
                              "type": "string"
                            },
                            "submitted-at": {
                              "examples": [
                                "2022-07-28T21:54:29.000Z"
                              ],
                              "type": "string"
                            },
                            "submitted-at-ts": {
                              "default": 0,
                              "examples": [
                                1659045269
                              ],
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "ver_dCvHHPUHxvb5j2iYKfjwafBU"
                          ],
                          "type": "string"
                        },
                        "relationships": {
                          "properties": {
                            "inquiry": {
                              "properties": {
                                "data": {}
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "examples": [
                            "verification/selfie"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Submit a Selfie Verification",
        "tags": [
          "Selfie Verifications"
        ]
      }
    },
    "/verifications/{verification-id}": {
      "get": {
        "description": "Retrieve the details of a specific Verification",
        "operationId": "retrieve-a-verification",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "verification-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Verification"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Retrieve a Verification",
        "tags": [
          "Verifications"
        ]
      },
      "delete": {
        "description": "Permanently deletes personally identifiable information (PII) for a Verification. This action cannot be undone. This endpoint can be used to comply with privacy regulations such as GDPR / CCPA or to enforce data privacy.",
        "operationId": "redact-a-verification",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "name": "verification-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "verification/government-id",
                        "id": "ver_7f6w4qu7KK7gjjtgp7nAixHd",
                        "attributes": {
                          "status": "passed",
                          "created-at": "2019-11-15T21:24:24.000Z",
                          "completed-at": null,
                          "country-code": null,
                          "entity-confidence-score": null,
                          "entity-confidence-reasons": [],
                          "front-photo-url": null,
                          "back-photo-url": null,
                          "selfie-photo-url": null,
                          "id-class": null,
                          "capture-method": null,
                          "name-first": null,
                          "name-middle": null,
                          "name-last": null,
                          "birthdate": null,
                          "address-street-1": null,
                          "address-street-2": null,
                          "address-city": null,
                          "address-subdivision": null,
                          "address-postal-code": null,
                          "issuing-authority": null,
                          "issue-date": null,
                          "expiration-date": null,
                          "sex": null,
                          "height": null,
                          "endorsements": null,
                          "restrictions": null,
                          "vehicle-class": null,
                          "identification-number": null,
                          "checks": []
                        },
                        "relationships": {
                          "inquiry": {
                            "data": null
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Redact a Verification",
        "tags": [
          "Verifications"
        ]
      }
    },
    "/verifications/{verification-id}/print": {
      "get": {
        "description": "Prints a verification in PDF format.",
        "operationId": "print-a-verification-as-pdf",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "verification-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Print Verification PDF",
        "tags": [
          "Verifications"
        ]
      }
    },
    "/webhooks": {
      "get": {
        "description": "Returns a list of your environment's webhooks.",
        "operationId": "list-all-webhooks",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "in": "query",
            "name": "page",
            "style": "deepObject",
            "allowReserved": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/NestedPaginationQueryParams"
                },
                {
                  "type": "object",
                  "properties": {
                    "after": {
                      "example": "wbh_ABC123"
                    },
                    "before": {
                      "example": "wbh_ABC123"
                    }
                  }
                }
              ]
            }
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": [
                        {
                          "type": "webhook",
                          "id": "wbh_ABC123",
                          "attributes": {
                            "status": "disabled",
                            "url": "https://withpersona.com",
                            "api-version": "2023-01-05",
                            "api-key-inflection": "kebab",
                            "api-attributes-blocklist": [
                              "address-*",
                              "name-last",
                              "/data/attributes/fields/*-number"
                            ],
                            "file-access-token-expires-in": 21600,
                            "enabled-events": [
                              "account.created",
                              "verification.created"
                            ],
                            "payload-filter": {
                              "data": {
                                "relationships": {
                                  "inquiry-template": {
                                    "data": {
                                      "id": "itmpl_abc123def456"
                                    }
                                  }
                                }
                              }
                            },
                            "created-at": "2023-08-17T23:18:13.000Z"
                          }
                        },
                        {
                          "type": "webhook",
                          "id": "wbh_ABC123",
                          "attributes": {
                            "status": "disabled",
                            "url": "https://withpersona.com",
                            "api-version": "2023-01-05",
                            "api-key-inflection": "camel",
                            "api-attributes-blocklist": [
                              "/data/attributes/fields/*-number"
                            ],
                            "file-access-token-expires-in": 600,
                            "enabled-events": [
                              "*"
                            ],
                            "payload-filter": {},
                            "created-at": "2023-09-18T23:18:13.000Z"
                          }
                        }
                      ],
                      "links": {
                        "prev": null,
                        "next": null
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/Webhook"
                      },
                      "type": "array",
                      "description": "An array of Webhooks"
                    },
                    "links": {
                      "properties": {
                        "next": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "prev": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "List all Webhooks",
        "tags": [
          "Webhooks"
        ]
      },
      "post": {
        "description": "Make a new Webhook with response defaults.",
        "operationId": "create-a-webhook",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/WebhookCreateRequest"
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "Created",
                    "$ref": "#/components/examples/WebhookResponseCreated"
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/WebhookWithSecret"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Create a Webhook",
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/webhooks/{webhook-id}": {
      "get": {
        "description": "Get the information for a specific webhook, including it's secret.",
        "operationId": "retrieve-a-webhook",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "Webhook's ID (starts with \"wbh_\")",
            "in": "path",
            "name": "webhook-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "$ref": "#/components/examples/WebhookResponseCreated"
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/WebhookWithSecret"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Retrieve a Webhook",
        "tags": [
          "Webhooks"
        ]
      },
      "patch": {
        "description": "Updates an existing Webhook.",
        "operationId": "update-a-webhook",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "Webhook's ID (starts with \"wbh_\")",
            "in": "path",
            "name": "webhook-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/WebhookUpdateRequest"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "$ref": "#/components/examples/WebhookResponseDisabled"
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Webhook"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Update a Webhook",
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/webhooks/{webhook-id}/archive": {
      "post": {
        "description": "Archive a webhook",
        "operationId": "archive-a-webhook",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "Webhook's ID (starts with \"wbh_\")",
            "in": "path",
            "name": "webhook-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "$ref": "#/components/examples/WebhookResponseArchived"
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Webhook"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Archive a Webhook",
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/webhooks/{webhook-id}/enable": {
      "post": {
        "description": "Enable a webhook",
        "operationId": "enable-a-webhook",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "Webhook's ID (starts with \"wbh_\")",
            "in": "path",
            "name": "webhook-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "$ref": "#/components/examples/WebhookResponseEnabled"
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Webhook"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Enable a Webhook",
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/webhooks/{webhook-id}/disable": {
      "post": {
        "description": "Disable a webhook",
        "operationId": "disable-a-webhook",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "Webhook's ID (starts with \"wbh_\")",
            "in": "path",
            "name": "webhook-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "$ref": "#/components/examples/WebhookResponseDisabled"
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Webhook"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Disable a Webhook",
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/webhooks/{webhook-id}/rotate_secret": {
      "post": {
        "description": "Rotate a webhook's secret",
        "operationId": "rotate-a-webhook-secret",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "description": "Webhook's ID (starts with \"wbh_\")",
            "in": "path",
            "name": "webhook-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "meta": {
                    "type": "object",
                    "properties": {
                      "expires-in-seconds": {
                        "description": "Seconds until currently active webhook expires",
                        "example": 7200,
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "$ref": "#/components/examples/WebhookResponseCreated"
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/WebhookWithSecret"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Rotate a Webhook Secret",
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/workflows/{workflow-id}/trigger": {
      "post": {
        "description": "Create a new Workflow Run.\n\nNote: The payload is arbitrary and defined by the Workflow version trigger schema.",
        "operationId": "create-a-workflow-run",
        "parameters": [
          {
            "$ref": "#/components/parameters/keyInflectionHeader"
          },
          {
            "$ref": "#/components/parameters/idempotencyKeyHeader"
          },
          {
            "$ref": "#/components/parameters/personaVersionHeader"
          },
          {
            "$ref": "#/components/parameters/includeQueryParameter"
          },
          {
            "name": "workflow-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "description": "Matches the trigger payload schema defined by the Workflow version",
                    "properties": {
                      "attributes": {
                        "description": "Matches the trigger payload schema defined by the workflow version",
                        "properties": {
                          "example-field-1": {
                            "description": "This is just an example field name. The actual name will depend on the trigger schema defined for the workflow version.",
                            "type": "string"
                          },
                          "example-field-2": {
                            "description": "This is just an example field name. The actual name will depend on the trigger schema defined for the workflow version.",
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "summary": "OK",
                    "value": {
                      "data": {
                        "type": "workflow-run",
                        "id": "wfr_3JqAR9ddLRVZLK5z4yD8oeHB",
                        "attributes": {
                          "status": "in_progress",
                          "created-at": "2022-08-08T18:55:44.910Z",
                          "completed-at": null
                        },
                        "relationships": {
                          "workflow-version": {
                            "data": {
                              "type": "workflow-version",
                              "id": "wfv_DkWeGvK9wojQnubF8ABHzJRQ"
                            }
                          },
                          "workflow": {
                            "data": {
                              "type": "workflow",
                              "id": "wfl_3VghhbvDc7UuUNT8uZrqZjsk"
                            }
                          },
                          "creator": {
                            "data": null
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "properties": {
                            "completed-at": {},
                            "created-at": {
                              "examples": [
                                "2022-08-08T18:55:44.910Z"
                              ],
                              "type": "string"
                            },
                            "status": {
                              "examples": [
                                "in_progress"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "examples": [
                            "wfr_3JqAR9ddLRVZLK5z4yD8oeHB"
                          ],
                          "type": "string"
                        },
                        "relationships": {
                          "properties": {
                            "creator": {
                              "properties": {
                                "data": {}
                              },
                              "type": "object"
                            },
                            "workflow": {
                              "properties": {
                                "data": {
                                  "properties": {
                                    "id": {
                                      "examples": [
                                        "wfl_3VghhbvDc7UuUNT8uZrqZjsk"
                                      ],
                                      "type": "string"
                                    },
                                    "type": {
                                      "examples": [
                                        "workflow"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "workflow-version": {
                              "properties": {
                                "data": {
                                  "properties": {
                                    "id": {
                                      "examples": [
                                        "wfv_DkWeGvK9wojQnubF8ABHzJRQ"
                                      ],
                                      "type": "string"
                                    },
                                    "type": {
                                      "examples": [
                                        "workflow-version"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "examples": [
                            "workflow-run"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        },
        "summary": "Create a Workflow Run",
        "tags": [
          "Workflows"
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "x-bearer-format": "bearer"
      }
    },
    "parameters": {
      "keyInflectionHeader": {
        "name": "Key-Inflection",
        "in": "header",
        "description": "Determines casing for the API response",
        "schema": {
          "type": "string",
          "enum": [
            "camel",
            "kebab",
            "snake"
          ]
        }
      },
      "idempotencyKeyHeader": {
        "name": "Idempotency-Key",
        "in": "header",
        "description": "Ensures the request is idempotent",
        "schema": {
          "type": "string"
        }
      },
      "personaVersionHeader": {
        "name": "Persona-Version",
        "in": "header",
        "schema": {
          "type": "string",
          "enum": [
            "2023-01-05"
          ],
          "default": "2023-01-05"
        }
      },
      "includeQueryParameter": {
        "in": "query",
        "name": "include",
        "description": "A comma-separated list of relationship paths. This can be used to customize which related resources will be fully serialized in the `included` key in the response. An empty value indicates that no related resources should be returned. If not provided, the default set of included relationships will be returned (for some APIs this may be none).",
        "schema": {
          "type": "string",
          "examples": [
            "sessions,account",
            "selfie.inquiry",
            "verifications",
            "verifications,selfie.inquiry,template"
          ]
        }
      }
    },
    "schemas": {
      "NestedPaginationQueryParams": {
        "type": "object",
        "properties": {
          "after": {
            "description": "Object ID for pagination cursor",
            "type": "string",
            "examples": [
              "obj_ABC123"
            ]
          },
          "before": {
            "description": "Object ID for pagination cursor",
            "examples": [
              "obj_ABC123"
            ],
            "type": "string"
          },
          "size": {
            "description": "Limit on the number of objects returned",
            "examples": [
              5
            ],
            "type": "number"
          }
        }
      },
      "AddressFields": {
        "properties": {
          "address-street-1": {
            "description": "Street name of residence address.",
            "examples": [
              "123 Main St"
            ],
            "type": [
              "string",
              "null"
            ]
          },
          "address-street-2": {
            "description": "Extension of residence address, usually apartment or suite number.",
            "examples": [
              "Apt 1"
            ],
            "type": [
              "string",
              "null"
            ]
          },
          "address-city": {
            "description": "City of residence address. Not all international addresses use this attribute.",
            "examples": [
              "San Francisco"
            ],
            "type": [
              "string",
              "null"
            ]
          },
          "address-subdivision": {
            "description": "State or subdivision of residence address. In the US, this should be the unabbreviated name. Not all international addresses use this attribute.",
            "examples": [
              "California"
            ],
            "type": [
              "string",
              "null"
            ]
          },
          "address-postal-code": {
            "description": "ZIP or postal code of residence address. Not all international addresses use this attribute.",
            "examples": [
              "94111"
            ],
            "type": [
              "string",
              "null"
            ]
          }
        },
        "type": "object"
      },
      "DefaultFields": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "birthdate": {
                "description": "Birthdate, must be in the format \"YYYY-MM-DD\".",
                "format": "date",
                "examples": [
                  "1994-04-12"
                ],
                "type": [
                  "string",
                  "null"
                ]
              },
              "name-first": {
                "description": "Given or first name.",
                "examples": [
                  "Jane"
                ],
                "type": [
                  "string",
                  "null"
                ]
              },
              "name-middle": {
                "description": "Middle name.",
                "examples": [
                  "Marie"
                ],
                "type": [
                  "string",
                  "null"
                ]
              },
              "name-last": {
                "description": "Family or last name.",
                "examples": [
                  "Doe"
                ],
                "type": [
                  "string",
                  "null"
                ]
              },
              "phone-number": {
                "description": "Phone number.",
                "examples": [
                  "415-555-1234"
                ],
                "type": [
                  "string",
                  "null"
                ]
              },
              "email-address": {
                "description": "Email address.",
                "examples": [
                  "jane@doe.com"
                ],
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          {
            "$ref": "#/components/schemas/AddressFields"
          }
        ]
      },
      "Account": {
        "type": "object",
        "description": "An Account object",
        "properties": {
          "type": {
            "type": "string",
            "examples": [
              "account"
            ]
          },
          "id": {
            "type": "string",
            "examples": [
              "act_hpNqyAbEG4HeVjZoBRNCMKkA"
            ]
          },
          "attributes": {
            "type": "object",
            "allOf": [
              {
                "properties": {
                  "reference-id": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "examples": [
                      "abc-123"
                    ]
                  },
                  "created-at": {
                    "format": "date-time",
                    "examples": [
                      "2020-04-12T05:08:51.000Z"
                    ],
                    "type": "string"
                  },
                  "updated-at": {
                    "format": "date-time",
                    "examples": [
                      "2020-04-13T00:23:57.000Z"
                    ],
                    "type": "string"
                  },
                  "redacted-at": {
                    "format": "date-time",
                    "examples": [
                      "2020-04-14T00:22:43.000Z"
                    ],
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "fields": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "examples": [
                              "hash"
                            ]
                          },
                          "value": {
                            "type": "object",
                            "properties": {
                              "first": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "examples": [
                                      "Jane"
                                    ]
                                  },
                                  "value": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                }
                              },
                              "middle": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "examples": [
                                      "Marie"
                                    ]
                                  },
                                  "value": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                }
                              },
                              "last": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "examples": [
                                      "Doe"
                                    ]
                                  },
                                  "value": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "address": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "examples": [
                              "hash"
                            ]
                          },
                          "value": {
                            "type": "object",
                            "properties": {
                              "street_1": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "examples": [
                                      "string"
                                    ]
                                  },
                                  "value": {
                                    "type": [
                                      "string",
                                      "null"
                                    ],
                                    "examples": [
                                      "123 Main St"
                                    ]
                                  }
                                }
                              },
                              "street_2": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "examples": [
                                      "string"
                                    ]
                                  },
                                  "value": {
                                    "type": [
                                      "string",
                                      "null"
                                    ],
                                    "examples": [
                                      "Apt 1"
                                    ]
                                  }
                                }
                              },
                              "subdivision": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "examples": [
                                      "string"
                                    ]
                                  },
                                  "value": {
                                    "type": [
                                      "string",
                                      "null"
                                    ],
                                    "examples": [
                                      "California"
                                    ]
                                  }
                                }
                              },
                              "city": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "examples": [
                                      "string"
                                    ]
                                  },
                                  "value": {
                                    "type": [
                                      "string",
                                      "null"
                                    ],
                                    "examples": [
                                      "San Francisco"
                                    ]
                                  }
                                }
                              },
                              "postal_code": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "examples": [
                                      "string"
                                    ]
                                  },
                                  "value": {
                                    "type": [
                                      "string",
                                      "null"
                                    ],
                                    "examples": [
                                      "94111"
                                    ]
                                  }
                                }
                              },
                              "country_code": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "examples": [
                                      "string"
                                    ]
                                  },
                                  "value": {
                                    "type": [
                                      "string",
                                      "null"
                                    ],
                                    "examples": [
                                      "US"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "identification_numbers": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "examples": [
                              "array"
                            ]
                          },
                          "value": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "examples": [
                                    "hash"
                                  ]
                                },
                                "value": {
                                  "type": "object",
                                  "properties": {
                                    "identification_class": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "examples": [
                                            "string"
                                          ]
                                        },
                                        "value": {
                                          "type": "string",
                                          "examples": [
                                            "visa",
                                            "cct"
                                          ]
                                        }
                                      }
                                    },
                                    "identification_number": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "examples": [
                                            "string"
                                          ]
                                        },
                                        "value": {
                                          "type": "string",
                                          "examples": [
                                            "12345678",
                                            "AB-12345678"
                                          ]
                                        }
                                      }
                                    },
                                    "issuing_country": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "examples": [
                                            "string"
                                          ]
                                        },
                                        "value": {
                                          "type": "string",
                                          "examples": [
                                            "US",
                                            "UK"
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "birthdate": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "examples": [
                              "date"
                            ]
                          },
                          "value": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "examples": [
                              "1994-04-12"
                            ]
                          }
                        }
                      },
                      "phone_number": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "examples": [
                              "string"
                            ]
                          },
                          "value": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "examples": [
                              "415-555-1234"
                            ]
                          }
                        }
                      },
                      "email_address": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "examples": [
                              "string"
                            ]
                          },
                          "value": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "examples": [
                              "jane@doe.com"
                            ]
                          }
                        }
                      },
                      "selfie_photo": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "format": "byte",
                            "examples": [
                              "file"
                            ]
                          },
                          "value": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    },
                    "additionalProperties": true
                  },
                  "tags": {
                    "type": "array"
                  },
                  "identification-numbers": {
                    "type": "object",
                    "description": "Keys will be the identification class",
                    "additionalProperties": {
                      "type": "array",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "issuing-country": {
                              "type": "string",
                              "examples": [
                                "US",
                                "UK"
                              ]
                            },
                            "identification-class": {
                              "type": "string",
                              "examples": [
                                "visa",
                                "cct"
                              ]
                            },
                            "identification-number": {
                              "type": "string",
                              "examples": [
                                "12345678",
                                "AB-12345678"
                              ]
                            },
                            "created-at": {
                              "type": "string",
                              "format": "date-time",
                              "examples": [
                                "2023-09-23T00:22:09.934Z"
                              ]
                            },
                            "updated-at": {
                              "type": "string",
                              "format": "date-time",
                              "examples": [
                                "2023-09-23T00:22:19.900Z"
                              ]
                            }
                          }
                        }
                      }
                    }
                  },
                  "country-code": {
                    "description": "ISO 3166-1 alpha 2 country code.",
                    "examples": [
                      "US"
                    ],
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "social-security-number": {
                    "description": "Social security number.",
                    "examples": [
                      "123-45-6789"
                    ],
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              },
              {
                "$ref": "#/components/schemas/DefaultFields"
              }
            ]
          }
        }
      },
      "ApiKey": {
        "type": "object",
        "description": "An API Key object",
        "properties": {
          "type": {
            "examples": [
              "api-key"
            ],
            "type": "string"
          },
          "id": {
            "examples": [
              "api_ABC123"
            ],
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "examples": [
                  "API Key 123"
                ]
              },
              "note": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "api-version": {
                "type": "string",
                "format": "date",
                "examples": [
                  "2023-01-05"
                ]
              },
              "api-key-inflection": {
                "type": "string",
                "examples": [
                  "kebab"
                ]
              },
              "api-attributes-blocklist": {
                "type": "array",
                "items": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "examples": [
                  [
                    "address-*",
                    "name-last",
                    "/data/attributes/fields/*-number"
                  ]
                ]
              },
              "permissions": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "examples": [
                  [
                    "account.read",
                    "inquiry.write"
                  ]
                ]
              },
              "ip-address-allowlist": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "examples": [
                  [
                    "*"
                  ],
                  [
                    "192.158.1.38",
                    "123.456.7.89"
                  ]
                ]
              },
              "file-access-token-expires-in": {
                "type": "integer",
                "format": "int32",
                "examples": [
                  21600
                ]
              },
              "last-used-at": {
                "type": [
                  "string",
                  "null"
                ],
                "examples": [
                  "2023-09-21T18:29:40.000Z"
                ]
              },
              "expires-at": {
                "type": [
                  "string",
                  "null"
                ],
                "examples": [
                  "2023-09-21T18:29:40.000Z"
                ]
              },
              "created-at": {
                "type": "string",
                "format": "date-time",
                "examples": [
                  "2023-09-21T18:29:40.000Z"
                ]
              }
            }
          }
        }
      },
      "ApiLog": {
        "type": "object",
        "description": "An API Log object",
        "properties": {
          "type": {
            "type": "string",
            "examples": [
              "api-log"
            ]
          },
          "id": {
            "type": "string",
            "examples": [
              "req_prM3gdSL6ciwGjSjj4aXgKJT"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "request": {
                "type": "object",
                "properties": {
                  "method": {
                    "type": "string",
                    "examples": [
                      "GET"
                    ]
                  },
                  "path": {
                    "type": "string",
                    "examples": [
                      "/api/v1/api-keys"
                    ]
                  },
                  "headers": {
                    "type": "object",
                    "properties": {
                      "Accept": {
                        "type": "string",
                        "examples": [
                          "application/json"
                        ]
                      },
                      "Host": {
                        "type": "string",
                        "examples": [
                          "withpersona.com"
                        ]
                      },
                      "Persona-Version": {
                        "type": "string",
                        "examples": [
                          "2023-01-05, 2023-01-05"
                        ]
                      },
                      "User-Agent": {
                        "type": "string",
                        "examples": [
                          "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36"
                        ]
                      }
                    }
                  },
                  "get-params": {
                    "type": "object",
                    "description": "The GET params of the request. Schema depends on the API called.",
                    "additionalProperties": true
                  },
                  "post-params": {
                    "type": "object",
                    "description": "The POST params of the request. Schema depends on the API called.",
                    "additionalProperties": true
                  },
                  "ip-address": {
                    "type": "string",
                    "examples": [
                      "44.203.11.87"
                    ]
                  }
                }
              },
              "response": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "format": "int32",
                    "examples": [
                      200
                    ]
                  },
                  "headers": {
                    "type": "object",
                    "properties": {
                      "Persona-Host": {
                        "type": "string",
                        "examples": [
                          "us-central1 persona-web-web-77b874ff88-rrdk9 53e23b240"
                        ]
                      },
                      "Cache-Control": {
                        "type": "string",
                        "examples": [
                          "no-cache, no-store, max-age=0, must-revalidate"
                        ]
                      },
                      "Pragma": {
                        "type": "string",
                        "examples": [
                          "no-cache"
                        ]
                      },
                      "Expires": {
                        "type": "string",
                        "examples": [
                          "Fri, 01 Jan 1990 00:00:00 GMT"
                        ]
                      },
                      "RateLimit-Limit": {
                        "type": "integer",
                        "format": "int32",
                        "examples": [
                          300
                        ]
                      },
                      "RateLimit-Remaining": {
                        "type": "integer",
                        "format": "int32",
                        "examples": [
                          299
                        ]
                      },
                      "RateLimit-Reset": {
                        "type": "integer",
                        "format": "int32",
                        "examples": [
                          60
                        ]
                      },
                      "Quota-Limit": {
                        "type": "integer",
                        "format": "int32",
                        "examples": [
                          1000
                        ]
                      },
                      "Quota-Remaining": {
                        "type": "integer",
                        "format": "int32",
                        "examples": [
                          998
                        ]
                      },
                      "Quota-Reset": {
                        "type": "integer",
                        "format": "int32",
                        "examples": [
                          31
                        ]
                      },
                      "Request-Id": {
                        "type": "string",
                        "examples": [
                          "req_prM3gdSL6ciwGjSjj4aXgKJT"
                        ]
                      },
                      "Content-Type": {
                        "type": "string",
                        "examples": [
                          "application/json; charset=utf-8"
                        ]
                      },
                      "Vary": {
                        "type": "string",
                        "examples": [
                          "Accept"
                        ]
                      }
                    }
                  }
                }
              },
              "created-at": {
                "type": "string",
                "format": "date-time",
                "examples": [
                  "2023-09-26T06:31:43.909+00:00"
                ]
              }
            }
          }
        }
      },
      "Case": {
        "type": "object",
        "description": "A Case object",
        "properties": {
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "examples": [
                  "Open",
                  "Pending",
                  "Approved",
                  "Declined"
                ],
                "type": "string"
              },
              "name": {
                "examples": [
                  "MRR-3"
                ],
                "type": "string"
              },
              "resolution": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "created-at": {
                "examples": [
                  "2021-09-28T05:18:36.200Z"
                ],
                "type": "string"
              },
              "updated-at": {
                "examples": [
                  "2021-09-28T05:18:36.200Z"
                ],
                "type": [
                  "string",
                  "null"
                ]
              },
              "assigned-at": {
                "examples": [
                  "2021-09-28T05:18:36.200Z"
                ],
                "type": [
                  "string",
                  "null"
                ]
              },
              "resolved-at": {
                "examples": [
                  "2021-09-28T05:18:36.200Z"
                ],
                "type": [
                  "string",
                  "null"
                ]
              },
              "redacted-at": {
                "examples": [
                  "2021-09-28T05:18:36.200Z"
                ],
                "type": [
                  "string",
                  "null"
                ]
              },
              "sla-expires-at": {
                "examples": [
                  "2021-09-28T07:18:36.200Z"
                ],
                "type": [
                  "string",
                  "null"
                ]
              },
              "creator-id": {
                "examples": [
                  "case_creator@withpersona.com"
                ],
                "type": "string"
              },
              "creator-type": {
                "examples": [
                  "user"
                ],
                "type": "string"
              },
              "assignee-id": {
                "examples": [
                  "case_assignee@withpersona.com"
                ],
                "type": [
                  "string",
                  "null"
                ]
              },
              "resolver-id": {
                "examples": [
                  "case_resolver@withpersona.com"
                ],
                "type": [
                  "string",
                  "null"
                ]
              },
              "resolver-type": {
                "examples": [
                  "user"
                ],
                "type": [
                  "string",
                  "null"
                ]
              },
              "updater-id": {
                "examples": [
                  "case_updater@withpersona.com"
                ],
                "type": [
                  "string",
                  "null"
                ]
              },
              "updater-type": {
                "examples": [
                  "user"
                ],
                "type": [
                  "string",
                  "null"
                ]
              },
              "tags": {
                "examples": [
                  [
                    "apple",
                    "banana",
                    "orange"
                  ]
                ],
                "type": "array"
              },
              "fields": {
                "examples": [
                  {
                    "external-integration-id": "ind_123"
                  }
                ],
                "type": "object",
                "additionalProperties": true
              }
            }
          },
          "id": {
            "examples": [
              "case_gqe7rH38FvxtzhGBQmDBsjkB"
            ],
            "type": "string"
          },
          "relationships": {
            "properties": {
              "accounts": {
                "type": "object",
                "properties": {
                  "data": {
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "examples": [
                            "act_9e3yoAUApTRMjgNoPAC7TNtz"
                          ],
                          "type": "string"
                        },
                        "type": {
                          "examples": [
                            "account"
                          ],
                          "type": "string"
                        }
                      }
                    },
                    "type": "array"
                  }
                }
              },
              "case-comments": {
                "type": "object",
                "properties": {
                  "data": {
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "type": {
                          "examples": [
                            "case-comment"
                          ],
                          "type": "string"
                        }
                      }
                    },
                    "type": "array"
                  }
                }
              },
              "case-template": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "examples": [
                          "ctmpl_Jumm3K4zHwaLBBdyLUCnHbBC"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "examples": [
                          "case-template"
                        ],
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "inquiries": {
                "type": "object",
                "properties": {
                  "data": {
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "examples": [
                            "inq_KHK4MJCE4QvfocWB2intQ3YE"
                          ],
                          "type": "string"
                        },
                        "type": {
                          "examples": [
                            "inquiry"
                          ],
                          "type": "string"
                        }
                      }
                    },
                    "type": "array"
                  }
                }
              },
              "reports": {
                "properties": {
                  "data": {
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "examples": [
                            "rep_7anCsX1R1We3BqRKfsJXsMaw"
                          ],
                          "type": "string"
                        },
                        "type": {
                          "examples": [
                            "report/watchlist"
                          ],
                          "type": "string"
                        }
                      }
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "verifications": {
                "properties": {
                  "data": {
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "examples": [
                            "ver_tVJF12ggSgzquQUkxtSVwssA"
                          ],
                          "type": "string"
                        },
                        "type": {
                          "examples": [
                            "verification/document"
                          ],
                          "type": "string"
                        }
                      }
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "txns": {
                "properties": {
                  "data": {
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "examples": [
                            "txn_0GKUnDBJi6RJpZhmKdYsM5me"
                          ],
                          "type": "string"
                        },
                        "type": {
                          "examples": [
                            "transaction"
                          ],
                          "type": "string"
                        }
                      }
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "type": {
            "examples": [
              "case"
            ],
            "type": "string"
          }
        }
      },
      "Inquiry": {
        "type": "object",
        "description": "An Inquiry object",
        "properties": {
          "type": {
            "examples": [
              "inquiry"
            ],
            "type": "string"
          },
          "id": {
            "examples": [
              "inq_5FrMN7NAGgFdGGysCDd7DaBW"
            ],
            "type": "string"
          },
          "attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DefaultFields"
              },
              {
                "type": "object",
                "properties": {
                  "status": {
                    "enum": [
                      "created",
                      "pending",
                      "completed",
                      "expired",
                      "failed",
                      "needs_review",
                      "approved",
                      "declined"
                    ],
                    "type": "string"
                  },
                  "reference-id": {
                    "examples": [
                      "ABC-123"
                    ],
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "note": {
                    "examples": [
                      "A helpful note"
                    ],
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "behaviors": {
                    "properties": {
                      "autofill-cancels": {
                        "default": 0,
                        "examples": [
                          29
                        ],
                        "type": [
                          "integer",
                          "null"
                        ]
                      },
                      "autofill-starts": {
                        "default": 0,
                        "examples": [
                          0
                        ],
                        "type": [
                          "integer",
                          "null"
                        ]
                      },
                      "behavior-threat-level": {
                        "examples": [
                          "low"
                        ],
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "completion-time": {
                        "default": 0,
                        "examples": [
                          28.62633237
                        ],
                        "type": [
                          "number",
                          "null"
                        ]
                      },
                      "devtools-open": {
                        "default": true,
                        "examples": [
                          false
                        ],
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "distraction-events": {
                        "default": 0,
                        "examples": [
                          0
                        ],
                        "type": [
                          "integer",
                          "null"
                        ]
                      },
                      "hesitation-baseline": {
                        "default": 0,
                        "examples": [
                          19860
                        ],
                        "type": [
                          "integer",
                          "null"
                        ]
                      },
                      "hesitation-count": {
                        "default": 0,
                        "examples": [
                          1
                        ],
                        "type": [
                          "integer",
                          "null"
                        ]
                      },
                      "hesitation-percentage": {
                        "default": 0,
                        "examples": [
                          65.33232628398792
                        ],
                        "type": [
                          "number",
                          "null"
                        ]
                      },
                      "hesitation-time": {
                        "default": 0,
                        "examples": [
                          12975
                        ],
                        "type": [
                          "integer",
                          "null"
                        ]
                      },
                      "request-spoof-attempts": {
                        "default": 0,
                        "examples": [
                          0
                        ],
                        "type": [
                          "integer",
                          "null"
                        ]
                      },
                      "shortcut-copies": {
                        "default": 0,
                        "examples": [
                          0
                        ],
                        "type": [
                          "integer",
                          "null"
                        ]
                      },
                      "shortcut-pastes": {
                        "default": 0,
                        "examples": [
                          0
                        ],
                        "type": [
                          "integer",
                          "null"
                        ]
                      },
                      "user-agent-spoof-attempts": {
                        "default": 0,
                        "examples": [
                          0
                        ],
                        "type": [
                          "integer",
                          "null"
                        ]
                      }
                    },
                    "type": "object"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "creator": {
                    "examples": [
                      "jane@doe.com"
                    ],
                    "type": "string"
                  },
                  "reviewer-comment": {
                    "examples": [
                      "This is a comment for this inquiry!"
                    ],
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "created-at": {
                    "examples": [
                      "2023-03-28T18:34:32.000Z"
                    ],
                    "type": "string",
                    "format": "date-time"
                  },
                  "started-at": {
                    "examples": [
                      "2023-03-28T18:35:10.000Z"
                    ],
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time"
                  },
                  "completed-at": {
                    "examples": [
                      "2023-03-28T18:35:10.000Z"
                    ],
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time"
                  },
                  "failed-at": {
                    "examples": [
                      "2023-03-28T18:35:10.000Z"
                    ],
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time"
                  },
                  "marked-for-review-at": {
                    "examples": [
                      "2023-03-28T18:35:10.000Z"
                    ],
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time"
                  },
                  "decisioned-at": {
                    "examples": [
                      "2023-03-28T18:35:10.000Z"
                    ],
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time"
                  },
                  "expired-at": {
                    "examples": [
                      "2023-03-28T18:35:10.000Z"
                    ],
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time"
                  },
                  "redacted-at": {
                    "examples": [
                      "2023-03-28T18:35:10.000Z"
                    ],
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time"
                  },
                  "previous-step-name": {
                    "examples": [
                      "verification_government_id",
                      "start"
                    ],
                    "type": "string"
                  },
                  "next-step-name": {
                    "examples": [
                      "retry_verification_government_id"
                    ],
                    "type": "string"
                  },
                  "address-subdivision-abbr": {
                    "examples": [
                      "CA",
                      "HI"
                    ],
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "address-postal-code-abbr": {
                    "examples": [
                      "94117",
                      "77418"
                    ],
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "identification-number": {
                    "examples": [
                      "YL123456"
                    ],
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "fields": {
                    "properties": {
                      "name-first": {
                        "properties": {
                          "type": {
                            "examples": [
                              "string"
                            ],
                            "type": "string"
                          },
                          "value": {
                            "examples": [
                              "Jane"
                            ],
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "type": "object"
                      },
                      "name-middle": {
                        "properties": {
                          "type": {
                            "examples": [
                              "string"
                            ],
                            "type": "string"
                          },
                          "value": {
                            "examples": [
                              "Marie"
                            ],
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "type": "object"
                      },
                      "name-last": {
                        "properties": {
                          "type": {
                            "examples": [
                              "string"
                            ],
                            "type": "string"
                          },
                          "value": {
                            "examples": [
                              "Doe"
                            ],
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "type": "object"
                      },
                      "address-street-1": {
                        "properties": {
                          "type": {
                            "examples": [
                              "string"
                            ],
                            "type": "string"
                          },
                          "value": {
                            "examples": [
                              "123 Main St"
                            ],
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "type": "object"
                      },
                      "address-street-2": {
                        "properties": {
                          "type": {
                            "examples": [
                              "string"
                            ],
                            "type": "string"
                          },
                          "value": {
                            "examples": [
                              "Apt"
                            ],
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "type": "object"
                      },
                      "address-city": {
                        "description": "City of residence address. Not all international addresses use this attribute.",
                        "properties": {
                          "type": {
                            "examples": [
                              "string"
                            ],
                            "type": "string"
                          },
                          "value": {
                            "examples": [
                              "San Francisco"
                            ],
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "type": "object"
                      },
                      "address-subdivision": {
                        "description": "State or subdivision of residence address. In the US, this should be the unabbreviated name. Not all international addresses use this attribute.",
                        "properties": {
                          "type": {
                            "examples": [
                              "string"
                            ],
                            "type": "string"
                          },
                          "value": {
                            "examples": [
                              "California"
                            ],
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "type": "object"
                      },
                      "address-postal-code": {
                        "description": "ZIP or postal code of residence address. Not all international addresses use this attribute.",
                        "properties": {
                          "type": {
                            "examples": [
                              "string"
                            ],
                            "type": "string"
                          },
                          "value": {
                            "examples": [
                              "94111"
                            ],
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "type": "object"
                      },
                      "address-country-code": {
                        "description": "ISO 3166-1 alpha 2 country code.",
                        "properties": {
                          "type": {
                            "examples": [
                              "string"
                            ],
                            "type": "string"
                          },
                          "value": {
                            "examples": [
                              "US"
                            ],
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "type": "object"
                      },
                      "birthdate": {
                        "properties": {
                          "type": {
                            "examples": [
                              "date"
                            ],
                            "type": "string"
                          },
                          "value": {
                            "description": "Date of birth in YYYY-MM-DD format",
                            "examples": [
                              "1991-10-07"
                            ],
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "type": "object"
                      },
                      "email-address": {
                        "properties": {
                          "type": {
                            "examples": [
                              "string"
                            ],
                            "type": "string"
                          },
                          "value": {
                            "examples": [
                              "test@emailaddress.com"
                            ],
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "type": "object"
                      },
                      "phone-number": {
                        "properties": {
                          "type": {
                            "examples": [
                              "string"
                            ],
                            "type": "string"
                          },
                          "value": {
                            "examples": [
                              "111-222-3333"
                            ],
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "type": "object"
                      },
                      "identification-number": {
                        "properties": {
                          "type": {
                            "examples": [
                              "string"
                            ],
                            "type": "string"
                          },
                          "value": {
                            "examples": [
                              "YL123456"
                            ],
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "type": "object"
                      }
                    },
                    "additionalProperties": true,
                    "type": "object"
                  }
                }
              }
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "account": {
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "examples": [
                          "act_ABC123"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "examples": [
                          "account"
                        ],
                        "type": "string"
                      }
                    },
                    "type": [
                      "object",
                      "null"
                    ]
                  }
                },
                "type": "object"
              },
              "documents": {
                "properties": {
                  "data": {
                    "items": {
                      "properties": {
                        "id": {
                          "examples": [
                            "doc_ABC123"
                          ],
                          "type": "string"
                        },
                        "type": {
                          "examples": [
                            "document/government-id"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "template": {
                "description": "Only present for Legacy 2.0 inquiries",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "examples": [
                          "tmpl_ABC123"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "examples": [
                          "template"
                        ],
                        "type": "string"
                      }
                    },
                    "type": [
                      "object",
                      "null"
                    ]
                  }
                },
                "type": "object"
              },
              "inquiry-template": {
                "description": "Only present for Dynamic Flow inquiries",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "examples": [
                          "itmpl_ABC123"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "examples": [
                          "inquiry-template"
                        ],
                        "type": "string"
                      }
                    },
                    "type": [
                      "object",
                      "null"
                    ]
                  }
                },
                "type": "object"
              },
              "inquiry-template-version": {
                "description": "Only present for Dynamic Flow inquiries",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "examples": [
                          "itmplv_ABC123"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "examples": [
                          "inquiry-template-version"
                        ],
                        "type": "string"
                      }
                    },
                    "type": [
                      "object",
                      "null"
                    ]
                  }
                },
                "type": "object"
              },
              "reports": {
                "properties": {
                  "data": {
                    "items": {
                      "properties": {
                        "id": {
                          "examples": [
                            "rep_ABC123"
                          ],
                          "type": "string"
                        },
                        "type": {
                          "examples": [
                            "report/address-lookup",
                            "report/watchlist"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "reviewer": {
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "examples": [
                          "user_ABC123"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "examples": [
                          "user"
                        ],
                        "type": "string"
                      }
                    },
                    "type": [
                      "object",
                      "null"
                    ]
                  }
                },
                "type": "object"
              },
              "selfies": {
                "properties": {
                  "data": {
                    "items": {
                      "properties": {
                        "id": {
                          "examples": [
                            "self_ABC123"
                          ],
                          "type": "string"
                        },
                        "type": {
                          "examples": [
                            "selfie/profile-and-center",
                            "selfie/center-only"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "sessions": {
                "properties": {
                  "data": {
                    "items": {
                      "properties": {
                        "id": {
                          "examples": [
                            "iqse_ABC123"
                          ],
                          "type": "string"
                        },
                        "type": {
                          "examples": [
                            "inquiry-session"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "verifications": {
                "properties": {
                  "data": {
                    "items": {
                      "properties": {
                        "id": {
                          "examples": [
                            "ver_ABC123"
                          ],
                          "type": "string"
                        },
                        "type": {
                          "examples": [
                            "verification/government-id"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          }
        }
      },
      "ReportBaseData": {
        "type": "object",
        "title": "Reports Data",
        "description": "The report's data",
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of the report"
          },
          "id": {
            "type": "string",
            "description": "The token of the report",
            "example": "rep_7WNzPaNcroBKLarNHBjYDLAp"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "description": "The status of the report",
                "enum": [
                  "pending",
                  "ready",
                  "errored"
                ]
              },
              "created-at": {
                "type": "string",
                "description": "The time the report was created in ISO 8601 format",
                "example": "2020-04-12T05:08:51.000Z"
              },
              "completed-at": {
                "type": "string",
                "description": "The time the report completed processing in ISO 8601 format",
                "example": "2020-04-13T00:23:57.000Z"
              },
              "redacted-at": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The time the report was redacted in ISO 8601 format",
                "example": null
              },
              "report-template-version-name": {
                "type": "string",
                "description": "The name of the report template version used for this report",
                "example": "v1"
              },
              "has-match": {
                "type": "boolean",
                "description": "Whether or not the report matched"
              },
              "is-continuous": {
                "type": "boolean",
                "description": "Whether or not the report is recurrable and is currently recurring"
              },
              "tags": {
                "type": "array",
                "description": "Tags on the report",
                "items": {
                  "type": "string",
                  "example": "tag1"
                }
              }
            }
          },
          "relationships": {
            "properties": {
              "inquiry": {
                "type": "object",
                "description": "The inquiry linked to the report",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "example": "inq_KHK4MJCE4QvfocWB2intQ3YE",
                        "type": "string"
                      },
                      "type": {
                        "example": "inquiry",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "account": {
                "type": "object",
                "description": "The account linked to the report",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "example": "act_9e3yoAUApTRMjgNoPAC7TNtz",
                        "type": "string"
                      },
                      "type": {
                        "example": "account",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "report-template": {
                "type": "object",
                "description": "The report template used to create this report",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "example": "rptp_tQumELV14h7Vh9Qqm8Ytm5K1",
                        "type": "string"
                      },
                      "type": {
                        "example": "report-template",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "cases": {
                "type": "object",
                "description": "The cases that this report is attached to",
                "properties": {
                  "data": {
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "example": "case_gqe7rH38FvxtzhGBQmDBsjkB",
                          "type": "string"
                        },
                        "type": {
                          "example": "case",
                          "type": "string"
                        }
                      }
                    },
                    "type": "array"
                  }
                }
              }
            }
          }
        }
      },
      "ReportWatchlistEntity": {
        "description": "A entity that matched from a Watchlist",
        "properties": {
          "name": {
            "type": "string",
            "example": "Won Ho Ri"
          },
          "alias-type": {
            "type": "string",
            "enum": [
              "primary_name",
              "aka"
            ]
          },
          "birthdates": {
            "type": "array",
            "description": "The birthdate of the entity",
            "items": {
              "type": "object",
              "properties": {
                "day": {
                  "type": "string",
                  "example": "17"
                },
                "year": {
                  "type": "string",
                  "example": "1964"
                },
                "month": {
                  "type": "string",
                  "example": "07"
                },
                "granularity": {
                  "type": "string",
                  "description": "Precision the birthday provided",
                  "example": "day"
                }
              }
            }
          }
        }
      },
      "ReportRunHistory": {
        "type": "array",
        "title": "Report Run History",
        "description": "A history of the report runs",
        "items": {
          "type": "object",
          "properties": {
            "scheduled-at": {
              "type": "string",
              "format": "date-time",
              "example": "2023-08-11T20:36:04.291Z"
            },
            "completed-at": {
              "type": "string",
              "format": "date-time",
              "example": "2023-08-11T20:36:04.291Z"
            },
            "type": {
              "type": "string",
              "description": "The type of report run",
              "enum": [
                "scheduled",
                "manual"
              ],
              "example": "scheduled"
            }
          }
        }
      },
      "ReportWatchlistData": {
        "title": "Watchlist Data",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReportBaseData"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "report/watchlist",
                "example": "report/watchlist"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name-first": {
                    "type": "string",
                    "description": "The input first name of the search individual",
                    "example": "Joe"
                  },
                  "name-middle": {
                    "type": "string",
                    "description": "The input middle name of the search individual",
                    "example": "N"
                  },
                  "name-last": {
                    "type": "string",
                    "description": "The input last name of the search individual",
                    "example": "Doe"
                  },
                  "term": {
                    "type": "string",
                    "description": "The input combined term used for searching (first + middle + last name)",
                    "example": "Joe N Doe"
                  },
                  "birthdate": {
                    "type": "string",
                    "description": "The input DOB in YYYY-MM-DD format",
                    "example": "1991-10-07"
                  },
                  "country-code": {
                    "type": "string",
                    "description": "The input search country in alpha2 format",
                    "example": "US"
                  },
                  "matched-lists": {
                    "type": "array",
                    "description": "Lists that matched from the search input",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "EU - EC - Programme PRK - North Korea"
                        },
                        "url": {
                          "type": "string",
                          "example": "http://eur-lex.europa.eu/legal-content/EN/TXT/PDF/?uri=CELEX:32017R1509&from=EN"
                        },
                        "list-type": {
                          "type": "string",
                          "example": "sanction"
                        },
                        "list-types": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "sanction"
                          }
                        },
                        "slug": {
                          "type": "string",
                          "example": "eu-ec-programme-prk"
                        },
                        "flag-code": {
                          "type": "string",
                          "example": "EU"
                        },
                        "entities": {
                          "type": "array",
                          "description": "A matched person",
                          "items": {
                            "$ref": "#/components/schemas/ReportWatchlistEntity"
                          }
                        }
                      }
                    }
                  },
                  "run-history": {
                    "$ref": "#/components/schemas/ReportRunHistory"
                  },
                  "ignore-list": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "ignored-at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2023-09-13T22:08:56.618Z"
                        },
                        "run-history-completed-at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2023-08-11T20:36:04.291Z"
                        },
                        "match": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "EU - EC - Programme PRK - North Korea"
                            },
                            "url": {
                              "type": "string",
                              "example": "http://eur-lex.europa.eu/legal-content/EN/TXT/PDF/?uri=CELEX:32017R1509&from=EN"
                            },
                            "list-type": {
                              "type": "string",
                              "example": "sanction"
                            },
                            "list-types": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "example": "sanction"
                              }
                            },
                            "slug": {
                              "type": "string",
                              "example": "eu-ec-programme-prk"
                            },
                            "flag-code": {
                              "type": "string",
                              "example": "EU"
                            },
                            "entities": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Won Ho Ri"
                                  },
                                  "alias-type": {
                                    "type": "string",
                                    "example": "primary_name"
                                  },
                                  "birthdates": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "day": {
                                          "type": "string",
                                          "example": "17"
                                        },
                                        "year": {
                                          "type": "string",
                                          "format": "date",
                                          "example": "1964"
                                        },
                                        "month": {
                                          "type": "string",
                                          "format": "date-time",
                                          "example": "07"
                                        },
                                        "granularity": {
                                          "type": "string",
                                          "example": "day"
                                        }
                                      }
                                    }
                                  },
                                  "group-id": {
                                    "type": "string",
                                    "example": "EU:110286"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "user": {
                          "type": "string",
                          "example": "John Doe"
                        },
                        "ignore-reason": {
                          "type": "string",
                          "example": "false positive"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "ReportCryptoAddressWatchlistData": {
        "title": "Crypto Address Watchlist Data",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReportBaseData"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "report/crypto-address-watchlist",
                "example": "report/crypto-address-watchlist"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "query": {
                    "type": "object",
                    "properties": {
                      "crypto-address": {
                        "type": "string",
                        "example": "1Fz29BQp82pE3vXXcsZoMNQ3KSHfMzfMe3"
                      }
                    }
                  },
                  "result": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "US - OFAC - Specially Designated Nationals and Blocked Persons (SDN)"
                        },
                        "url": {
                          "type": "string",
                          "example": "https://home.treasury.gov/policy-issues/financial-sanctions/specially-designated-nationals-and-blocked-persons-list-sdn-human-readable-lists"
                        },
                        "list-type": {
                          "type": "string",
                          "example": "sanction"
                        },
                        "slug": {
                          "type": "string",
                          "example": "us-ofac-specially-designated-nationals-and-blocked-persons"
                        },
                        "flag-code": {
                          "type": "string",
                          "example": "US"
                        },
                        "entities": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "ANDREYEV, Anton Nikolaeyvich"
                              },
                              "alias-type": {
                                "type": "string",
                                "example": "primary_name"
                              },
                              "birthdates": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "day": {
                                      "type": "string",
                                      "format": "date-time",
                                      "example": "03"
                                    },
                                    "year": {
                                      "type": "string",
                                      "format": "date",
                                      "example": "1985"
                                    },
                                    "month": {
                                      "type": "string",
                                      "format": "date-time",
                                      "example": "03"
                                    },
                                    "granularity": {
                                      "type": "string",
                                      "example": "day"
                                    }
                                  }
                                }
                              },
                              "crypto-addresses": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "XBT"
                                    },
                                    "address": {
                                      "type": "string",
                                      "example": "1Fz29BQp82pE3vXXcsZoMNQ3KSHfMzfMe3"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "ReportAdverseMediaData": {
        "title": "Adverse Media Data",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReportBaseData"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "report/adverse-media",
                "example": "report/adverse-media"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name-first": {
                    "type": "string",
                    "description": "The input first name of the search individual",
                    "example": "Joe"
                  },
                  "name-middle": {
                    "type": "string",
                    "description": "The input middle name of the search individual",
                    "example": "N"
                  },
                  "name-last": {
                    "type": "string",
                    "description": "The input last name of the search individual",
                    "example": "Doe"
                  },
                  "term": {
                    "type": "string",
                    "description": "The input combined term used for searching (first + middle + last name)",
                    "example": "Joe N Doe"
                  },
                  "birthdate-year": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1992
                  },
                  "birthdate": {
                    "type": "string",
                    "description": "The input DOB in YYYY-MM-DD format",
                    "example": "1991-10-07"
                  },
                  "country-code": {
                    "type": "string",
                    "description": "The input search country in alpha2 format",
                    "example": "US"
                  },
                  "related-sources": {
                    "description": "The sources that matched for the search",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "akas": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "Joey Doey"
                          }
                        },
                        "birthdates": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "nullable"
                          }
                        },
                        "match-types": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "name_exact"
                          }
                        },
                        "media": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "date": {
                                "type": "string",
                                "format": "date",
                                "example": "2022-11-12"
                              },
                              "snippet": {
                                "type": "string",
                                "description": "Snippet from matched article",
                                "example": "Joe Doe was ordered to jail on Friday after a judge revoked his bail for alleged witness tampering."
                              },
                              "url": {
                                "type": "string",
                                "description": "URL of matched article",
                                "example": "https://www.example.com/"
                              },
                              "title": {
                                "type": "string",
                                "description": "Title of matched article",
                                "example": "Joe Doe ordered to jail"
                              }
                            }
                          }
                        },
                        "name": {
                          "type": "string",
                          "example": "Joe Doe"
                        },
                        "sources": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "country-codes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "example": "FR"
                                }
                              },
                              "name": {
                                "type": "string",
                                "example": "Adverse Media"
                              },
                              "types": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "example": "adverse-media-v2-other-minor"
                                }
                              }
                            }
                          }
                        },
                        "entity-id": {
                          "type": "string",
                          "example": "FV933QHOUDG73V8"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "ReportAddressLookupData": {
        "title": "Address Lookup Data",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReportBaseData"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "report/address-lookup",
                "example": "report/address-lookup"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "addressee": {
                    "type": "string",
                    "example": "Joe Doe"
                  },
                  "address-street-1": {
                    "type": "string",
                    "example": "1 Infinite Loop"
                  },
                  "address-street-2": {
                    "type": "string"
                  },
                  "address-city": {
                    "type": "string",
                    "example": "Cupertino"
                  },
                  "address-subdivision": {
                    "type": "string",
                    "example": "California"
                  },
                  "address-postal-code": {
                    "type": "string",
                    "example": "95014"
                  },
                  "resolved-addressee": {
                    "type": "string"
                  },
                  "resolved-address-street-1": {
                    "type": "string",
                    "example": "1 Infinite Loop"
                  },
                  "resolved-address-street-2": {
                    "type": "string"
                  },
                  "resolved-address-city": {
                    "type": "string",
                    "example": "Cupertino"
                  },
                  "resolved-address-subdivision": {
                    "type": "string",
                    "example": "CA"
                  },
                  "resolved-address-postal-code": {
                    "type": "string",
                    "example": "95014"
                  },
                  "metadata-record-type": {
                    "type": "string",
                    "example": "S"
                  },
                  "metadata-zip-type": {
                    "type": "string",
                    "example": "Standard"
                  },
                  "metadata-county-fips": {
                    "type": "string",
                    "example": "06085"
                  },
                  "metadata-county-name": {
                    "type": "string",
                    "example": "Santa Clara"
                  },
                  "metadata-carrier-route": {
                    "type": "string",
                    "example": "C067"
                  },
                  "metadata-carrier-route-type": {
                    "type": "string",
                    "example": "CityRoute"
                  },
                  "metadata-congressional-district": {
                    "type": "string",
                    "example": "17"
                  },
                  "metadata-building-default-indicator": {
                    "type": "string"
                  },
                  "metadata-residential-delivery-indicator": {
                    "type": "string",
                    "example": "Commercial"
                  },
                  "metadata-latitude": {
                    "type": "number",
                    "example": 37.3331
                  },
                  "metadata-longitude": {
                    "type": "number",
                    "example": -122.02889
                  },
                  "metadata-precision": {
                    "type": "string",
                    "example": "Zip9"
                  },
                  "metadata-time-zone": {
                    "type": "string",
                    "example": "Pacific"
                  },
                  "metadata-utc-offset": {
                    "type": "integer",
                    "example": -8
                  },
                  "metadata-obeys-daylight-savings": {
                    "type": "boolean",
                    "example": true
                  },
                  "analysis-dpv-match-code": {
                    "type": "string",
                    "example": "Y"
                  },
                  "analysis-dpv-match-code-decoded": {
                    "type": "string",
                    "example": "Confirmed"
                  },
                  "analysis-dpv-footnotes": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "AA"
                    }
                  },
                  "analysis-dpv-footnotes-decoded": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "Street name, city, state, and ZIP are all valid."
                    }
                  },
                  "analysis-dpv-cmra": {
                    "type": "string",
                    "example": "N"
                  },
                  "analysis-dpv-vacant": {
                    "type": "string",
                    "example": "N"
                  },
                  "analysis-active": {
                    "type": "string",
                    "example": "Y"
                  },
                  "analysis-footnotes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "analysis-footnotes-decoded": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "analysis-lacs-link-code": {
                    "type": "string"
                  },
                  "analysis-lacs-link-code-decoded": {
                    "type": "string"
                  },
                  "analysis-lacs-link-indicator": {
                    "type": "string"
                  },
                  "analysis-lacs-link-indicator-decoded": {
                    "type": "string"
                  },
                  "analysis-suite-link-match": {
                    "type": "string"
                  },
                  "metadata-ews-match": {
                    "type": "string"
                  },
                  "error-message": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "ReportPoliticallyExposedPersonData": {
        "title": "Politically Exposed Person Data",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReportBaseData"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "report/politically-exposed-person",
                "example": "report/politically-exposed-person"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "query": {
                    "type": "object",
                    "properties": {
                      "name-first": {
                        "type": "string",
                        "description": "The input first name of the search individual",
                        "example": "Joe"
                      },
                      "name-middle": {
                        "type": "string",
                        "description": "The input middle name of the search individual",
                        "example": "N"
                      },
                      "name-last": {
                        "type": "string",
                        "description": "The input last name of the search individual",
                        "example": "Doe"
                      },
                      "term": {
                        "type": "string",
                        "description": "The input combined term used for searching (first + middle + last name). Either the name or the term fields are required.",
                        "example": "Joe N Doe"
                      },
                      "birthdate": {
                        "type": "string",
                        "description": "The input DOB in YYYY-MM-DD format",
                        "example": "1991-10-07"
                      },
                      "country-code": {
                        "type": "string",
                        "description": "The input search country in alpha2 format",
                        "example": "US"
                      }
                    }
                  },
                  "result": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "entity-id": {
                          "type": "string",
                          "example": "MV9IPWV13KYS0A9"
                        },
                        "name": {
                          "type": "string",
                          "example": "Joe Doe"
                        },
                        "birthdates": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "date",
                            "example": "1942-11-20"
                          }
                        },
                        "death-dates": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "nullable"
                          }
                        },
                        "locations": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "nullable"
                          }
                        },
                        "country": {
                          "type": "string",
                          "example": "United States"
                        },
                        "sex": {
                          "type": "string",
                          "format": "nullable"
                        },
                        "positions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "pep-class": {
                                "type": "string",
                                "example": "pep-class-1"
                              },
                              "source-key": {
                                "type": "string",
                                "example": "united-states-head-of-state"
                              },
                              "name": {
                                "type": "string",
                                "example": "President of the United States"
                              }
                            }
                          }
                        },
                        "associates": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "nullable"
                          }
                        },
                        "affiliations": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "source-key": {
                                "type": "string",
                                "example": "north-atlantic-treaty-organisation"
                              },
                              "name": {
                                "type": "string",
                                "example": "North Atlantic Treaty Organization Member Countries Representation"
                              }
                            }
                          }
                        },
                        "related-urls": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "source-key": {
                                "type": "string",
                                "example": "internal-data-source"
                              },
                              "name": {
                                "type": "string",
                                "example": "https://www.example.org/"
                              }
                            }
                          }
                        },
                        "images": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "nullable"
                          }
                        },
                        "sources": {
                          "type": "object",
                          "description": "A map of the sources that matched by entity"
                        },
                        "match-types": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "aka_exact"
                          }
                        },
                        "pep-type": {
                          "type": "string",
                          "format": "nullable"
                        }
                      }
                    }
                  },
                  "run-history": {
                    "$ref": "#/components/schemas/ReportRunHistory"
                  }
                }
              }
            }
          }
        ]
      },
      "ReportEmailAddressData": {
        "title": "Report Email Address Data",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReportBaseData"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "report/email-address",
                "example": "report/email-address"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "email-address": {
                    "type": "string",
                    "description": "The input email address of the search",
                    "example": "example@domain.com"
                  },
                  "email-reputation": {
                    "type": "string",
                    "description": "The reputation of the email provided",
                    "enum": [
                      "high",
                      "medium",
                      "low"
                    ]
                  },
                  "email-reference-count": {
                    "type": "integer",
                    "description": "The number of sources used to determine the reputation (Deprecated)",
                    "example": 4
                  },
                  "email-domain-reputation": {
                    "type": "string",
                    "description": "The reputation of the email domain provided (Deprecated)",
                    "enum": [
                      "high",
                      "medium",
                      "low"
                    ]
                  },
                  "email-first-seen-days": {
                    "type": "integer",
                    "description": "How many days it has ben since the email was first seen in attack (Deprecated)",
                    "example": 71
                  },
                  "email-last-seen-days": {
                    "type": "integer",
                    "description": "How many days it has been since the email was last seen (Deprecated)",
                    "format": "integer",
                    "example": 250
                  },
                  "email-estimated-age-days": {
                    "type": "integer",
                    "description": "The estimated age of the email in days",
                    "example": 410
                  },
                  "email-domain-age-days": {
                    "type": "integer",
                    "description": "The estimated age of the domain in days",
                    "example": 410
                  },
                  "email-credentials-leaked": {
                    "type": "boolean",
                    "description": "Whether the email has ever been detected to have been leaked (Deprecated)",
                    "example": true
                  },
                  "email-credentials-leaked-recent": {
                    "type": "boolean",
                    "description": "Whether the email has been recently detected as leaked",
                    "example": true
                  },
                  "email-data-breached": {
                    "type": "boolean",
                    "description": "Whether the email was involved in a data breach (Deprecated)",
                    "example": true
                  },
                  "email-malicious-activity-detected": {
                    "type": "boolean",
                    "description": "Whether the email has ever been detected for suspected malicious activity (Deprecated)",
                    "example": true
                  },
                  "email-malicious-activity-detected-recent": {
                    "type": "boolean",
                    "description": "Whether the email has recently been detected for suspected malicious activity",
                    "example": true
                  },
                  "email-is-blocklisted": {
                    "type": "boolean",
                    "description": "Whether the email appears on blocklists (Deprecated)",
                    "example": true
                  },
                  "email-is-spam": {
                    "type": "boolean",
                    "description": "Whether the email is spam",
                    "example": true
                  },
                  "email-is-free-provider": {
                    "type": "boolean",
                    "description": "Whether the email was made with a free provider (Deprecated)",
                    "example": true
                  },
                  "email-is-disposable": {
                    "type": "boolean",
                    "description": "Whether the email is one that is disposable or temporary",
                    "example": true
                  },
                  "email-is-deliverable": {
                    "type": "boolean",
                    "description": "Whether the email is deliverable",
                    "example": true
                  },
                  "email-is-valid-mx": {
                    "type": "boolean",
                    "description": "Whether the domain has a valid MX record",
                    "example": true
                  },
                  "email-is-spoofable": {
                    "type": "boolean",
                    "description": "Whether the email can be spoofed. (E.G. not a strict SPF policy or DMARC not enforced. Deprecated)",
                    "example": true
                  },
                  "email-is-spf-strict": {
                    "type": "boolean",
                    "description": "Whether there is a sufficiently strict SPF record (Deprecated)",
                    "example": true
                  },
                  "email-is-dmarc-enforced": {
                    "type": "boolean",
                    "description": "Whether DMARC is configured correctly and enforced (Deprecated)",
                    "example": true
                  },
                  "email-is-suspicious": {
                    "type": "boolean",
                    "description": "Whether the email is suspicious or risky",
                    "example": true
                  },
                  "email-domain-exists": {
                    "type": "boolean",
                    "description": "Whether the domain of the email exists",
                    "example": true
                  },
                  "email-domain": {
                    "type": "string",
                    "description": "The domain of the email",
                    "example": "gmail.com"
                  }
                }
              }
            }
          }
        ]
      },
      "ReportPhoneRiskData": {
        "title": "Report Phone Risk Data",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReportBaseData"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "report/phone-risk",
                "example": "report/phone-risk"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "phone-number": {
                    "type": "string",
                    "description": "The input phone number of the search",
                    "example": "+14169671111"
                  },
                  "phone-type": {
                    "type": "string",
                    "enum": [
                      "FIXED_LINE",
                      "MOBILE",
                      "PREPAID",
                      "TOLL_FREE",
                      "VOIP",
                      "PAGER",
                      "PAYPHONE",
                      "INVALID",
                      "RESTRICTED_PREMIUM",
                      "PERSONAL",
                      "VOICEMAIL",
                      "OTHER"
                    ]
                  },
                  "phone-carrier": {
                    "type": "string",
                    "example": "Rogers Communications Canada Inc."
                  },
                  "phone-risk-level": {
                    "type": "string",
                    "description": "Assessment of the phone number's risk (low - high)",
                    "example": "medium-low"
                  },
                  "phone-risk-recommendation": {
                    "type": "string",
                    "enum": [
                      "block",
                      "allow",
                      "flag"
                    ]
                  },
                  "phone-risk-score": {
                    "type": "integer",
                    "description": "Risk score out of 1000",
                    "format": "int32",
                    "example": 250
                  },
                  "phone-risk-sim-swap": {
                    "type": "string",
                    "description": "The risk of a fraudulent SIM swap",
                    "format": "nullable",
                    "enum": [
                      "very-low",
                      "low",
                      "medium",
                      "high",
                      "N/A"
                    ]
                  }
                }
              }
            }
          }
        ]
      },
      "ReportSocialMediaData": {
        "title": "Report Social Media Data",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReportBaseData"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "report/social-media",
                "example": "report/social-media"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name-first": {
                    "type": "string",
                    "example": "Norman"
                  },
                  "name-last": {
                    "type": "string",
                    "example": "Mannor"
                  },
                  "birthdate": {
                    "type": "string",
                    "description": "Date of birth in YYYY-MM-DD format",
                    "example": "1991-10-07"
                  },
                  "phone-number": {
                    "type": "string",
                    "format": "nullable",
                    "example": "+14169671111"
                  },
                  "email-address": {
                    "type": "string",
                    "format": "nullable",
                    "example": "address@domain.com"
                  },
                  "address-city": {
                    "type": "string",
                    "example": "Funkyville"
                  },
                  "address-subdivision": {
                    "type": "string",
                    "description": "Sub-national subdivision such as a US state or a Canadian province",
                    "example": "Wisconsin"
                  },
                  "linkedin-url": {
                    "type": "string",
                    "format": "nullable",
                    "example": "linkdin.com/in/thisisausername"
                  },
                  "linkedin-username": {
                    "type": "string",
                    "format": "nullable",
                    "example": "thisisausername"
                  },
                  "linkedin-id": {
                    "type": "string",
                    "format": "nullable",
                    "example": "123456789"
                  },
                  "facebook-url": {
                    "type": "string",
                    "example": "facebook.com/user.name.7"
                  },
                  "facebook-username": {
                    "type": "string",
                    "example": "user.name.7"
                  },
                  "facebook-id": {
                    "type": "string",
                    "example": "748945123159485"
                  },
                  "twitter-url": {
                    "type": "string",
                    "format": "nullable",
                    "example": "twitter.com/elonmusk"
                  },
                  "twitter-username": {
                    "type": "string",
                    "format": "nullable",
                    "example": "elonmusk"
                  },
                  "github-url": {
                    "type": "string",
                    "format": "nullable",
                    "example": "github.com/username"
                  },
                  "github-username": {
                    "type": "string",
                    "format": "nullable",
                    "example": "username"
                  }
                }
              }
            }
          }
        ]
      },
      "ReportBusinessLookupData": {
        "title": "Report Business Lookup Data",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReportBaseData"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "report/business-lookup",
                "example": "report/business-lookup"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "query": {
                    "type": "object",
                    "properties": {
                      "business-name": {
                        "type": "string",
                        "example": "Coffee Shop"
                      },
                      "phone-number": {
                        "type": "string",
                        "format": "nullable",
                        "example": "+11234567890"
                      },
                      "website": {
                        "type": "string",
                        "format": "nullable",
                        "example": "https://website.com"
                      },
                      "ein": {
                        "type": "string",
                        "format": "nullable"
                      },
                      "address-street-1": {
                        "type": "string",
                        "example": "123 Funky St"
                      },
                      "address-street-2": {
                        "type": "string",
                        "format": "nullable"
                      },
                      "address-city": {
                        "type": "string",
                        "example": "Funkyville"
                      },
                      "address-subdivision": {
                        "type": "string",
                        "description": "Subnational division of a country such as a US state.",
                        "example": "CA"
                      },
                      "address-postal-code": {
                        "type": "string",
                        "example": "12345"
                      },
                      "address-country-code": {
                        "type": "string",
                        "format": "nullable",
                        "example": "US"
                      },
                      "incorporation-state": {
                        "type": "string",
                        "format": "nullable",
                        "example": "CA"
                      },
                      "associated-people": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "nullable",
                          "example": "John Doe"
                        }
                      }
                    }
                  },
                  "result": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "Coffee Shop, LLC DBA Coffee Shop"
                      },
                      "aliases": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "COFFEE SHOP"
                        }
                      },
                      "description": {
                        "type": "string",
                        "format": "nullable"
                      },
                      "legal-status": {
                        "type": "string",
                        "example": "unknown"
                      },
                      "legal-entity-type": {
                        "type": "string",
                        "example": "LLC"
                      },
                      "date-of-incorporation": {
                        "type": "object",
                        "properties": {
                          "granularity": {
                            "type": "string",
                            "example": "year"
                          },
                          "day": {
                            "type": "string",
                            "format": "nullable"
                          },
                          "month": {
                            "type": "string",
                            "format": "nullable"
                          },
                          "year": {
                            "type": "string",
                            "format": "date",
                            "example": "2013"
                          }
                        }
                      },
                      "industry-classifications": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "example": "789456"
                            },
                            "title": {
                              "type": "string",
                              "example": "Snack and Nonalcoholic Beverage Bars"
                            },
                            "type": {
                              "type": "string",
                              "example": "NAICS_2017"
                            }
                          }
                        }
                      },
                      "identifiers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "state": {
                              "type": "string",
                              "example": "CA"
                            },
                            "country": {
                              "type": "string",
                              "example": "US"
                            },
                            "issue-date": {
                              "type": "string",
                              "format": "date",
                              "example": "2013-05-12"
                            },
                            "file-number": {
                              "type": "string",
                              "example": "454894615645"
                            },
                            "type": {
                              "type": "string",
                              "example": "us_state_registration_number"
                            },
                            "addresses": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "street-1": {
                                    "type": "string",
                                    "example": "123 FUNKY STREET"
                                  },
                                  "street-2": {
                                    "type": "string",
                                    "format": "nullable"
                                  },
                                  "city": {
                                    "type": "string",
                                    "example": "SAN FRANCISCO"
                                  },
                                  "subdivision": {
                                    "type": "string",
                                    "example": "CA"
                                  },
                                  "postal-code": {
                                    "type": "string",
                                    "example": "94000"
                                  },
                                  "delivery-point-barcode": {
                                    "type": "string",
                                    "format": "nullable"
                                  },
                                  "primary-number": {
                                    "type": "string",
                                    "format": "nullable"
                                  },
                                  "street-name": {
                                    "type": "string",
                                    "format": "nullable"
                                  },
                                  "latitude": {
                                    "type": "string",
                                    "format": "nullable"
                                  },
                                  "longitude": {
                                    "type": "string",
                                    "format": "nullable"
                                  },
                                  "precision": {
                                    "type": "string",
                                    "format": "nullable"
                                  },
                                  "type": {
                                    "type": "string",
                                    "example": "registered_agent_address"
                                  }
                                }
                              }
                            },
                            "status": {
                              "type": "string",
                              "example": "active"
                            }
                          }
                        }
                      },
                      "addresses": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "street-1": {
                              "type": "string",
                              "example": "123 Funky St"
                            },
                            "street-2": {
                              "type": "string",
                              "format": "nullable"
                            },
                            "city": {
                              "type": "string",
                              "example": "Funkyville"
                            },
                            "subdivision": {
                              "type": "string",
                              "example": "CA"
                            },
                            "postal-code": {
                              "type": "string",
                              "example": "12345-1234"
                            }
                          }
                        }
                      },
                      "websites": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "https://website.com/"
                        }
                      },
                      "phone-numbers": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "+11234567890"
                        }
                      },
                      "agents": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name-full": {
                              "type": "string",
                              "example": "JOHN DOE"
                            }
                          }
                        }
                      },
                      "officers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name-full": {
                              "type": "string",
                              "example": "JOHN DOE"
                            },
                            "name-first": {
                              "type": "string",
                              "format": "nullable",
                              "example": "JOHN"
                            },
                            "name-last": {
                              "type": "string",
                              "format": "nullable",
                              "example": "DOE"
                            },
                            "titles": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "example": "CONTACT NAME"
                              }
                            }
                          }
                        }
                      },
                      "headcount": {
                        "type": "string",
                        "format": "nullable"
                      },
                      "sources": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "RESTAURANT INSPECTIONS"
                            }
                          }
                        }
                      }
                    }
                  },
                  "match-status-strength": {
                    "type": "string",
                    "enum": [
                      "not_applicable",
                      "match",
                      "partial_match",
                      "no_match",
                      "unavailable",
                      "unknown"
                    ]
                  },
                  "match-status-business-name": {
                    "type": "string",
                    "enum": [
                      "not_applicable",
                      "match",
                      "partial_match",
                      "no_match",
                      "unavailable",
                      "unknown"
                    ]
                  },
                  "match-status-address": {
                    "type": "string",
                    "enum": [
                      "not_applicable",
                      "match",
                      "partial_match",
                      "no_match",
                      "unavailable",
                      "unknown"
                    ]
                  },
                  "match-status-address-street": {
                    "type": "string",
                    "enum": [
                      "not_applicable",
                      "match",
                      "partial_match",
                      "no_match",
                      "unavailable",
                      "unknown"
                    ]
                  },
                  "match-status-address-city": {
                    "type": "string",
                    "enum": [
                      "not_applicable",
                      "match",
                      "partial_match",
                      "no_match",
                      "unavailable",
                      "unknown"
                    ]
                  },
                  "match-status-address-postal-code": {
                    "type": "string",
                    "enum": [
                      "not_applicable",
                      "match",
                      "partial_match",
                      "no_match",
                      "unavailable",
                      "unknown"
                    ]
                  },
                  "match-status-address-subdivision": {
                    "type": "string",
                    "enum": [
                      "not_applicable",
                      "match",
                      "partial_match",
                      "no_match",
                      "unavailable",
                      "unknown"
                    ]
                  },
                  "match-status-phone-number": {
                    "type": "string",
                    "enum": [
                      "not_applicable",
                      "match",
                      "partial_match",
                      "no_match",
                      "unavailable",
                      "unknown"
                    ]
                  },
                  "match-status-ein": {
                    "type": "string",
                    "enum": [
                      "not_applicable",
                      "match",
                      "partial_match",
                      "no_match",
                      "unavailable",
                      "unknown"
                    ]
                  },
                  "match-status-associated-person": {
                    "type": "string",
                    "enum": [
                      "not_applicable",
                      "match",
                      "partial_match",
                      "no_match",
                      "unavailable",
                      "unknown"
                    ]
                  },
                  "match-status-website": {
                    "type": "string",
                    "enum": [
                      "not_applicable",
                      "match",
                      "partial_match",
                      "no_match",
                      "unavailable",
                      "unknown"
                    ]
                  }
                }
              }
            }
          }
        ]
      },
      "ReportData": {
        "type": "object",
        "oneOf": [
          {
            "$ref": "#/components/schemas/ReportBaseData"
          },
          {
            "$ref": "#/components/schemas/ReportWatchlistData"
          },
          {
            "$ref": "#/components/schemas/ReportCryptoAddressWatchlistData"
          },
          {
            "$ref": "#/components/schemas/ReportAdverseMediaData"
          },
          {
            "$ref": "#/components/schemas/ReportAddressLookupData"
          },
          {
            "$ref": "#/components/schemas/ReportPoliticallyExposedPersonData"
          },
          {
            "$ref": "#/components/schemas/ReportEmailAddressData"
          },
          {
            "$ref": "#/components/schemas/ReportPhoneRiskData"
          },
          {
            "$ref": "#/components/schemas/ReportSocialMediaData"
          },
          {
            "$ref": "#/components/schemas/ReportBusinessLookupData"
          }
        ]
      },
      "CaseComment": {
        "type": "object",
        "description": "A Case Comment object",
        "properties": {
          "attributes": {
            "type": "object",
            "properties": {
              "message": {
                "examples": [
                  "<p>Case has passed compliance review.</p>"
                ],
                "type": "string"
              },
              "created-at": {
                "examples": [
                  "2021-09-28T05:18:36.200Z"
                ],
                "type": "string"
              },
              "updated-at": {
                "examples": [
                  "2021-09-28T05:18:36.200Z"
                ],
                "type": "string"
              },
              "commenter-id": {
                "examples": [
                  "case_commenter@withpersona.com"
                ],
                "type": "string"
              },
              "commenter-type": {
                "examples": [
                  "user"
                ],
                "type": "string"
              }
            }
          },
          "id": {
            "examples": [
              "cscm_yd2urRmjaCWcSSxqTSHvUcsn"
            ],
            "type": "string"
          },
          "type": {
            "examples": [
              "case-comment"
            ],
            "type": "string"
          }
        }
      },
      "VerificationTopLevelData": {
        "type": "object",
        "title": "Verifications Data",
        "description": "The verification's data",
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of the verification"
          },
          "id": {
            "type": "string",
            "description": "The token of the verification",
            "example": "ver_ABC123"
          }
        }
      },
      "VerificationAttributesBaseData": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "The status of the verification",
            "enum": [
              "initiated",
              "submitted",
              "passed",
              "failed",
              "requires_retry",
              "canceled",
              "confirmed"
            ]
          },
          "created-at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the verification was created in ISO 8601 format",
            "example": "2023-11-16T01:31:16.000Z"
          },
          "created-at-ts": {
            "type": "integer",
            "format": "int32",
            "description": "The time the verification was created in Unix timestamp format",
            "example": 1700098276
          },
          "submitted-at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time",
            "description": "The time the verification was submitted in ISO 8601 format",
            "example": "2023-11-16T01:31:16.000Z"
          },
          "submitted-at-ts": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int32",
            "description": "The time the verification was submitted in Unix timestamp format",
            "example": 1700098276
          },
          "completed-at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time",
            "description": "The time the verification was completed in ISO 8601 format",
            "example": "2023-11-16T01:31:16.000Z"
          },
          "completed-at-ts": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int32",
            "description": "The time the verification was completed in Unix timestamp format",
            "example": 1700098276
          },
          "country-code": {
            "description": "ISO 3166-1 alpha 2 country code.",
            "example": "US",
            "type": [
              "string",
              "null"
            ]
          },
          "checks": {
            "items": {
              "properties": {
                "name": {
                  "examples": [
                    "aamva_identification_number_comparison",
                    "document_type_detection"
                  ],
                  "type": "string"
                },
                "status": {
                  "enum": [
                    "passed",
                    "failed",
                    "not_applicable"
                  ],
                  "type": "string"
                },
                "reasons": {
                  "type": "array",
                  "description": "If applicable, reasons are the list of reasons explaining why the check failed or is not applicable.",
                  "items": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "requirement": {
                  "type": "string",
                  "enum": [
                    "required",
                    "not_required",
                    "requires_retry"
                  ]
                },
                "metadata": {
                  "description": "This is a free-form object containing relevant metadata to the processing and result of the check.",
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        }
      },
      "VerificationRelationshipsBaseData": {
        "type": "object",
        "properties": {
          "inquiry": {
            "type": "object",
            "description": "The inquiry linked to the verification",
            "properties": {
              "data": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "id": {
                    "example": "inq_ABC123",
                    "type": "string"
                  },
                  "type": {
                    "example": "inquiry",
                    "type": "string"
                  }
                }
              }
            }
          },
          "template": {
            "type": "object",
            "properties": {
              "data": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "template"
                  },
                  "id": {
                    "type": "string",
                    "example": "tmpl_ABC123"
                  }
                }
              }
            }
          },
          "inquiry-template-version": {
            "type": "object",
            "properties": {
              "data": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "inquiry-template-version"
                  },
                  "id": {
                    "type": "string",
                    "example": "itmplv_ABC123"
                  }
                }
              }
            }
          },
          "inquiry-template": {
            "type": "object",
            "properties": {
              "data": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "inquiry-template"
                  },
                  "id": {
                    "type": "string",
                    "example": "itmpl_ABC123"
                  }
                }
              }
            }
          },
          "verification-template": {
            "type": "object",
            "properties": {
              "data": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "verification-template/aamva"
                  },
                  "id": {
                    "type": "string",
                    "example": "vtmpl_ABC123"
                  }
                }
              }
            }
          },
          "verification-template-version": {
            "type": "object",
            "properties": {
              "data": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "verification-template-version/aamva"
                  },
                  "id": {
                    "type": "string",
                    "example": "vtmplv_ABC123"
                  }
                }
              }
            }
          }
        }
      },
      "VerificationAamvaData": {
        "title": "AAMVA Verification Data",
        "allOf": [
          {
            "$ref": "#/components/schemas/VerificationTopLevelData"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "verification/aamva",
                "example": "verification/aamva"
              },
              "attributes": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/VerificationAttributesBaseData"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "name-first": {
                        "description": "Given or first name.",
                        "example": "Jane",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "name-last": {
                        "description": "Family or last name.",
                        "example": "Doe",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "birthdate": {
                        "description": "Birthdate, must be in the format \"YYYY-MM-DD\".",
                        "format": "date",
                        "example": "1994-04-12",
                        "type": [
                          "string"
                        ]
                      },
                      "issue-date": {
                        "type": "string",
                        "format": "date",
                        "example": "2021-05-27"
                      },
                      "expiration-date": {
                        "type": "string",
                        "format": "date",
                        "example": "2029-05-08"
                      },
                      "address-postal-code": {
                        "type": "string",
                        "example": "94115-1010"
                      },
                      "issuing-authority": {
                        "type": "string",
                        "example": "CA"
                      },
                      "identification-number": {
                        "type": "string",
                        "example": "B12345678"
                      }
                    }
                  }
                ]
              },
              "relationships": {
                "$ref": "#/components/schemas/VerificationRelationshipsBaseData"
              }
            }
          }
        ]
      },
      "ExtractionResponses": {
        "type": [
          "null",
          "array"
        ],
        "description": "A list of extractions resulting from processing the uploaded documents corresponding to the document's extraction configuration.",
        "items": {
          "type": "object",
          "properties": {
            "extraction-type": {
              "examples": [
                "guided",
                "unguided"
              ],
              "type": "string"
            },
            "field-name": {
              "type": "string"
            },
            "results": {
              "type": "array",
              "description": "A list of objects containing the actual value extracted and additional information relevant to the extraction result.",
              "items": {
                "properties": {
                  "value": {
                    "type": "string"
                  },
                  "page": {
                    "description": "The page number the extraction result is detected. Page is 1-indexed.",
                    "type": "integer"
                  },
                  "match-level": {
                    "description": "If extraction-type is guided, match-level describes the degree in which the extracted value is similar to the source value. Otherwise the match-level is full.",
                    "examples": [
                      "none",
                      "partial",
                      "full"
                    ],
                    "type": "string"
                  },
                  "metadata": {
                    "description": "This is a free-form object containing potentially helpful metadata on the extraction result.",
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        }
      },
      "VerificationDocumentData": {
        "title": "Document Verification Data",
        "allOf": [
          {
            "$ref": "#/components/schemas/VerificationTopLevelData"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "verification/document",
                "example": "verification/document"
              },
              "attributes": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/VerificationAttributesBaseData"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "fields": {
                        "description": "JSON key-value pairs of field name to field value.",
                        "type": "object"
                      },
                      "files": {
                        "description": "The files uploaded to the associated document for processing.",
                        "items": {
                          "properties": {
                            "filename": {
                              "examples": [
                                "multipage_example.pdf"
                              ],
                              "type": "string"
                            },
                            "url": {
                              "examples": [
                                "https://withpersona.com/api/v1/files/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdHc4IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--c4482780e1fa5c7bc0a26fc73b1dd76c44b98ad8/multipage_example.pdf"
                              ],
                              "type": "string"
                            },
                            "byte-size": {
                              "examples": [
                                2048
                              ],
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "files-normalized": {
                        "items": {
                          "properties": {
                            "filename": {
                              "examples": [
                                "multipage_example.pdf"
                              ],
                              "type": "string"
                            },
                            "url": {
                              "examples": [
                                "https://withpersona.com/api/v1/files/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdHc4IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--c4482780e1fa5c7bc0a26fc73b1dd76c44b98ad8/multipage_example.pdf"
                              ],
                              "type": "string"
                            },
                            "byte-size": {
                              "examples": [
                                2048
                              ],
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "extraction-responses": {
                        "$ref": "#/components/schemas/ExtractionResponses"
                      }
                    }
                  }
                ]
              },
              "relationships": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/VerificationRelationshipsBaseData"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "document": {
                        "properties": {
                          "data": {
                            "properties": {
                              "id": {
                                "examples": [
                                  "doc_ABC123"
                                ],
                                "type": "string"
                              },
                              "type": {
                                "examples": [
                                  "document/generic"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      }
                    }
                  }
                ]
              }
            }
          }
        ]
      },
      "VerificationDatabaseData": {
        "title": "Database Verification Data",
        "allOf": [
          {
            "$ref": "#/components/schemas/VerificationTopLevelData"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "verification/database",
                "example": "verification/database"
              },
              "attributes": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/VerificationAttributesBaseData"
                  },
                  {
                    "$ref": "#/components/schemas/DefaultFields"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "normalized-address-street-1": {
                        "description": "Normalized street name of residence address.",
                        "examples": [
                          "123 Main St"
                        ],
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "normalized-address-street-2": {
                        "description": "Normalized extension of residence address, usually apartment or suite number.",
                        "examples": [
                          "Apt 1"
                        ],
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "normalized-address-city": {
                        "description": "Normalized city of residence address. Not all international addresses use this attribute.",
                        "examples": [
                          "San Francisco"
                        ],
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "normalized-address-subdivision": {
                        "description": "Normalized state or subdivision of residence address. In the US, this should be the abbreviated name. Not all international addresses use this attribute.",
                        "examples": [
                          "CA"
                        ],
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "normalized-address-postal-code": {
                        "description": "Normalized ZIP or postal code of residence address. Not all international addresses use this attribute.",
                        "examples": [
                          "94111"
                        ],
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "identification-number": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "document-number": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                ]
              },
              "relationships": {
                "$ref": "#/components/schemas/VerificationRelationshipsBaseData"
              }
            }
          }
        ]
      },
      "VerificationEmailAddressData": {
        "title": "Email Address Verification Data",
        "allOf": [
          {
            "$ref": "#/components/schemas/VerificationTopLevelData"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "verification/email-address",
                "example": "verification/email-address"
              },
              "attributes": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/VerificationAttributesBaseData"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "email-address": {
                        "example": "jane@doe.com",
                        "type": "string"
                      },
                      "confirmation-code": {
                        "example": "12345",
                        "type": "string"
                      }
                    }
                  }
                ]
              },
              "relationships": {
                "$ref": "#/components/schemas/VerificationRelationshipsBaseData"
              }
            }
          }
        ]
      },
      "VerificationPhoneNumberData": {
        "title": "Phone Number Verification Data",
        "allOf": [
          {
            "$ref": "#/components/schemas/VerificationTopLevelData"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "verification/phone-number",
                "example": "verification/phone-number"
              },
              "attributes": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/VerificationAttributesBaseData"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "phone-number": {
                        "example": "+14169671111",
                        "type": "string"
                      },
                      "confirmation-code": {
                        "example": "12345",
                        "type": "string"
                      },
                      "metadata": {
                        "type": "object",
                        "properties": {
                          "telesign-risk-score": {
                            "type": "integer",
                            "example": 306
                          }
                        }
                      }
                    }
                  }
                ]
              },
              "relationships": {
                "$ref": "#/components/schemas/VerificationRelationshipsBaseData"
              }
            }
          }
        ]
      },
      "VerificationData": {
        "type": "object",
        "oneOf": [
          {
            "$ref": "#/components/schemas/VerificationAamvaData"
          },
          {
            "$ref": "#/components/schemas/VerificationDocumentData"
          },
          {
            "$ref": "#/components/schemas/VerificationDatabaseData"
          },
          {
            "$ref": "#/components/schemas/VerificationEmailAddressData"
          },
          {
            "$ref": "#/components/schemas/VerificationPhoneNumberData"
          }
        ]
      },
      "DocumentGeneric": {
        "type": "object",
        "description": "A Document Generic object",
        "properties": {
          "attributes": {
            "properties": {
              "status": {
                "enum": [
                  "initiated",
                  "submitted",
                  "processed",
                  "errored"
                ],
                "type": "string"
              },
              "created-at": {
                "examples": [
                  "2020-04-18T15:43:25.000Z"
                ],
                "type": "string"
              },
              "processed-at": {
                "examples": [
                  "2020-04-18T15:43:25.000Z"
                ],
                "type": [
                  "null",
                  "string"
                ]
              },
              "processed-at-ts": {
                "examples": [
                  1593047530
                ],
                "type": [
                  "null",
                  "integer"
                ]
              },
              "kind": {
                "examples": [
                  "proof_of_employment"
                ],
                "type": "string"
              },
              "files": {
                "description": "The files uploaded to the document for processing.",
                "items": {
                  "properties": {
                    "filename": {
                      "examples": [
                        "multipage_example.pdf"
                      ],
                      "type": "string"
                    },
                    "url": {
                      "examples": [
                        "https://withpersona.com/api/v1/files/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdHc4IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--c4482780e1fa5c7bc0a26fc73b1dd76c44b98ad8/multipage_example.pdf"
                      ],
                      "type": "string"
                    },
                    "byte-size": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "files-normalized": {
                "items": {
                  "properties": {
                    "filename": {
                      "examples": [
                        "multipage_example.pdf"
                      ],
                      "type": "string"
                    },
                    "url": {
                      "examples": [
                        "https://withpersona.com/api/v1/files/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdHc4IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--c4482780e1fa5c7bc0a26fc73b1dd76c44b98ad8/multipage_example.pdf"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "extraction-responses": {
                "$ref": "#/components/schemas/ExtractionResponses"
              },
              "document-type": {
                "description": "The classification of the document if detected. If unable to be detected, this will be other.",
                "examples": [
                  "bank_statement",
                  "standard_utility_bill",
                  "other"
                ],
                "type": [
                  "null",
                  "string"
                ]
              },
              "fields": {
                "description": "JSON key-value pairs of field name to field value.",
                "type": "object"
              }
            },
            "type": "object"
          },
          "id": {
            "examples": [
              "doc_8HfuATwEZbXT532wv6pzWMTN"
            ],
            "type": "string"
          },
          "relationships": {
            "properties": {
              "inquiry": {
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "examples": [
                          "inq_jdRz9RHNRzkjxUqZApHwX1ZU"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "examples": [
                          "inquiry"
                        ],
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "template": {
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "examples": [
                          "tmpl_sXu8UYP3L1xQLAB9XCRUQA5g"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "examples": [
                          "template"
                        ],
                        "type": "string"
                      }
                    },
                    "type": [
                      "null",
                      "object"
                    ]
                  }
                },
                "type": "object"
              },
              "inquiry-template-version": {
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "examples": [
                          "itmplv_1ivdvZUKPLAtWgsQdEvmi6wj"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "examples": [
                          "inquiry-template-version"
                        ],
                        "type": "string"
                      }
                    },
                    "type": [
                      "null",
                      "object"
                    ]
                  }
                },
                "type": "object"
              },
              "inquiry-template": {
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "examples": [
                          "itmpl_mNKRtWCMWB9Lbccc85DjgJnK"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "examples": [
                          "inquiry-template"
                        ],
                        "type": "string"
                      }
                    },
                    "type": [
                      "null",
                      "object"
                    ]
                  }
                },
                "type": "object"
              },
              "document-files": {
                "properties": {
                  "data": {
                    "items": {
                      "properties": {
                        "id": {
                          "examples": [
                            "docf_aNBCzPCLPC2Ladef86DjbInK"
                          ],
                          "type": "string"
                        },
                        "type": {
                          "examples": [
                            "document-file"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "type": {
            "examples": [
              "document/generic"
            ],
            "type": "string"
          }
        }
      },
      "Event": {
        "type": "object",
        "description": "An Event object",
        "properties": {
          "type": {
            "type": "string",
            "examples": [
              "event"
            ]
          },
          "id": {
            "type": "string",
            "examples": [
              "evt_ABC123"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "examples": [
                  "inquiry.expired",
                  "workflow-run.created",
                  "account.tag-added"
                ]
              },
              "payload": {
                "description": "The entire serialized entity that triggered the event",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "examples": [
                          "inquiry",
                          "workflow-run",
                          "account"
                        ]
                      },
                      "id": {
                        "type": "string",
                        "examples": [
                          "inq_ABC123",
                          "wfr_ABC123",
                          "act_ABC123"
                        ]
                      },
                      "attributes": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                }
              },
              "created-at": {
                "type": "string",
                "format": "date-time",
                "examples": [
                  "2023-09-23T17:14:01.918Z"
                ]
              }
            }
          }
        }
      },
      "InquiryFields": {
        "description": "JSON key-value pairs of field name to field value. Schema is defined by your Inquiry Template.",
        "allOf": [
          {
            "$ref": "#/components/schemas/DefaultFields"
          },
          {
            "type": "object",
            "properties": {
              "address-country-code": {
                "description": "optional",
                "examples": [
                  "US",
                  "AU",
                  "GB"
                ],
                "type": "string"
              }
            },
            "additionalProperties": true
          }
        ]
      },
      "InquiryTemplate": {
        "type": "object",
        "description": "An Inquiry Template object",
        "properties": {
          "type": {
            "examples": [
              "inquiry-template"
            ],
            "type": "string"
          },
          "id": {
            "examples": [
              "itmpl_ABC123"
            ],
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "examples": [
                  "active"
                ],
                "type": "string"
              },
              "name": {
                "examples": [
                  "Government ID Front and Back"
                ],
                "type": "string"
              }
            }
          },
          "relationships": {
            "properties": {
              "latest-published-version": {
                "properties": {
                  "data": {
                    "properties": {
                      "type": {
                        "type": "string",
                        "examples": [
                          "inquiry-template-version"
                        ]
                      },
                      "id": {
                        "type": "string",
                        "examples": [
                          "itmplv_ABC123"
                        ]
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        }
      },
      "InquirySession": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "examples": [
              "inquiry-session"
            ]
          },
          "id": {
            "type": "string",
            "examples": [
              "iqse_ABC123"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "examples": [
                  "expired"
                ]
              },
              "created-at": {
                "type": "string",
                "format": "date-time",
                "examples": [
                  "2023-09-22T17:13:50.000Z"
                ]
              },
              "ip-address": {
                "type": "string",
                "examples": [
                  "139.178.128.13"
                ]
              },
              "user-agent": {
                "type": "string",
                "examples": [
                  "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36"
                ]
              },
              "os-name": {
                "type": "string",
                "examples": [
                  "iOS"
                ]
              },
              "os-full-version": {
                "type": "string",
                "examples": [
                  "17.0.1"
                ]
              },
              "device-type": {
                "type": "string",
                "examples": [
                  "smartphone",
                  "desktop"
                ]
              },
              "device-name": {
                "type": [
                  "string",
                  "null"
                ],
                "examples": [
                  "Apple iPhone11,2"
                ]
              },
              "browser-name": {
                "type": [
                  "string",
                  "null"
                ],
                "examples": [
                  "Chrome"
                ]
              },
              "browser-full-version": {
                "type": [
                  "string",
                  "null"
                ],
                "examples": [
                  "113.0.0.0"
                ]
              },
              "mobile-sdk-name": {
                "type": [
                  "string",
                  "null"
                ],
                "examples": [
                  "Inquiry"
                ]
              },
              "mobile-sdk-full-version": {
                "type": [
                  "string",
                  "null"
                ],
                "examples": [
                  "0.0.1-SNAPSHOT"
                ]
              },
              "is-proxy": {
                "type": "boolean"
              },
              "is-tor": {
                "type": "boolean"
              },
              "is-datacenter": {
                "type": "boolean"
              },
              "threat-level": {
                "type": "string",
                "examples": [
                  "low",
                  "medium"
                ]
              },
              "country-code": {
                "type": "string",
                "examples": [
                  "US"
                ]
              },
              "country-name": {
                "type": "string",
                "examples": [
                  "United States of America"
                ]
              },
              "region-code": {
                "type": "string",
                "examples": [
                  "CA"
                ]
              },
              "region-name": {
                "type": "string",
                "examples": [
                  "California"
                ]
              },
              "latitude": {
                "type": "number",
                "examples": [
                  37.32300186
                ]
              },
              "longitude": {
                "type": "number",
                "examples": [
                  -122.03218079
                ]
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "inquiry": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "examples": [
                          "inquiry"
                        ]
                      },
                      "id": {
                        "type": "string",
                        "examples": [
                          "inq_ABC123"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ReportBaseRequestData": {
        "type": "object",
        "title": "Reports Request Data",
        "description": "The inputs to create a report",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "account-id": {
                "type": "string"
              },
              "reference-id": {
                "type": "string"
              },
              "report-template-id": {
                "type": "string"
              }
            }
          }
        }
      },
      "ReportWatchlistRequestData": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReportBaseRequestData"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "report/watchlist",
                "example": "report/watchlist"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name-first": {
                    "type": "string",
                    "description": "The input first name of the search individual",
                    "example": "Joe"
                  },
                  "name-middle": {
                    "type": "string",
                    "description": "The input middle name of the search individual",
                    "example": "N"
                  },
                  "name-last": {
                    "type": "string",
                    "description": "The input last name of the search individual",
                    "example": "Doe"
                  },
                  "term": {
                    "type": "string",
                    "description": "The input combined term used for searching (first + middle + last name). Either the name or the term fields are required.",
                    "example": "Joe N Doe"
                  },
                  "birthdate": {
                    "type": "string",
                    "description": "The input DOB in YYYY-MM-DD format",
                    "example": "1991-10-07"
                  },
                  "country-code": {
                    "type": "string",
                    "description": "The input search country in alpha2 format",
                    "example": "US"
                  }
                }
              }
            }
          }
        ]
      },
      "ReportWatchlistRequest": {
        "type": "object",
        "title": "Watchlist Request",
        "description": "Fields required to create a Watchlist Report",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ReportWatchlistRequestData"
          }
        }
      },
      "ReportCryptoAddressWatchlistRequestData": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReportBaseRequestData"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "report/crypto-address-watchlist",
                "example": "report/crypto-address-watchlist"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "crypto-address": {
                    "type": "string",
                    "description": "The crypto address to search",
                    "example": "1Fz29BQp82pE3vXXcsZoMNQ3KSHfMzfMe3"
                  }
                }
              }
            }
          }
        ]
      },
      "ReportCryptoAddressWatchlistRequest": {
        "type": "object",
        "title": "Crypto Address Watchlist Request",
        "description": "Fields required to create a Crypto Address Watchlist Report",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ReportCryptoAddressWatchlistRequestData"
          }
        }
      },
      "ReportAdverseMediaRequestData": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReportBaseRequestData"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "report/adverse-media",
                "example": "report/adverse-media"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name-first": {
                    "type": "string",
                    "description": "The input first name of the search individual",
                    "example": "Joe"
                  },
                  "name-middle": {
                    "type": "string",
                    "description": "The input middle name of the search individual",
                    "example": "N"
                  },
                  "name-last": {
                    "type": "string",
                    "description": "The input last name of the search individual",
                    "example": "Doe"
                  },
                  "term": {
                    "type": "string",
                    "description": "The input combined term used for searching (first + middle + last name). Either the name or the term fields are required.",
                    "example": "Joe N Doe"
                  },
                  "birthdate": {
                    "type": "string",
                    "description": "The input DOB in YYYY-MM-DD format",
                    "example": "1991-10-07"
                  },
                  "country-code": {
                    "type": "string",
                    "description": "The input search country in alpha2 format",
                    "example": "US"
                  }
                }
              }
            }
          }
        ]
      },
      "ReportAdverseMediaRequest": {
        "type": "object",
        "title": "Adverse Media Request",
        "description": "Fields required to create an Adverse Media Report",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ReportAdverseMediaRequestData"
          }
        }
      },
      "ReportAddressLookupRequestData": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReportBaseRequestData"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "report/address-lookup",
                "example": "report/address-lookup"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "addressee": {
                    "type": "string",
                    "example": "Joe Doe"
                  },
                  "address-street-1": {
                    "type": "string",
                    "example": "1 Example Way"
                  },
                  "address-street-2": {
                    "type": "string",
                    "example": "Ste 300"
                  },
                  "address-city": {
                    "type": "string",
                    "example": "Cupertino"
                  },
                  "address-subdivision": {
                    "type": "string",
                    "example": "California"
                  },
                  "address-postal-code": {
                    "type": "string",
                    "example": "95014"
                  }
                }
              }
            }
          }
        ]
      },
      "ReportAddressLookupRequest": {
        "type": "object",
        "title": "Address Lookup Request",
        "description": "Fields required to create an Address Lookup Report",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ReportAddressLookupRequestData"
          }
        }
      },
      "ReportPoliticallyExposedPersonRequestData": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReportBaseRequestData"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "report/politically-exposed-person",
                "example": "report/politically-exposed-person"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "query": {
                    "type": "object",
                    "properties": {
                      "name-first": {
                        "type": "string",
                        "description": "The input first name of the search individual",
                        "example": "Joe"
                      },
                      "name-middle": {
                        "type": "string",
                        "description": "The input middle name of the search individual",
                        "example": "N"
                      },
                      "name-last": {
                        "type": "string",
                        "description": "The input last name of the search individual",
                        "example": "Doe"
                      },
                      "term": {
                        "type": "string",
                        "description": "The input combined term used for searching (first + middle + last name). Either the name or the term fields are required.",
                        "example": "Joe N Doe"
                      },
                      "birthdate": {
                        "type": "string",
                        "description": "The input DOB in YYYY-MM-DD format",
                        "example": "1991-10-07"
                      },
                      "country-code": {
                        "type": "string",
                        "description": "The input search country in alpha2 format",
                        "example": "US"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "ReportPoliticallyExposedPersonRequest": {
        "type": "object",
        "title": "Politically Exposed Person Request",
        "description": "Fields required to create a Politically Exposed Person Report",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ReportPoliticallyExposedPersonRequestData"
          }
        }
      },
      "ReportEmailAddressRequestData": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReportBaseRequestData"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "report/email-address",
                "example": "report/email-address"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "query": {
                    "type": "object",
                    "properties": {
                      "email-address": {
                        "type": "string",
                        "description": "The input email address of the search",
                        "example": "example@domain.com"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "ReportEmailAddressRequest": {
        "type": "object",
        "title": "Email Address Request",
        "description": "Fields required to create an Email Address Report",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ReportEmailAddressRequestData"
          }
        }
      },
      "ReportPhoneRiskRequestData": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReportBaseRequestData"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "report/phone-risk",
                "example": "report/phone-risk"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "phone-number": {
                    "type": "string",
                    "description": "The input phone number of the search",
                    "example": "+14169671111"
                  }
                }
              }
            }
          }
        ]
      },
      "ReportPhoneRiskRequest": {
        "type": "object",
        "title": "Phone Risk Request",
        "description": "Fields required to create a Phone Risk Report",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ReportPhoneRiskRequestData"
          }
        }
      },
      "ReportSocialMediaRequestData": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReportBaseRequestData"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "report/social-media",
                "example": "report/social-media"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name-first": {
                    "type": "string",
                    "example": "Norman"
                  },
                  "name-last": {
                    "type": "string",
                    "example": "Mannor"
                  },
                  "birthdate": {
                    "type": "string",
                    "description": "Date of birth in ISO 8601 format",
                    "example": "19911007T000000-0400"
                  },
                  "phone-number": {
                    "type": "string",
                    "format": "nullable",
                    "example": "+14169671111"
                  },
                  "email-address": {
                    "type": "string",
                    "format": "nullable",
                    "example": "address@domain.com"
                  },
                  "address-city": {
                    "type": "string",
                    "example": "Funkyville"
                  },
                  "address-subdivision": {
                    "type": "string",
                    "description": "Sub-national subdivision such as a US state or a Canadian province",
                    "example": "Wisconsin"
                  }
                }
              }
            }
          }
        ]
      },
      "ReportSocialMediaRequest": {
        "type": "object",
        "title": "Social Media Request",
        "description": "Fields required to create a Social Media Report",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ReportSocialMediaRequestData"
          }
        }
      },
      "ReportBusinessLookupRequestData": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ReportBaseRequestData"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "report/business-lookup",
                "example": "report/business-lookup"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "query": {
                    "type": "object",
                    "properties": {
                      "business-name": {
                        "type": "string",
                        "example": "Coffee Shop"
                      },
                      "phone-number": {
                        "type": "string",
                        "format": "nullable"
                      },
                      "website": {
                        "type": "string",
                        "format": "nullable"
                      },
                      "ein": {
                        "type": "string",
                        "format": "nullable"
                      },
                      "address-street-1": {
                        "type": "string",
                        "example": "123 Funky St"
                      },
                      "address-street-2": {
                        "type": "string",
                        "format": "nullable"
                      },
                      "address-city": {
                        "type": "string",
                        "example": "Funkyville"
                      },
                      "address-subdivision": {
                        "type": "string",
                        "description": "Subnational division of a country such as a US state.",
                        "example": "CA"
                      },
                      "address-postal-code": {
                        "type": "string",
                        "example": "12345"
                      },
                      "address-country-code": {
                        "type": "string",
                        "format": "nullable",
                        "example": "US"
                      },
                      "incorporation-state": {
                        "type": "string",
                        "format": "nullable",
                        "example": "CA"
                      },
                      "associated-people": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "nullable",
                          "example": "John Doe"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "ReportBusinessLookupRequest": {
        "type": "object",
        "title": "Business Lookup Request",
        "description": "Fields required to create a Business Lookup Report",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ReportBusinessLookupRequestData"
          }
        }
      },
      "ReportRequest": {
        "type": "object",
        "oneOf": [
          {
            "$ref": "#/components/schemas/ReportWatchlistRequest"
          },
          {
            "$ref": "#/components/schemas/ReportCryptoAddressWatchlistRequest"
          },
          {
            "$ref": "#/components/schemas/ReportAdverseMediaRequest"
          },
          {
            "$ref": "#/components/schemas/ReportAddressLookupRequest"
          },
          {
            "$ref": "#/components/schemas/ReportPoliticallyExposedPersonRequest"
          },
          {
            "$ref": "#/components/schemas/ReportEmailAddressRequest"
          },
          {
            "$ref": "#/components/schemas/ReportPhoneRiskRequest"
          },
          {
            "$ref": "#/components/schemas/ReportSocialMediaRequest"
          },
          {
            "$ref": "#/components/schemas/ReportBusinessLookupRequest"
          }
        ]
      },
      "ReportWatchlist": {
        "type": "object",
        "title": "Watchlist",
        "description": "A Watchlist Report",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ReportWatchlistData"
          }
        }
      },
      "ReportCryptoAddressWatchlist": {
        "type": "object",
        "title": "Crypto Address Watchlist",
        "description": "A Crypto Address Watchlist Report",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ReportCryptoAddressWatchlistData"
          }
        }
      },
      "ReportAdverseMedia": {
        "type": "object",
        "title": "Adverse Media",
        "description": "An Adverse Media Report",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ReportAdverseMediaData"
          }
        }
      },
      "ReportAddressLookup": {
        "type": "object",
        "title": "Address Lookup",
        "description": "An Address Lookup Report",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ReportAddressLookupData"
          }
        }
      },
      "ReportPoliticallyExposedPerson": {
        "type": "object",
        "title": "Politically Exposed Person",
        "description": "A Politically Exposed Person Report",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ReportPoliticallyExposedPersonData"
          }
        }
      },
      "ReportEmailAddress": {
        "type": "object",
        "title": "Email Address",
        "description": "An Email Address Report",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ReportEmailAddressData"
          }
        }
      },
      "ReportPhoneRisk": {
        "type": "object",
        "title": "Phone Risk",
        "description": "A Phone Risk Report",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ReportPhoneRiskData"
          }
        }
      },
      "ReportSocialMedia": {
        "type": "object",
        "title": "Social Media",
        "description": "A Social Media Report",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ReportSocialMediaData"
          }
        }
      },
      "ReportBusinessLookup": {
        "type": "object",
        "title": "Business Lookup",
        "description": "A Business Lookup Report",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ReportBusinessLookupData"
          }
        }
      },
      "Report": {
        "type": "object",
        "oneOf": [
          {
            "$ref": "#/components/schemas/ReportWatchlist"
          },
          {
            "$ref": "#/components/schemas/ReportCryptoAddressWatchlist"
          },
          {
            "$ref": "#/components/schemas/ReportAdverseMedia"
          },
          {
            "$ref": "#/components/schemas/ReportAddressLookup"
          },
          {
            "$ref": "#/components/schemas/ReportPoliticallyExposedPerson"
          },
          {
            "$ref": "#/components/schemas/ReportEmailAddress"
          },
          {
            "$ref": "#/components/schemas/ReportPhoneRisk"
          },
          {
            "$ref": "#/components/schemas/ReportSocialMedia"
          },
          {
            "$ref": "#/components/schemas/ReportBusinessLookup"
          }
        ]
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "examples": [
                  "approved",
                  "created",
                  "declined",
                  "needs review"
                ]
              },
              "reference-id": {
                "type": [
                  "string",
                  "null"
                ],
                "examples": [
                  "abc-123"
                ]
              },
              "external-id": {
                "type": [
                  "string",
                  "null"
                ],
                "examples": [
                  "1513"
                ]
              },
              "fields": {
                "type": "object",
                "properties": {
                  "country": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "examples": [
                          "string"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "examples": [
                          "US"
                        ]
                      }
                    }
                  },
                  "name-first": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "examples": [
                          "string"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "examples": [
                          "LeBron"
                        ]
                      }
                    }
                  },
                  "name-last": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "examples": [
                          "string"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "examples": [
                          "James"
                        ]
                      }
                    }
                  },
                  "selected-id-class": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "examples": [
                          "string"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "examples": [
                          "dl"
                        ]
                      }
                    }
                  },
                  "front-photo": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "examples": [
                          "file"
                        ]
                      },
                      "value": {
                        "type": "object",
                        "properties": {
                          "filename": {
                            "type": "string",
                            "examples": [
                              "image.png"
                            ]
                          },
                          "byte-size": {
                            "type": "integer",
                            "examples": [
                              237011
                            ],
                            "default": 0
                          },
                          "mime-type": {
                            "type": "string",
                            "examples": [
                              "image/png"
                            ]
                          },
                          "url": {
                            "type": "string",
                            "examples": [
                              "https://files.withpersona.com/image.png?access_token=ACCESS_ABC123"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "back-photo": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "examples": [
                          "file"
                        ]
                      },
                      "value": {
                        "type": "object",
                        "properties": {
                          "filename": {
                            "type": "string",
                            "examples": [
                              "image.png"
                            ]
                          },
                          "byte-size": {
                            "type": "integer",
                            "examples": [
                              237011
                            ],
                            "default": 0
                          },
                          "mime-type": {
                            "type": "string",
                            "examples": [
                              "image/png"
                            ]
                          },
                          "url": {
                            "type": "string",
                            "examples": [
                              "https://files.withpersona.com/image.png?access_token=ACCESS_ABC123"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "tags": {
                "type": "array"
              },
              "created-at": {
                "format": "date-time",
                "examples": [
                  "2023-05-26T16:49:33.860Z"
                ]
              },
              "updated-at": {
                "format": "date-time",
                "examples": [
                  "2023-05-26T16:49:43.965Z"
                ]
              }
            }
          },
          "id": {
            "type": "string",
            "examples": [
              "txn_ABC123"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "reviewer": {
                "type": "object",
                "description": "The entity that reviewed the transaction",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "examples": [
                          "workflow-run",
                          "workflow-step",
                          "user"
                        ]
                      },
                      "id": {
                        "type": "string",
                        "examples": [
                          "wfr_ABC123",
                          "wfs_ABC123",
                          "user_ABC123"
                        ]
                      }
                    }
                  }
                }
              },
              "transaction-label": {
                "type": "object",
                "properties": {
                  "data": {}
                }
              },
              "transaction-type": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "examples": [
                          "transaction-type"
                        ]
                      },
                      "id": {
                        "type": "string",
                        "examples": [
                          "txntp_ABC123"
                        ]
                      }
                    }
                  }
                }
              },
              "related-objects": {
                "type": "object",
                "description": "Any object involved in this transaction's related workflow runs",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "examples": [
                            "account"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "examples": [
                            "act_ABC123"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "type": {
            "type": "string",
            "examples": [
              "transaction"
            ]
          }
        }
      },
      "UserAuditLog": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "user-audit-log"
          },
          "id": {
            "type": "string",
            "example": "ual_ABC123"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string",
                "examples": [
                  "/api/internal/dashboard/v1/cases/case_ABC123"
                ]
              },
              "method": {
                "type": "string",
                "examples": [
                  "GET",
                  "POST"
                ]
              },
              "get-params": {
                "type": "object",
                "description": "The GET params of the request. Schema depends on the action taken.",
                "additionalProperties": true
              },
              "post-params": {
                "type": "object",
                "description": "The POST params of the request. Schema depends on the action taken.",
                "additionalProperties": true
              },
              "ip-address": {
                "type": "string",
                "examples": [
                  "127.0.0.1"
                ]
              },
              "created-at": {
                "type": "string",
                "format": "date-time",
                "examples": [
                  "2023-10-03T19:41:30.155Z"
                ]
              },
              "impersonator-email-address": {
                "type": [
                  "string",
                  "null"
                ],
                "examples": [
                  "user@withpersona.com"
                ]
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "user": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "examples": [
                          "user"
                        ]
                      },
                      "id": {
                        "type": "string",
                        "examples": [
                          "user_ABC123"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "VerificationDatabase": {
        "type": "object",
        "title": "Database Verification",
        "description": "A Database Verification",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/VerificationDatabaseData"
          }
        }
      },
      "VerificationDocument": {
        "type": "object",
        "title": "Document Verification",
        "description": "A Document Verification",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/VerificationDocumentData"
          }
        }
      },
      "VerificationEmailAddress": {
        "type": "object",
        "title": "Email Address Verification",
        "description": "An Email Address Verification",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/VerificationEmailAddressData"
          }
        }
      },
      "VerificationPhoneNumber": {
        "type": "object",
        "title": "Phone Number Verification",
        "description": "A Phone Number Verification",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/VerificationPhoneNumberData"
          }
        }
      },
      "VerificationAamva": {
        "type": "object",
        "title": "AAMVA Verification",
        "description": "An AAMVA Verification",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/VerificationAamvaData"
          }
        }
      },
      "Verification": {
        "type": "object",
        "oneOf": [
          {
            "$ref": "#/components/schemas/VerificationAamva"
          },
          {
            "$ref": "#/components/schemas/VerificationDocument"
          },
          {
            "$ref": "#/components/schemas/VerificationDatabase"
          },
          {
            "$ref": "#/components/schemas/VerificationEmailAddress"
          },
          {
            "$ref": "#/components/schemas/VerificationPhoneNumber"
          }
        ]
      },
      "Webhook": {
        "type": "object",
        "description": "A Webhook object",
        "properties": {
          "type": {
            "examples": [
              "webhook"
            ],
            "type": "string"
          },
          "id": {
            "examples": [
              "wbh_ABC123"
            ],
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "examples": [
                  "disabled"
                ]
              },
              "url": {
                "type": "string",
                "examples": [
                  "https://withpersona.com"
                ]
              },
              "api-version": {
                "type": "string",
                "format": "date",
                "examples": [
                  "2023-01-05"
                ]
              },
              "api-key-inflection": {
                "type": "string",
                "examples": [
                  "kebab"
                ]
              },
              "api-attributes-blocklist": {
                "type": "array",
                "items": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "examples": [
                  [
                    "address-*",
                    "name-last",
                    "/data/attributes/fields/*-number"
                  ]
                ]
              },
              "file-access-token-expires-in": {
                "type": "integer",
                "format": "int32",
                "examples": [
                  21600
                ]
              },
              "enabled-events": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "examples": [
                  [
                    "account.created",
                    "verification.created",
                    "*"
                  ]
                ]
              },
              "payload-filter": {
                "type": [
                  "object",
                  "null"
                ]
              },
              "created-at": {
                "type": "string",
                "format": "date-time",
                "examples": [
                  "2023-09-21T18:29:40.000Z"
                ]
              }
            }
          }
        }
      },
      "WebhookWithSecret": {
        "type": "object",
        "description": "A Webhook object",
        "properties": {
          "type": {
            "examples": [
              "webhook"
            ],
            "type": "string"
          },
          "id": {
            "examples": [
              "wbh_ABC123"
            ],
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "examples": [
                  "disabled"
                ]
              },
              "url": {
                "type": "string",
                "examples": [
                  "https://withpersona.com"
                ]
              },
              "secret": {
                "description": "secret is deprecated in favor of secrets",
                "type": "string",
                "examples": [
                  "wbhsec_abcdefgh-1234-5678-9ijk-lmnopqrstuvw"
                ]
              },
              "secrets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "examples": [
                        "wbhsec_abcdefgh-1234-5678-9ijk-lmnopqrstuvw"
                      ]
                    },
                    "expires-at": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "format": "date-time"
                    }
                  }
                }
              },
              "api-version": {
                "type": "string",
                "format": "date",
                "examples": [
                  "2023-01-05"
                ]
              },
              "api-key-inflection": {
                "type": "string",
                "examples": [
                  "kebab"
                ]
              },
              "api-attributes-blocklist": {
                "type": "array",
                "items": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "examples": [
                  [
                    "address-*",
                    "name-last",
                    "/data/attributes/fields/*-number"
                  ]
                ]
              },
              "file-access-token-expires-in": {
                "type": "integer",
                "format": "int32",
                "examples": [
                  21600
                ]
              },
              "enabled-events": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "examples": [
                  [
                    "account.created",
                    "verification.created",
                    "*"
                  ]
                ]
              },
              "payload-filter": {
                "type": [
                  "object",
                  "null"
                ]
              },
              "created-at": {
                "type": "string",
                "format": "date-time",
                "examples": [
                  "2023-09-21T18:29:40.000Z"
                ]
              }
            }
          }
        }
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "examples": {
              "Result": {
                "summary": "Bad Request",
                "value": {
                  "errors": [
                    {
                      "title": "Bad Request",
                      "details": "data.attributes.type must be a string"
                    }
                  ]
                }
              }
            },
            "schema": {
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "title": {
                        "description": "Bad Request",
                        "type": "string"
                      },
                      "details": {
                        "type": "string",
                        "examples": [
                          "data.attributes.name is missing",
                          "data.type must be filled",
                          "meta.object_ids must be an array"
                        ]
                      }
                    }
                  }
                }
              },
              "type": "object"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "examples": {
              "Result": {
                "summary": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "title": "Must be authenticated to access this endpoint"
                    }
                  ]
                }
              }
            },
            "schema": {
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "title": {
                        "description": "Unauthorized",
                        "examples": [
                          "Must be authenticated to access this endpoint",
                          "Token is invalid"
                        ],
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "type": "object"
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "examples": {
              "Result": {
                "summary": "Forbidden",
                "value": {
                  "errors": [
                    {
                      "title": "Forbidden",
                      "details": "IP address is not permitted access to current environment"
                    }
                  ]
                }
              }
            },
            "schema": {
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "title": {
                        "description": "Forbidden",
                        "type": "string"
                      },
                      "details": {
                        "type": "string",
                        "examples": [
                          "Resource cannot be created in an inactive environment",
                          "Verification creation API is not enabled",
                          "IP address is not permitted access to current environment"
                        ]
                      }
                    }
                  }
                }
              },
              "type": "object"
            }
          }
        }
      },
      "TooManyRequests": {
        "description": "Too Many Requests",
        "content": {
          "application/json": {
            "examples": {
              "Result": {
                "summary": "Too Many Requests",
                "value": {
                  "errors": [
                    {
                      "title": "Rate limit exceeded",
                      "details": "You have hit your rate limit of 300 requests / min. Please reach out to support@withpersona.com if you need this changed."
                    }
                  ]
                }
              }
            },
            "schema": {
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "title": {
                        "type": "string",
                        "examples": [
                          "Rate limit exceeded",
                          "Quota exceeded"
                        ]
                      },
                      "details": {
                        "type": "string",
                        "examples": [
                          "You have hit your rate limit of 300 requests / min. Please reach out to support@withpersona.com if you need this changed.",
                          "You have hit your create_verification quota limit of 300 requests. Please reach out to support@withpersona.com if you need this changed."
                        ]
                      }
                    }
                  }
                }
              },
              "type": "object"
            }
          }
        }
      },
      "Conflict": {
        "description": "Conflict",
        "content": {
          "application/json": {
            "examples": {
              "Result": {
                "summary": "Conflict",
                "value": {
                  "errors": [
                    {
                      "title": "Conflict",
                      "details": "Resource already exists as an active resource"
                    }
                  ]
                }
              }
            },
            "schema": {
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "title": {
                        "description": "Conflict",
                        "examples": [
                          "Conflict",
                          "Record not unique",
                          "Stale object error"
                        ],
                        "type": "string"
                      },
                      "details": {
                        "type": "string",
                        "examples": [
                          "Name already exists as an active item in list",
                          "Inquiry already redacted",
                          "Record not unique",
                          "Attempted to update a record that was just modified. Please try again.",
                          "data.attributes.inquiry_id does not require verification/email-address"
                        ]
                      }
                    }
                  }
                }
              },
              "type": "object"
            }
          }
        }
      },
      "UnprocessableEntity": {
        "description": "Unprocessable Entity",
        "content": {
          "application/json": {
            "examples": {
              "Result": {
                "summary": "Unprocessable Entity",
                "value": {
                  "errors": [
                    {
                      "title": "Unprocessable entity",
                      "details": "Invalid confirmation code"
                    }
                  ]
                }
              }
            },
            "schema": {
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "title": {
                        "type": "string",
                        "examples": [
                          "Unprocessable entity",
                          "Record invalid"
                        ]
                      },
                      "details": {
                        "type": "string",
                        "examples": [
                          "File must be under 2 bytes",
                          "Selected country code invalid selected country code of ZX",
                          "Invalid confirmation code"
                        ]
                      },
                      "source": {
                        "type": "object",
                        "properties": {
                          "pointer": {
                            "type": "string",
                            "examples": [
                              "/data/attributes/files",
                              "/data/attributes/selected-country-code"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "type": "object"
            }
          }
        }
      },
      "NotFound": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "examples": {
              "Result": {
                "summary": "Not Found",
                "value": {
                  "errors": [
                    {
                      "title": "Record not found"
                    }
                  ]
                }
              }
            },
            "schema": {
              "properties": {
                "errors": {
                  "items": {
                    "properties": {
                      "title": {
                        "examples": [
                          "Record not found"
                        ],
                        "type": "string"
                      },
                      "details": {
                        "examples": [
                          "data.attributes.inquiry_id is not found"
                        ],
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "examples": {
      "AccountResponse": {
        "value": {
          "data": {
            "type": "account",
            "id": "act_hpNqyAbEG4HeVjZoBRNCMKkA",
            "attributes": {
              "reference-id": "abc-123",
              "created-at": "2023-09-22T17:13:49.000Z",
              "updated-at": "2023-09-23T00:22:19.000Z",
              "redacted-at": null,
              "fields": {
                "name": {
                  "type": "hash",
                  "value": {
                    "first": {
                      "type": "string",
                      "value": "Jane"
                    },
                    "middle": {
                      "type": "string",
                      "value": "Marie"
                    },
                    "last": {
                      "type": "string",
                      "value": "Doe"
                    }
                  }
                },
                "address": {
                  "type": "hash",
                  "value": {
                    "street_1": {
                      "type": "string",
                      "value": "123 Main St"
                    },
                    "street_2": {
                      "type": "string",
                      "value": null
                    },
                    "subdivision": {
                      "type": "string",
                      "value": "California"
                    },
                    "city": {
                      "type": "string",
                      "value": "San Francisco"
                    },
                    "postal_code": {
                      "type": "string",
                      "value": "94111"
                    },
                    "country_code": {
                      "type": "string",
                      "value": "US"
                    }
                  }
                },
                "identification_numbers": {
                  "type": "array",
                  "value": [
                    {
                      "type": "hash",
                      "value": {
                        "identification_class": {
                          "type": "string",
                          "value": "visa"
                        },
                        "identification_number": {
                          "type": "string",
                          "value": "12345678"
                        },
                        "issuing_country": {
                          "type": "string",
                          "value": "US"
                        }
                      }
                    },
                    {
                      "type": "hash",
                      "value": {
                        "identification_class": {
                          "type": "string",
                          "value": "visa"
                        },
                        "identification_number": {
                          "type": "string",
                          "value": "87654321"
                        },
                        "issuing_country": {
                          "type": "string",
                          "value": "UK"
                        }
                      }
                    },
                    {
                      "type": "hash",
                      "value": {
                        "identification_class": {
                          "type": "string",
                          "value": "cct"
                        },
                        "identification_number": {
                          "type": "string",
                          "value": "A12345678"
                        },
                        "issuing_country": {
                          "type": "string",
                          "value": "AF"
                        }
                      }
                    }
                  ]
                },
                "birthdate": {
                  "type": "date",
                  "value": "1994-12-30"
                },
                "phone_number": {
                  "type": "string",
                  "value": "111-222-3333"
                },
                "email_address": {
                  "type": "string",
                  "value": "jane@doe.com"
                },
                "selfie_photo": {
                  "type": "file",
                  "value": null
                }
              },
              "name-first": "Jane",
              "name-middle": "Marie",
              "name-last": "Doe",
              "phone-number": "111-222-3333",
              "email-address": "jane@doe.com",
              "address-street-1": "123 Main St",
              "address-street-2": null,
              "address-city": "San Francisco",
              "address-subdivision": "California",
              "address-postal-code": "94111",
              "country-code": "US",
              "birthdate": "1994-12-30",
              "social-security-number": "123-45-6789",
              "tags": [
                "tag1",
                "tag2"
              ],
              "identification-numbers": {
                "visa": [
                  {
                    "issuing-country": "US",
                    "identification-class": "visa",
                    "identification-number": "12345678",
                    "created-at": "2023-09-23T00:22:09.934Z",
                    "updated-at": "2023-09-23T00:22:19.900Z"
                  },
                  {
                    "issuing-country": "UK",
                    "identification-class": "visa",
                    "identification-number": "87654321",
                    "created-at": "2023-09-23T00:22:09.934Z",
                    "updated-at": "2023-09-23T00:22:19.900Z"
                  }
                ],
                "cct": [
                  {
                    "issuing-country": "AF",
                    "identification-class": "cct",
                    "identification-number": "A12345678",
                    "created-at": "2023-09-23T00:22:19.963Z",
                    "updated-at": "2023-09-23T00:22:19.963Z"
                  }
                ]
              }
            }
          }
        }
      },
      "InquiryListResponse": {
        "value": {
          "data": [
            {
              "type": "inquiry",
              "id": "inq_zEx4jL84ShbUyuwX6AzPSqt6",
              "attributes": {
                "status": "pending",
                "reference-id": "abc-123",
                "note": null,
                "behaviors": {
                  "request-spoof-attempts": 0,
                  "user-agent-spoof-attempts": 0,
                  "distraction-events": 0,
                  "hesitation-baseline": 29677,
                  "hesitation-count": 3,
                  "hesitation-time": 28752,
                  "shortcut-copies": 0,
                  "shortcut-pastes": 0,
                  "autofill-cancels": 0,
                  "autofill-starts": 0,
                  "devtools-open": false,
                  "completion-time": 40.172463903,
                  "hesitation-percentage": 96.88310813087575,
                  "behavior-threat-level": "low"
                },
                "tags": [],
                "creator": "creator@withpersona.com",
                "reviewer-comment": null,
                "created-at": "2023-03-29T19:06:45.000Z",
                "started-at": "2023-03-30T19:07:01.000Z",
                "completed-at": null,
                "failed-at": null,
                "marked-for-review-at": null,
                "decisioned-at": null,
                "expired-at": null,
                "redacted-at": null,
                "previous-step-name": "start",
                "next-step-name": "verification_document",
                "name-first": "Jane",
                "name-middle": "Marie",
                "name-last": "Doe",
                "birthdate": "1995-09-08",
                "address-street-1": "123 Main St",
                "address-street-2": null,
                "address-city": "San Francisco",
                "address-subdivision": "California",
                "address-subdivision-abbr": "CA",
                "address-postal-code": "94111",
                "address-postal-code-abbr": "94111",
                "social-security-number": null,
                "identification-number": null,
                "email-address": "jane@doe.com",
                "phone-number": null,
                "fields": {
                  "name-first": {
                    "type": "string",
                    "value": "Jane"
                  },
                  "name-middle": {
                    "type": "string",
                    "value": "Marie"
                  },
                  "name-last": {
                    "type": "string",
                    "value": "Doe"
                  },
                  "address-street-1": {
                    "type": "string",
                    "value": "123 Main St"
                  },
                  "address-street-2": {
                    "type": "string",
                    "value": null
                  },
                  "address-city": {
                    "type": "string",
                    "value": "San Francisco"
                  },
                  "address-subdivision": {
                    "type": "string",
                    "value": "California"
                  },
                  "address-postal-code": {
                    "type": "string",
                    "value": "94111"
                  },
                  "address-country-code": {
                    "type": "string",
                    "value": "US"
                  },
                  "birthdate": {
                    "type": "date",
                    "value": "1995-09-08"
                  },
                  "email-address": {
                    "type": "string",
                    "value": "jane@doe.com"
                  },
                  "phone-number": {
                    "type": "string",
                    "value": null
                  },
                  "identification-number": {
                    "type": "string",
                    "value": null
                  }
                }
              },
              "relationships": {
                "account": {
                  "data": {
                    "type": "account",
                    "id": "act_n2uq9eKMboaCQzu9ALWYcVdN"
                  }
                },
                "template": {
                  "data": {}
                },
                "inquiry-template": {
                  "data": {
                    "type": "inquiry-template",
                    "id": "itmpl_p8ANAJy9iqadm2buF2xcVgqH"
                  }
                },
                "inquiry-template-version": {
                  "data": {
                    "type": "inquiry-template-version",
                    "id": "itmplv_iXhqfNWqwYLAWs9G8Fm8hPfo"
                  }
                },
                "reviewer": {
                  "data": {}
                },
                "reports": {
                  "data": []
                },
                "verifications": {
                  "data": [
                    {
                      "type": "verification/database",
                      "id": "ver_uHDiwtcx3htjajvEaeMjPQcE"
                    }
                  ]
                },
                "sessions": {
                  "data": []
                },
                "documents": {
                  "data": []
                },
                "selfies": {
                  "data": []
                }
              }
            }
          ],
          "links": {
            "prev": null,
            "next": "/api/v1/inquiries?page%5Bafter%5D=inq_ByBdXDqUrguLAHjGZMuDZLCx"
          }
        }
      },
      "InquiryResponse": {
        "value": {
          "data": {
            "type": "inquiry",
            "id": "inq_zEx4jL84ShbUyuwX6AzPSqt6",
            "attributes": {
              "status": "pending",
              "reference-id": "abc-123",
              "note": null,
              "behaviors": {
                "request-spoof-attempts": 0,
                "user-agent-spoof-attempts": 0,
                "distraction-events": 0,
                "hesitation-baseline": 29677,
                "hesitation-count": 3,
                "hesitation-time": 28752,
                "shortcut-copies": 0,
                "shortcut-pastes": 0,
                "autofill-cancels": 0,
                "autofill-starts": 0,
                "devtools-open": false,
                "completion-time": 40.172463903,
                "hesitation-percentage": 96.88310813087575,
                "behavior-threat-level": "low"
              },
              "tags": [],
              "creator": "creator@withpersona.com",
              "reviewer-comment": null,
              "created-at": "2023-03-29T19:06:45.000Z",
              "started-at": "2023-03-30T19:07:01.000Z",
              "completed-at": null,
              "failed-at": null,
              "marked-for-review-at": null,
              "decisioned-at": null,
              "expired-at": null,
              "redacted-at": null,
              "previous-step-name": "start",
              "next-step-name": "verification_document",
              "name-first": "Jane",
              "name-middle": "Marie",
              "name-last": "Doe",
              "birthdate": "1995-09-08",
              "address-street-1": "123 Main St",
              "address-street-2": null,
              "address-city": "San Francisco",
              "address-subdivision": "California",
              "address-subdivision-abbr": "CA",
              "address-postal-code": "94111",
              "address-postal-code-abbr": "94111",
              "social-security-number": null,
              "identification-number": null,
              "email-address": "jane@doe.com",
              "phone-number": null,
              "fields": {
                "name-first": {
                  "type": "string",
                  "value": "Jane"
                },
                "name-middle": {
                  "type": "string",
                  "value": "Marie"
                },
                "name-last": {
                  "type": "string",
                  "value": "Doe"
                },
                "address-street-1": {
                  "type": "string",
                  "value": "123 Main St"
                },
                "address-street-2": {
                  "type": "string",
                  "value": null
                },
                "address-city": {
                  "type": "string",
                  "value": "San Francisco"
                },
                "address-subdivision": {
                  "type": "string",
                  "value": "California"
                },
                "address-postal-code": {
                  "type": "string",
                  "value": "94111"
                },
                "address-country-code": {
                  "type": "string",
                  "value": "US"
                },
                "birthdate": {
                  "type": "date",
                  "value": "1995-09-08"
                },
                "email-address": {
                  "type": "string",
                  "value": "jane@doe.com"
                },
                "phone-number": {
                  "type": "string",
                  "value": null
                },
                "identification-number": {
                  "type": "string",
                  "value": null
                }
              }
            },
            "relationships": {
              "account": {
                "data": {
                  "type": "account",
                  "id": "act_n2uq9eKMboaCQzu9ALWYcVdN"
                }
              },
              "template": {
                "data": {}
              },
              "inquiry-template": {
                "data": {
                  "type": "inquiry-template",
                  "id": "itmpl_p8ANAJy9iqadm2buF2xcVgqH"
                }
              },
              "inquiry-template-version": {
                "data": {
                  "type": "inquiry-template-version",
                  "id": "itmplv_iXhqfNWqwYLAWs9G8Fm8hPfo"
                }
              },
              "reviewer": {
                "data": {}
              },
              "reports": {
                "data": []
              },
              "verifications": {
                "data": [
                  {
                    "type": "verification/database",
                    "id": "ver_uHDiwtcx3htjajvEaeMjPQcE"
                  }
                ]
              },
              "sessions": {
                "data": []
              },
              "documents": {
                "data": []
              },
              "selfies": {
                "data": []
              }
            }
          }
        }
      },
      "InquiryRetrieveResponse": {
        "value": {
          "data": {
            "type": "inquiry",
            "id": "inq_zEx4jL84ShbUyuwX6AzPSqt6",
            "attributes": {
              "status": "pending",
              "reference-id": "abc-123",
              "note": null,
              "behaviors": {
                "request-spoof-attempts": 0,
                "user-agent-spoof-attempts": 0,
                "distraction-events": 0,
                "hesitation-baseline": 29677,
                "hesitation-count": 3,
                "hesitation-time": 28752,
                "shortcut-copies": 0,
                "shortcut-pastes": 0,
                "autofill-cancels": 0,
                "autofill-starts": 0,
                "devtools-open": false,
                "completion-time": 40.172463903,
                "hesitation-percentage": 96.88310813087575,
                "behavior-threat-level": "low"
              },
              "tags": [],
              "creator": "creator@withpersona.com",
              "reviewer-comment": null,
              "created-at": "2023-03-29T19:06:45.000Z",
              "started-at": "2023-03-30T19:07:01.000Z",
              "completed-at": null,
              "failed-at": null,
              "marked-for-review-at": null,
              "decisioned-at": null,
              "expired-at": null,
              "redacted-at": null,
              "previous-step-name": "start",
              "next-step-name": "verification_document",
              "name-first": "Jane",
              "name-middle": "Marie",
              "name-last": "Doe",
              "birthdate": "1995-09-08",
              "address-street-1": "123 Main St",
              "address-street-2": null,
              "address-city": "San Francisco",
              "address-subdivision": "California",
              "address-subdivision-abbr": "CA",
              "address-postal-code": "94111",
              "address-postal-code-abbr": "94111",
              "social-security-number": null,
              "identification-number": null,
              "email-address": "jane@doe.com",
              "phone-number": null,
              "fields": {
                "name-first": {
                  "type": "string",
                  "value": "Jane"
                },
                "name-middle": {
                  "type": "string",
                  "value": "Marie"
                },
                "name-last": {
                  "type": "string",
                  "value": "Doe"
                },
                "address-street-1": {
                  "type": "string",
                  "value": "123 Main St"
                },
                "address-street-2": {
                  "type": "string",
                  "value": null
                },
                "address-city": {
                  "type": "string",
                  "value": "San Francisco"
                },
                "address-subdivision": {
                  "type": "string",
                  "value": "California"
                },
                "address-postal-code": {
                  "type": "string",
                  "value": "94111"
                },
                "address-country-code": {
                  "type": "string",
                  "value": "US"
                },
                "birthdate": {
                  "type": "date",
                  "value": "1995-09-08"
                },
                "email-address": {
                  "type": "string",
                  "value": "jane@doe.com"
                },
                "phone-number": {
                  "type": "string",
                  "value": null
                },
                "identification-number": {
                  "type": "string",
                  "value": null
                }
              }
            },
            "relationships": {
              "account": {
                "data": {
                  "type": "account",
                  "id": "act_n2uq9eKMboaCQzu9ALWYcVdN"
                }
              },
              "template": {
                "data": {}
              },
              "inquiry-template": {
                "data": {
                  "type": "inquiry-template",
                  "id": "itmpl_p8ANAJy9iqadm2buF2xcVgqH"
                }
              },
              "inquiry-template-version": {
                "data": {
                  "type": "inquiry-template-version",
                  "id": "itmplv_iXhqfNWqwYLAWs9G8Fm8hPfo"
                }
              },
              "reviewer": {
                "data": {}
              },
              "reports": {
                "data": []
              },
              "verifications": {
                "data": [
                  {
                    "type": "verification/database",
                    "id": "ver_uHDiwtcx3htjajvEaeMjPQcE"
                  }
                ]
              },
              "sessions": {
                "data": []
              },
              "documents": {
                "data": []
              },
              "selfies": {
                "data": []
              }
            }
          },
          "included": [
            {
              "type": "inquiry-session",
              "id": "iqse_ABC123",
              "attributes": {
                "status": "expired",
                "created-at": "2023-07-25T04:15:20.000Z",
                "ip-address": "127.0.0.1",
                "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36",
                "os-name": "Mac",
                "os-full-version": "10.15.7",
                "device-type": "desktop",
                "device-name": null,
                "browser-name": "Chrome",
                "browser-full-version": "115.0.0.0",
                "mobile-sdk-name": null,
                "mobile-sdk-full-version": null,
                "is-proxy": false,
                "is-tor": false,
                "is-datacenter": false,
                "threat-level": "low",
                "country-code": "US",
                "country-name": "United States",
                "region-code": "CA",
                "region-name": "California",
                "latitude": 37.7688,
                "longitude": -122.262
              },
              "relationships": {
                "inquiry": {
                  "data": {
                    "type": "inquiry",
                    "id": "inq_ABC123"
                  }
                }
              }
            },
            {
              "type": "inquiry-template",
              "id": "itmpl_ABC123",
              "attributes": {
                "status": "active",
                "name": "Twilio Desktop"
              },
              "relationships": {
                "latest-published-version": {
                  "data": {
                    "type": "inquiry-template-version",
                    "id": "itmplv_ABC123"
                  }
                }
              }
            }
          ]
        }
      },
      "InquiryOneTimeLinkResponse": {
        "value": {
          "data": {
            "type": "inquiry",
            "id": "inq_zEx4jL84ShbUyuwX6AzPSqt6",
            "attributes": {
              "status": "pending",
              "reference-id": "abc-123",
              "note": null,
              "behaviors": {
                "request-spoof-attempts": 0,
                "user-agent-spoof-attempts": 0,
                "distraction-events": 0,
                "hesitation-baseline": 29677,
                "hesitation-count": 3,
                "hesitation-time": 28752,
                "shortcut-copies": 0,
                "shortcut-pastes": 0,
                "autofill-cancels": 0,
                "autofill-starts": 0,
                "devtools-open": false,
                "completion-time": 40.172463903,
                "hesitation-percentage": 96.88310813087575,
                "behavior-threat-level": "low"
              },
              "tags": [],
              "creator": "creator@withpersona.com",
              "reviewer-comment": null,
              "created-at": "2023-03-29T19:06:45.000Z",
              "started-at": "2023-03-30T19:07:01.000Z",
              "completed-at": null,
              "failed-at": null,
              "marked-for-review-at": null,
              "decisioned-at": null,
              "expired-at": null,
              "redacted-at": null,
              "previous-step-name": "start",
              "next-step-name": "verification_document",
              "name-first": "Jane",
              "name-middle": "Marie",
              "name-last": "Doe",
              "birthdate": "1995-09-08",
              "address-street-1": "123 Main St",
              "address-street-2": null,
              "address-city": "San Francisco",
              "address-subdivision": "California",
              "address-subdivision-abbr": "CA",
              "address-postal-code": "94111",
              "address-postal-code-abbr": "94111",
              "social-security-number": null,
              "identification-number": null,
              "email-address": "jane@doe.com",
              "phone-number": null,
              "fields": {
                "name-first": {
                  "type": "string",
                  "value": "Jane"
                },
                "name-middle": {
                  "type": "string",
                  "value": "Marie"
                },
                "name-last": {
                  "type": "string",
                  "value": "Doe"
                },
                "address-street-1": {
                  "type": "string",
                  "value": "123 Main St"
                },
                "address-street-2": {
                  "type": "string",
                  "value": null
                },
                "address-city": {
                  "type": "string",
                  "value": "San Francisco"
                },
                "address-subdivision": {
                  "type": "string",
                  "value": "California"
                },
                "address-postal-code": {
                  "type": "string",
                  "value": "94111"
                },
                "address-country-code": {
                  "type": "string",
                  "value": "US"
                },
                "birthdate": {
                  "type": "date",
                  "value": "1995-09-08"
                },
                "email-address": {
                  "type": "string",
                  "value": "jane@doe.com"
                },
                "phone-number": {
                  "type": "string",
                  "value": null
                },
                "identification-number": {
                  "type": "string",
                  "value": null
                }
              }
            },
            "relationships": {
              "account": {
                "data": {
                  "type": "account",
                  "id": "act_n2uq9eKMboaCQzu9ALWYcVdN"
                }
              },
              "template": {
                "data": {}
              },
              "inquiry-template": {
                "data": {
                  "type": "inquiry-template",
                  "id": "itmpl_p8ANAJy9iqadm2buF2xcVgqH"
                }
              },
              "inquiry-template-version": {
                "data": {
                  "type": "inquiry-template-version",
                  "id": "itmplv_iXhqfNWqwYLAWs9G8Fm8hPfo"
                }
              },
              "reviewer": {
                "data": {}
              },
              "reports": {
                "data": []
              },
              "verifications": {
                "data": [
                  {
                    "type": "verification/database",
                    "id": "ver_uHDiwtcx3htjajvEaeMjPQcE"
                  }
                ]
              },
              "sessions": {
                "data": []
              },
              "documents": {
                "data": []
              },
              "selfies": {
                "data": []
              }
            }
          },
          "meta": {
            "one-time-link": "https://withpersona.com/verify?code=us1-asdf",
            "one-time-link-short": "https://perso.na/verify?code=ABC123"
          }
        }
      },
      "InquiryResumeResponse": {
        "value": {
          "data": {
            "type": "inquiry",
            "id": "inq_zEx4jL84ShbUyuwX6AzPSqt6",
            "attributes": {
              "status": "pending",
              "reference-id": "abc-123",
              "note": null,
              "behaviors": {
                "request-spoof-attempts": 0,
                "user-agent-spoof-attempts": 0,
                "distraction-events": 0,
                "hesitation-baseline": 29677,
                "hesitation-count": 3,
                "hesitation-time": 28752,
                "shortcut-copies": 0,
                "shortcut-pastes": 0,
                "autofill-cancels": 0,
                "autofill-starts": 0,
                "devtools-open": false,
                "completion-time": 40.172463903,
                "hesitation-percentage": 96.88310813087575,
                "behavior-threat-level": "low"
              },
              "tags": [],
              "creator": "creator@withpersona.com",
              "reviewer-comment": null,
              "created-at": "2023-03-29T19:06:45.000Z",
              "started-at": "2023-03-30T19:07:01.000Z",
              "completed-at": null,
              "failed-at": null,
              "marked-for-review-at": null,
              "decisioned-at": null,
              "expired-at": null,
              "redacted-at": null,
              "previous-step-name": "start",
              "next-step-name": "verification_document",
              "name-first": "Jane",
              "name-middle": "Marie",
              "name-last": "Doe",
              "birthdate": "1995-09-08",
              "address-street-1": "123 Main St",
              "address-street-2": null,
              "address-city": "San Francisco",
              "address-subdivision": "California",
              "address-subdivision-abbr": "CA",
              "address-postal-code": "94111",
              "address-postal-code-abbr": "94111",
              "social-security-number": null,
              "identification-number": null,
              "email-address": "jane@doe.com",
              "phone-number": null,
              "fields": {
                "name-first": {
                  "type": "string",
                  "value": "Jane"
                },
                "name-middle": {
                  "type": "string",
                  "value": "Marie"
                },
                "name-last": {
                  "type": "string",
                  "value": "Doe"
                },
                "address-street-1": {
                  "type": "string",
                  "value": "123 Main St"
                },
                "address-street-2": {
                  "type": "string",
                  "value": null
                },
                "address-city": {
                  "type": "string",
                  "value": "San Francisco"
                },
                "address-subdivision": {
                  "type": "string",
                  "value": "California"
                },
                "address-postal-code": {
                  "type": "string",
                  "value": "94111"
                },
                "address-country-code": {
                  "type": "string",
                  "value": "US"
                },
                "birthdate": {
                  "type": "date",
                  "value": "1995-09-08"
                },
                "email-address": {
                  "type": "string",
                  "value": "jane@doe.com"
                },
                "phone-number": {
                  "type": "string",
                  "value": null
                },
                "identification-number": {
                  "type": "string",
                  "value": null
                }
              }
            },
            "relationships": {
              "account": {
                "data": {
                  "type": "account",
                  "id": "act_n2uq9eKMboaCQzu9ALWYcVdN"
                }
              },
              "template": {
                "data": {}
              },
              "inquiry-template": {
                "data": {
                  "type": "inquiry-template",
                  "id": "itmpl_p8ANAJy9iqadm2buF2xcVgqH"
                }
              },
              "inquiry-template-version": {
                "data": {
                  "type": "inquiry-template-version",
                  "id": "itmplv_iXhqfNWqwYLAWs9G8Fm8hPfo"
                }
              },
              "reviewer": {
                "data": {}
              },
              "reports": {
                "data": []
              },
              "verifications": {
                "data": [
                  {
                    "type": "verification/database",
                    "id": "ver_uHDiwtcx3htjajvEaeMjPQcE"
                  }
                ]
              },
              "sessions": {
                "data": []
              },
              "documents": {
                "data": []
              },
              "selfies": {
                "data": []
              }
            }
          },
          "meta": {
            "session-token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJpcXNlX1Q4UHJxcG9FaHdoVVYxd0hSZXVVOW9mcyIsImF1ZCI6InBlcnNvbmEtdmVyaWZ5IiwiaXNzIjoic3RhZ2luZy53aXRocGVyc29uYS5jb20iLCJpYXQiOjE1NzM4NTI2NjEsIm5iZiI6MTU3Mzg1MjY2MSwiZXhwIjoxNTczOTM5MDYxLCJqdGkiOiI5NWRlNjhkOS1hZjI4LTRiMzItOWIxYi03MjA4MTg3NTI3N2IiLCJzaWQiOiJpcXNlX1Q4UHJxcG9FaHdoVVYxd0hSZXVVOW9mcyJ9.LN6DEnfjP5cZoZ3w41RgyX5QVmutmjHja_bRHOmDjg0"
          }
        }
      },
      "InquirySessionResponse": {
        "value": {
          "data": {
            "type": "inquiry-session",
            "id": "iqse_ABC123",
            "attributes": {
              "status": "expired",
              "created-at": "2023-07-25T04:15:20.000Z",
              "ip-address": "127.0.0.1",
              "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36",
              "os-name": "Mac",
              "os-full-version": "10.15.7",
              "device-type": "desktop",
              "device-name": null,
              "browser-name": "Chrome",
              "browser-full-version": "115.0.0.0",
              "mobile-sdk-name": null,
              "mobile-sdk-full-version": null,
              "is-proxy": false,
              "is-tor": false,
              "is-datacenter": false,
              "threat-level": "low",
              "country-code": "US",
              "country-name": "United States",
              "region-code": "CA",
              "region-name": "California",
              "latitude": 37.7688,
              "longitude": -122.262
            },
            "relationships": {
              "inquiry": {
                "data": {
                  "type": "inquiry",
                  "id": "inq_ABC123"
                }
              }
            }
          }
        }
      },
      "VerificationDatabaseResponse": {
        "value": {
          "data": {
            "type": "verification/database",
            "id": "ver_ABC123",
            "attributes": {
              "status": "initiated",
              "created-at": "2023-11-03T17:37:06.000Z",
              "created-at-ts": 1699033026,
              "submitted-at": null,
              "submitted-at-ts": null,
              "completed-at": null,
              "completed-at-ts": null,
              "country-code": "US",
              "name-first": "Jane",
              "name-middle": null,
              "name-last": "Doe",
              "address-street-1": "555 Beverly Hills",
              "address-street-2": "Apartment 123",
              "address-city": "Los Angeles",
              "address-subdivision": "California",
              "address-postal-code": "55555",
              "normalized-address-street-1": "555 Beverly Hills",
              "normalized-address-street-2": "Apt 123",
              "normalized-address-city": "Los Angeles",
              "normalized-address-subdivision": "CA",
              "normalized-address-postal-code": "55555",
              "birthdate": "1999-01-01",
              "identification-number": null,
              "document-number": null,
              "phone-number": null,
              "email-address": "jane@doe.com",
              "checks": []
            },
            "relationships": {
              "inquiry": {
                "data": {
                  "type": "inquiry",
                  "id": "inq_ABC123"
                }
              },
              "template": {
                "data": null
              },
              "inquiry-template-version": {
                "data": {
                  "type": "inquiry-template-version",
                  "id": "itmplv_ABC123"
                }
              },
              "inquiry-template": {
                "data": {
                  "type": "inquiry-template",
                  "id": "itmpl_ABC123"
                }
              },
              "verification-template": {
                "data": {
                  "type": "verification-template/database",
                  "id": "vtmpl_ABC123"
                }
              },
              "verification-template-version": {
                "data": {
                  "type": "verification-template-version/database",
                  "id": "vtmplv_ABC123"
                }
              }
            }
          }
        }
      },
      "VerificationDocumentResponse": {
        "value": {
          "data": {
            "type": "verification/document",
            "id": "ver_ABC123",
            "attributes": {
              "status": "initiated",
              "created-at": "2023-11-15T16:21:09.000Z",
              "created-at-ts": 1700065269,
              "submitted-at": null,
              "submitted-at-ts": null,
              "completed-at": null,
              "completed-at-ts": null,
              "country-code": null,
              "checks": [
                {
                  "name": "document_unprocessable_submission_detection",
                  "status": "passed",
                  "reasons": [],
                  "requirement": "required",
                  "metadata": {}
                }
              ],
              "fields": {},
              "files": [
                {
                  "filename": "multipage_example.pdf",
                  "url": "https://files.withpersona.com/multipage_example.pdf?access_token=ACCESS_ABC123",
                  "byte-size": 123456
                }
              ],
              "files-normalized": [
                {
                  "filename": "multipage_example.pdf",
                  "url": "https://files.withpersona.com/multipage_example.pdf?access_token=ACCESS_ABC123",
                  "byte-size": 123456
                }
              ],
              "extraction-responses": []
            },
            "relationships": {
              "inquiry": {
                "data": {
                  "type": "inquiry",
                  "id": "inq_ABC123"
                }
              },
              "template": {
                "data": {
                  "type": "template",
                  "id": "tmpl_ABC123"
                }
              },
              "inquiry-template-version": {
                "data": null
              },
              "inquiry-template": {
                "data": null
              },
              "verification-template-version": {
                "data": {
                  "type": "verification-template-version/document",
                  "id": "vtmplv_ABC123"
                }
              },
              "verification-template": {
                "data": {
                  "type": "verification-template/document",
                  "id": "vtmpl_ABC123"
                }
              },
              "document": {
                "data": {
                  "type": "document/generic",
                  "id": "doc_BDxMaFYynbVrKPiGdfv4aJyC"
                }
              }
            }
          }
        }
      },
      "VerificationDocumentSubmittedResponse": {
        "value": {
          "data": {
            "type": "verification/document",
            "id": "ver_ABC123",
            "attributes": {
              "status": "submitted",
              "created-at": "2023-11-15T16:21:09.000Z",
              "created-at-ts": 1700065269,
              "submitted-at": "2023-11-15T16:21:09.000Z",
              "submitted-at-ts": 1700065269,
              "completed-at": null,
              "completed-at-ts": null,
              "country-code": null,
              "checks": [
                {
                  "name": "document_unprocessable_submission_detection",
                  "status": "passed",
                  "reasons": [],
                  "requirement": "required",
                  "metadata": {}
                }
              ],
              "fields": {},
              "files": [
                {
                  "filename": "multipage_example.pdf",
                  "url": "https://files.withpersona.com/multipage_example.pdf?access_token=ACCESS_ABC123",
                  "byte-size": 123456
                }
              ],
              "files-normalized": [
                {
                  "filename": "multipage_example.pdf",
                  "url": "https://files.withpersona.com/multipage_example.pdf?access_token=ACCESS_ABC123",
                  "byte-size": 123456
                }
              ],
              "extraction-responses": []
            },
            "relationships": {
              "inquiry": {
                "data": {
                  "type": "inquiry",
                  "id": "inq_ABC123"
                }
              },
              "template": {
                "data": {
                  "type": "template",
                  "id": "tmpl_ABC123"
                }
              },
              "inquiry-template-version": {
                "data": null
              },
              "inquiry-template": {
                "data": null
              },
              "verification-template-version": {
                "data": {
                  "type": "verification-template-version/document",
                  "id": "vtmplv_ABC123"
                }
              },
              "verification-template": {
                "data": {
                  "type": "verification-template/document",
                  "id": "vtmpl_ABC123"
                }
              },
              "document": {
                "data": {
                  "type": "document/generic",
                  "id": "doc_BDxMaFYynbVrKPiGdfv4aJyC"
                }
              }
            }
          }
        }
      },
      "VerificationEmailAddressResponse": {
        "value": {
          "data": {
            "type": "verification/email-address",
            "id": "ver_ABC123",
            "attributes": {
              "status": "initiated",
              "created-at": "2023-11-03T17:37:06.000Z",
              "created-at-ts": 1699033026,
              "submitted-at": null,
              "submitted-at-ts": null,
              "completed-at": null,
              "completed-at-ts": null,
              "country-code": "US",
              "email-address": "jane@doe.com",
              "confirmation-code": "12345"
            },
            "relationships": {
              "inquiry": {
                "data": {
                  "type": "inquiry",
                  "id": "inq_ABC123"
                }
              },
              "template": {
                "data": null
              },
              "inquiry-template-version": {
                "data": {
                  "type": "inquiry-template-version",
                  "id": "itmplv_ABC123"
                }
              },
              "inquiry-template": {
                "data": {
                  "type": "inquiry-template",
                  "id": "itmpl_ABC123"
                }
              },
              "verification-template": {
                "data": {
                  "type": "verification-template/email-address",
                  "id": "vtmpl_ABC123"
                }
              },
              "verification-template-version": {
                "data": {
                  "type": "verification-template-version/email-address",
                  "id": "vtmplv_ABC123"
                }
              }
            }
          }
        }
      },
      "VerificationPhoneNumberResponse": {
        "value": {
          "data": {
            "type": "verification/phone-number",
            "id": "ver_ABC123",
            "attributes": {
              "status": "initiated",
              "created-at": "2023-11-03T17:37:06.000Z",
              "created-at-ts": 1699033026,
              "submitted-at": null,
              "submitted-at-ts": null,
              "completed-at": null,
              "completed-at-ts": null,
              "country-code": "US",
              "phone-number": "+14169671111",
              "confirmation-code": "12345",
              "metadata": {}
            },
            "relationships": {
              "inquiry": {
                "data": {
                  "type": "inquiry",
                  "id": "inq_ABC123"
                }
              },
              "template": {
                "data": null
              },
              "inquiry-template-version": {
                "data": {
                  "type": "inquiry-template-version",
                  "id": "itmplv_ABC123"
                }
              },
              "inquiry-template": {
                "data": {
                  "type": "inquiry-template",
                  "id": "itmpl_ABC123"
                }
              },
              "verification-template": {
                "data": {
                  "type": "verification-template/email-address",
                  "id": "vtmpl_ABC123"
                }
              },
              "verification-template-version": {
                "data": {
                  "type": "verification-template-version/email-address",
                  "id": "vtmplv_ABC123"
                }
              }
            }
          }
        }
      },
      "WebhookResponseCreated": {
        "value": {
          "data": {
            "type": "webhook",
            "id": "wbh_ABC123",
            "attributes": {
              "status": "disabled",
              "url": "https://withpersona.com",
              "secret": "wbhsec_abcdefgh-1234-5678-9ijk-lmnopqrstuvw",
              "secrets": [
                {
                  "value": "wbhsec_abcdefgh-1234-5678-9ijk-lmnopqrstuvw",
                  "expires-at": null
                }
              ],
              "api-version": "2023-01-05",
              "api-key-inflection": "kebab",
              "api-attributes-blocklist": [
                "address-*",
                "name-last",
                "/data/attributes/fields/*-number"
              ],
              "file-access-token-expires-in": 21600,
              "enabled-events": [
                "account.created",
                "verification.created"
              ],
              "payload-filter": {
                "data": {
                  "relationships": {
                    "inquiry-template": {
                      "data": {
                        "id": "itmpl_abc123def456"
                      }
                    }
                  }
                }
              },
              "created-at": "2023-08-17T23:18:13.000Z"
            }
          }
        }
      },
      "WebhookResponseDisabled": {
        "value": {
          "data": {
            "type": "webhook",
            "id": "wbh_ABC123",
            "attributes": {
              "status": "disabled",
              "url": "https://withpersona.com",
              "api-version": "2023-01-05",
              "api-key-inflection": "kebab",
              "api-attributes-blocklist": [
                "address-*",
                "name-last",
                "/data/attributes/fields/*-number"
              ],
              "file-access-token-expires-in": 21600,
              "enabled-events": [
                "account.created",
                "verification.created"
              ],
              "payload-filter": {
                "data": {
                  "relationships": {
                    "inquiry-template": {
                      "data": {
                        "id": "itmpl_abc123def456"
                      }
                    }
                  }
                }
              },
              "created-at": "2023-08-17T23:18:13.000Z"
            }
          }
        }
      },
      "WebhookResponseArchived": {
        "value": {
          "data": {
            "type": "webhook",
            "id": "wbh_ABC123",
            "attributes": {
              "status": "archived",
              "url": "https://withpersona.com",
              "api-version": "2023-01-05",
              "api-key-inflection": "kebab",
              "api-attributes-blocklist": [
                "address-*",
                "name-last",
                "/data/attributes/fields/*-number"
              ],
              "file-access-token-expires-in": 21600,
              "enabled-events": [
                "account.created",
                "verification.created"
              ],
              "payload-filter": {
                "data": {
                  "relationships": {
                    "inquiry-template": {
                      "data": {
                        "id": "itmpl_abc123def456"
                      }
                    }
                  }
                }
              },
              "created-at": "2023-08-17T23:18:13.000Z"
            }
          }
        }
      },
      "WebhookResponseEnabled": {
        "value": {
          "data": {
            "type": "webhook",
            "id": "wbh_ABC123",
            "attributes": {
              "status": "enabled",
              "url": "https://withpersona.com",
              "api-version": "2023-01-05",
              "api-key-inflection": "kebab",
              "api-attributes-blocklist": [
                "address-*",
                "name-last",
                "/data/attributes/fields/*-number"
              ],
              "file-access-token-expires-in": 21600,
              "enabled-events": [
                "account.created",
                "verification.created"
              ],
              "payload-filter": {
                "data": {
                  "relationships": {
                    "inquiry-template": {
                      "data": {
                        "id": "itmpl_abc123def456"
                      }
                    }
                  }
                }
              },
              "created-at": "2023-08-17T23:18:13.000Z"
            }
          }
        }
      }
    },
    "requestBodies": {
      "ApiKeyRequest": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "data": {
                  "properties": {
                    "attributes": {
                      "properties": {
                        "name": {
                          "description": "Human-readable name of the API key",
                          "type": "string"
                        },
                        "note": {
                          "description": "Human readable context about the use of the API key",
                          "type": "string"
                        },
                        "api-version": {
                          "description": "Server API version",
                          "type": "string"
                        },
                        "api-key-inflection": {
                          "description": "Default API response key inflection",
                          "type": "string"
                        },
                        "api-attributes-blocklist": {
                          "description": "Attributes blocked from API responses",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "ip-address-allowlist": {
                          "description": "IP addresses permitted for use by the API key",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "permissions": {
                          "description": "Abilities permitted to the API key",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "file-access-token-expires-in": {
                          "description": "How soon any file access tokens returned in API responses expire",
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "ListItemImporterCSVRequest": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "properties": {
                "data": {
                  "properties": {
                    "attributes": {
                      "properties": {
                        "file": {
                          "type": "string",
                          "contentMediaType": "application/octet-stream"
                        },
                        "list-id": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "application/json": {
            "schema": {
              "properties": {
                "data": {
                  "properties": {
                    "attributes": {
                      "properties": {
                        "file": {
                          "properties": {
                            "data": {
                              "description": "Base64 encoded file",
                              "format": "binary",
                              "type": "string"
                            },
                            "filename": {
                              "description": "Name of file",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "list-id": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "InquiriesTagRequest": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "meta": {
                  "properties": {
                    "tag-name": {
                      "type": "string",
                      "examples": [
                        "apple",
                        "orange",
                        "banana"
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "InquiriesReviewRequest": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "meta": {
                  "properties": {
                    "comment": {
                      "description": "Unstructured comment for auditing purposes",
                      "examples": [
                        "A comment about this inquiry"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "WebhookCreateRequest": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "data": {
                  "properties": {
                    "attributes": {
                      "properties": {
                        "url": {
                          "description": "URL to which webhook events are forwarded",
                          "type": "string"
                        },
                        "enabled-events": {
                          "description": "Supported events that you want to receive webhooks for <br> Set `*` to enable all events",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "api-version": {
                          "description": "Server API version",
                          "example": "2023-01-05",
                          "type": "string"
                        },
                        "api-key-inflection": {
                          "description": "Default API response key inflection <br>Options include <ul><li>`kebab`</li><li>`camel`</li><li>`snake`</li></ul>",
                          "example": "kebab",
                          "type": "string"
                        },
                        "api-attributes-blocklist": {
                          "description": "Attributes blocked from API responses",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "file-access-token-expires-in": {
                          "description": "How soon any file access tokens returned in API responses expire",
                          "example": 21600,
                          "type": "integer"
                        },
                        "payload-filter": {
                          "type": "object",
                          "description": "Filter events based on its payload data <br> <b>Only available for enterprise clients</b>",
                          "properties": {
                            "data": {
                              "type": "string",
                              "format": "json"
                            }
                          }
                        }
                      },
                      "required": [
                        "url",
                        "enabled-events"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "attributes"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "data"
              ],
              "type": "object"
            }
          }
        }
      },
      "WebhookUpdateRequest": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "data": {
                  "properties": {
                    "attributes": {
                      "properties": {
                        "url": {
                          "description": "URL to which webhook events are forwarded",
                          "type": "string"
                        },
                        "enabled-events": {
                          "description": "Supported events that you want to receive webhooks for <br> Set `*` to enable all events",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "api-version": {
                          "description": "Server API version",
                          "example": "2023-01-05",
                          "type": "string"
                        },
                        "api-key-inflection": {
                          "description": "Default API response key inflection <br>Options include <ul><li>`kebab`</li><li>`camel`</li><li>`snake`</li></ul>",
                          "example": "kebab",
                          "type": "string"
                        },
                        "api-attributes-blocklist": {
                          "description": "Attributes blocked from API responses",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "file-access-token-expires-in": {
                          "description": "How soon any file access tokens returned in API responses expire",
                          "example": 21600,
                          "type": "integer"
                        },
                        "payload-filter": {
                          "type": "object",
                          "description": "Filter events based on its payload data <br> <b>Only available for enterprise clients</b>",
                          "properties": {
                            "data": {
                              "type": "string",
                              "format": "json"
                            }
                          }
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        }
      }
    }
  }
}